{"name": "student grade prediction using decisiontree ", "full_name": " h1 Step 1 Acquiring the data h1 Step 2 Data preparation h1 Step 3 Data analyzing h1 Step 4 Build Machine Learning Model ", "stargazers_count": 0, "forks_count": 0, "description": "administrative or police at_home or other reason reason to choose this school nominal close to home school reputation course preference or other guardian student s guardian nominal mother father or other traveltime home to school travel time numeric 1 1 hour studytime weekly study time numeric 1 10 hours failures number of past class failures numeric n if 1 n 3 else 4 schoolsup extra educational support binary yes or no famsup family educational support binary yes or no paid extra paid classes within the course subject Math or Portuguese binary yes or no activities extra curricular activities binary yes or no nursery attended nursery school binary yes or no higher wants to take higher education binary yes or no internet Internet access at home binary yes or no romantic with a romantic relationship binary yes or no famrel quality of family relationships numeric from 1 very bad to 5 excellent freetime free time after school numeric from 1 very low to 5 very high goout going out with friends numeric from 1 very low to 5 very high Dalc workday alcohol consumption numeric from 1 very low to 5 very high Walc weekend alcohol consumption numeric from 1 very low to 5 very high health current health status numeric from 1 very bad to 5 very good absences number of school absences numeric from 0 to 93 G1 first period grade numeric from 0 to 20 G2 second period grade numeric from 0 to 20 G3 final grade numeric from 0 to 20 How many unique data From the data above let s create one more column to get the average grade from G1 to G3 3 years average Now lets create a grading based on its G Average Above 90 Grade ABetween 70 90 Grade BBelow 70 Grade CNext we can drop school name and age feature because it is not a computational value Step 3. Build Machine Learning ModelIn this project we will use DecisionTree Algorithm to predict the result. Now we can collect all predictive feature columns and then remove grades from it because grades is our targetThen we can copy those features to X also for the target to y Next we can split the train data and test data using train_test_split functionThen we can create the classifier We can also view how the grade_classifier divide the logic using pydotplus librarylet s create our prediction Finally we can measure the accuracy of our classifier Well accuracy score of 0. Create a list to store the data For each row in the column if more than a value Append a letter grade else if more than a value Append a letter grade else if more than a value Append a letter grade Create a column from the list for yes no values map the sex data map the address data map the famili size data map the parent s status map the parent s job map the reason data map the guardian data map the grades data. 775 is not bad we can also tune the hyperparameters to increase the accuracy score. administrative or police at_home or other Fjob father s job nominal teacher health care related civil services e. Data preparationCheck for NULL values OK great so there are no NULL values let s see the data preview There are 33 columns school student s school binary GP Gabriel Pereira or MS Mousinho da Silveira sex student s sex binary F female or M male age student s age numeric from 15 to 22 address student s home address type binary U urban or R rural famsize family size binary LE3 less or equal to 3 or GT3 greater than 3 Pstatus parent s cohabitation status binary T living together or A apart Medu mother s education numeric 0 none 1 primary education 4th grade 2 \u00e2 5th to 9th grade 3 \u00e2 secondary education or 4 \u00e2 higher education Fedu father s education numeric 0 none 1 primary education 4th grade 2 \u00e2 5th to 9th grade 3 \u00e2 secondary education or 4 \u00e2 higher education Mjob mother s job nominal teacher health care related civil services e. Acquiring the dataLet s import the necessary libraries Import the CSV file Step 2. To be able to work with DecisionTree The sklearn library requires all computational values to be numerical so first we should convert those categorical values to numerical valuesThen for the rest categorical values Let s see the unique data again just to make sure that we have done the mapping successfully. Data analyzingOK to have a better picture of the data let s describe the values Some insights of the stats above Age Average Age of the respondent is 16 Years Old traveltime Some kids travel 4 Hours a day just to reach school famrel Average kids have a good relationship with their family absences Average kids only have 6 days absences and we spot outliers with 75 days absences Dalc Daily alcohol consumption among kids is very low which is good Step 4. ", "id": "samuelmjoseph/student-grade-prediction-using-decisiontree", "size": "4894", "language": "python", "html_url": "https://www.kaggle.com/code/samuelmjoseph/student-grade-prediction-using-decisiontree", "git_url": "https://www.kaggle.com/code/samuelmjoseph/student-grade-prediction-using-decisiontree", "script": "sklearn.metrics sklearn.model_selection sklearn define_grade IPython.display Image pandas tree train_test_split accuracy_score sklearn.externals.six StringIO ", "entities": "(('very which', 'kids'), 'let') (('age it', 'school name'), 'reason') (('we', 'accuracy score'), 'be') (('3 \u00e2 secondary education', '9th grade'), 'preparationcheck') (('Build Machine Learning project we', 'result'), 'ModelIn') (('Acquiring', 'CSV file'), 'Import') (('again just we', 'mapping'), 'be') (('Finally we', 'accuracy 0'), 'collect') (('guardian data', 'grades data'), 'create') ", "extra": "['test']", "label": "Perfect_files", "potential_description_queries": ["accuracy", "age", "average", "binary", "care", "categorical", "choose", "classifier", "close", "column", "convert", "copy", "course", "create", "current", "data", "day", "describe", "drop", "education", "equal", "family", "feature", "file", "final", "grade", "grading", "high", "import", "increase", "job", "let", "letter", "library", "list", "male", "map", "mapping", "measure", "name", "no", "none", "not", "number", "numeric", "numerical", "out", "parent", "past", "period", "picture", "predict", "prediction", "project", "reason", "relationship", "remove", "rest", "row", "school", "score", "second", "sex", "size", "sklearn", "split", "store", "student", "subject", "support", "target", "test", "those", "time", "train", "tune", "type", "unique", "value", "view", "work"], "potential_description_queries_len": 81, "potential_script_queries": ["tree"], "potential_script_queries_len": 1, "potential_entities_queries": [], "potential_entities_queries_len": 0, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 81}