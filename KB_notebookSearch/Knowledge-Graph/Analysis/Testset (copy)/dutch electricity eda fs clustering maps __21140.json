{"name": "dutch electricity eda fs clustering maps ", "full_name": " h1 Analysis items h2 1 Introduction Country wide picture h2 2 Transition to the smart grid h2 3 Non centralized electricity production by households h2 4 Some individual city stats h2 5 Global analysis feature selection and dimensional reduction h2 6 Geographical projections h2 7 Conclusions h1 1 Introduction h1 2 Transition to the smart grid h1 3 Non centralized electricity production by households h1 4 City stats h1 5 Global analysis feature selection and dimensional reduction h1 6 Geographical projections h1 7 Conclusions ", "stargazers_count": 0, "forks_count": 0, "description": "com kaggle docker python For example here s several helpful packages to load in linear algebra data processing CSV file I O e. We see now that the cities cluster less by size than in the first round and still largely cluster by provider and more specifically by Enexis vs. io package like so code commented out below https i. in the limit of 100 urbanization which might mean 100 high rise buildings it is likely impossible for each apartment building to produce its own electricity with current technologies at hand that is. As self production is a nation wide trend it is also logical that the slope of the fit becomes less negative as the larger places catch up as the years pass. On a positive note three Dutch cities seem to be doing a pretty good job at showing that others could do better Almere Apeldoorn and Zwolle. A simple linear fit shows that this peak is likely to become zero within 2 years of the 2018 timepoint so around the start of 2020. This because the provider influences parameters such as self production smartmeter percentage and lowtarif consumption. I will leave this as is and continue with the global analysis below. This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python docker image https github. I obtained a list of the 4 digit postal code location here https github. Within two years of the 2018 dataset it is expected that almost all cities will have 50 or actually around 80 smartmeter percentages. But I ll leave it as is for now. io CSC18 lessons L4 point in polygon. Fitting the data shows that the number of smartmeters should reach the total number of connections in mid 2018. 4 ax ax let s make polygon dataframes for all years c l i h f or None courseness there must be a cleaner way to do all this but I m leaving it for now municipalities not having data polygons ijsselmeer zeeuwse meren c l i h f or None courseness all others f. I wonder what s going on with Enexis there. The negative initial slope at 2012 makes sense as it is much easier for small towns to get a relatively high percentage of self produced electricity than it is for large places. com comics cell_phones. Extrapolation of the fit y mx b to the data below right would suggest that the median reaches 50 self production in frac 50 b m approx2041. As delivery 100 self production these graphs have a bit of redundancy in them. Let s look at the largest Dutch cities and where they stand. read_csv Input data files are available in the. colorbar mapper shrink 0. This might actually be true but seems unlikely for some larger cities in Enexis territory like Weert and Deventer Some cities seem to be producing gas this seems unlikely There are many minor errors such as s Gravenhage appearing more than once but overall I ignore this since there is one s Gravenhage that is the right size the others are almost negligibly small. If we then assume that the remaining 20 will take 80 of the time and that the transition started around 2012 the Netherlands will be a 100 smartgrid in 8years 2x8 32 2020 2052. This could be logical as it is probably impossible for large cities to be as self reliant when it comes to electricity production as smaller towns are i. First of all we see that the distribution is bimodal 2018 shown here a population of early adopters and a lagging population. Sequences over time in spirit of the other images in this analysis. sort_values 2018 ascending False. adding columns of interest make pivot tables of relevant parameter such that we have total per city per year o specs o specs exponential fit this doesn t seem to work well since we re working with large numbers here. lin fit in lin log space does the trick for here although this is not the most elegant solution linear fit linewidth 3 linewidth 3 this is the mean of the mean per city this is the median of the mean per city extract y_data initial guesses p0 initialize them differently one at 20 and the other at 80 so the optimization algorithm works better this can be circumvented using simulated annealing or sth in the like optimize and in the end you will have 6 coeff 3 for each gaussian plot each gaussian separately using the single gauss function fit with 1 gaussian fit with 2 facecolor w edgecolor k could have achieved the same with self_production. By looking at the data per provider we can get an idea of how different regions of the Netherlands are performing with respect to one another. Conclusions conclusions 1. Technical issues with the dataset The province of Zeeland seems to be missing entirely but this could be due to there being a fourth provider Something is wrong with the historical pre 2017 data for Eindhoven Some cities seem to have multiple providers. For example running this by clicking run or pressing Shift Enter will list the files in the input directory Any results you write to the current directory are saved as output. This while the number of connections is growing linearly so the consumption per connection approx household seeminly decreased possibly by large scale introduction of more energy efficient products such as the LED light. At this rate a median of 50 is expected to be reached by 2041. First let s have a look at the country as a whole What we see is that the yearly total energy consumption has remained roughly the same while there is a linear increase in the number of connections. TSNE UMAP or at least make classifying easier. It is clear from the smartmeter subplot that these are the leading cities in terms of smartmeters but they are different from each other in terms of lowtarif consumption percentage which tends to be provider specific. Lowtarif consumption bottom left panel we see the approximate Enexis non Enexis divide again but splitting one of the 4 major clusters down the middle hence I think it is justified to call 5 clusters of large cities here. That and I just want to apply some things that I use in my genomics research and see how they pan out. If we take the actual top 20 cities with the highest average electricity production per household we expect this ranking to be dominated by small towns in windy rural places These mostly seem to be rural places in the north east. From the top middle we see that the large cities do not really distinguish themselves in terms of self production. City statsAbove we see that each city can have its own specific dynamics. Perhaps it is more interesting to not let city size weigh in so much so let s select the features that are normalized the percentages these also happen to be the features with the highest variance which implies these will be more defining of a given city than features with less variance. The easiest way of doing this I found was by using the 4 digit postal codes. color per province like such Now comes the hard part aggregating the information from the 2469 unique cities in the dataset into the 491 municipalities. scatter longitude latitude s pc2018 2018_num_active_connections. So in 2020 one can expect the average city to have around 80 smartmeters. Another observation would be that of the three large electricity providers Enexis is leading the transition to the smart grid. png Or here is the animated verison again code commented out below. What we see is that over the past 7 years the slope of the fit became less negative. This can be an active influence the amount of effort put into smartmeter implementation or passive the geographic location that is fixed and some areas just being more amenable to self production than others. We can also look at the importance of parameters using PCA 6. This allows me to easily merge the energy dataframe grouped by the 4 digit postal codes with relevant parameters summed or averaged with geolocation per postal code. The self production fraction as the median of the of total consumption for all cities combined has been increasing linearly from 1 in 2012 to sim 10 now. count city add geolocation make geopandas df pc2018. We see that in absolute terms Almere is the biggest producer of energy. gif By fitting the lagging population with a single gaussian and plotting the normalized amplitude vs. We could for instance classify cities into over or underperforming when above or below the linear regression by a certain amount as shown below gray is neither over or underperforming arbitrary offset chosen here. For instance region 1 indicated in top left is a cluster of tiny cities that have a very high percentage of self production which we saw earlier. divide 1e3 20 Sets NAs to 0 in rank 2018 median df for regression in log space set the cities with zero inf to arbitrary dropout value this includes dropout values intended not to be included in the regression but for plotting purposes only 0. One could also normalize other data to visualize it in this manner of course. The largest cities seem to be doing worst in terms of becoming self reliant and that mostly has to do with the rapid growth of self production in smaller towns. Over the years bottom panel the growth of self production in large cities is lower than that of the bigger places turning most large cities into places that are underperforming compared to the fit. My guess is also that Enexis will have a larger fraction of out overperformers than the other two providers. Many things can be observed here. For instance one can notice an increasing discrepancy between the mean and median of the mean percentage of smartmeters. Does connection to the smart grid also mean a smarter more economical use of electricity Let s see what the correlation between percent smartmeter and percent lowtarif consumption tells us per city with a different color for each provider. This involves determining which postal codes belong to which polygon. The larger cities in the randstad move down the ladder. Admittedly there are not too many dimensions that are independent of each other so one can also answer these questions by juggling around with the data in different ways but this might become less obvious if you add more parameters such as the gas data or other metadata such as income house prices. html and everything is summarized into the functions I wrote above. What we see here is that there is indeed a negative correlation between city size and the percentage of energy that is self produced. Anyway ignoring this I think we now have at hand the right information to start binning the postal code based information into the polygons of the 491 municipalities minus Zeeland. Global analysis feature selection and dimensional reduction tsne 6. Without going into a manual adding of geolocation and municipality each city belongs to of course. Also in a way more informative to see the aggregate information of a municipality instead of for every town and village. This likely has to do with there being a limit to which urbanized places can become self reliant e. We see in the t SNE above that cities cluster together by their size as the marker size scales with city size and the provider they have. Transition to the smart grid smartgrid 3. That being said correlation needs not imply causation as we all know https imgs. Why that is we ll see in the multi panel figure below. Geographical projections geomapping 7. Self production became a thing roughly in 2012. But this might level off way before that due to technical hurdles revoking of subsidies or other regulations in the meantime. Perhaps the city size is a reasonable proxy as to what degree a city can produce its own energy though I suspect building structure climate etc also play a crucial role as for instance it might turn out that in the limit of large cities it is just more efficient to have a majority of the electricity produced in a centralized manner. Here I chose to display only those parameters that are on the percentage scale mainly out of laziness. Another convenient way to present this kind of data I find is to save a sequence of images like those above as a gif or movie for instance using the imageio http https imageio. At the same time we see that the number of smartmeters is increasing exponentially and one could expect that the number of smartmeters will start approaching the number of connections in the not too far future. It is interesting to look into this as in what type of city can be typically found in one or the other further below. These other parameters are of course the features we used to perform our dimensional reduction on the percentages of lowtarif consumption self production active connections and smartmeters. This is convenient as we then do not have to start messing around with postal code areas some of which have been created or shuffled around in the intervening years. This nicely follows Pareto s law 80 of the work done in 20 of the time and vice versa. There are other exciting developments unfolding now such as transition to a smart grid as well as the emergence of a significant fraction of self production of electricity by households. Two groups containing fairly large cities region 2 and 3 do not cluster together with the other large cities in the middle. Ok so coloring the t SNE by the values of the independent parameters we get an idea of why the cities are grouped together in a certain way. Bottom left Enexis cluster Middle left Enexis cluster Top center cluster left side Top center cluster right side Right side cluster Perhaps adding some gas parameters would make it more interesting. They might have a different provider. Alright so here we see the large cities cluster into roughly 4 or 5 regions and we see especially clear from the first panel that they group based on other parameters besides size. We probably could also have gotten this from the percent of smartmeters parameter in the first place but let s look at this in greater detail because simply taking the countrywide mean here oversimplifies what is actually going on. In addition the amount of electricity produced by households has been increasing linearly since 2012. For these maps this gives a more qualitative than a quantitative expression but insightful nonetheless. First let s see at what year given the decline rate of the lagging mode we expect all cities to have 80 smartmeters. Leaders in the self production transition are smaller places in rural areas especially in Groningen but the large cities at the top of the list in absolute terms with many of them having been in the top 10 absolute self producers since the beginning of this revolution in 2012. divide 2e2 alpha. Ok let s look at the correlation between self production and city size for a bit more as we have seen above that it is easier for smaller more rural places to become more self reliant when it comes to electricity. Exellent documentation on how to determine wheter a point falls within a polygon can be found here http https automating gis processes. year we see a linear decrease. Top right shows that two groups have a high fraction of smartmeters compared to the rest. What we have at hand is the polygon structure of the 491 municipalities of the Netherlands which we can project onto a map and e. Some individual city stats cityviolins 5. In general we see the smartgrid transition started with a handful of small cities for each provider. Non centralized electricity production by households selfprod 4. sum transform the variables mean 0 var 1 actual t SNE reduction from 11 dims to 2 color by provider to see if the cities cluster by provider transform the variables mean 0 var 1 actual t SNE reduction from 11 dims to 2 make pivot tables of relevant parameter such that we have total per city per year transform the variables mean 0 var 1 actual t SNE reduction from 11 dims to 2 color by provider ignoring the discrepancies between the gas elec cities pc2 size pc2 self prod pc3 lowtarif pc4 smartmeter perc c l i h f or None courseness this seems like a very roundabout way first get the data into the right form add postalcode geolocations. This is all great but it would be insightful to see which cities are representative of these 5 clusters and perhaps color them geographically to gain more insight as to why certain cities have certain feature values. Though the percentage of active connections seems to decrease as well as we see in the last map directly above. This might be an artifact providers have different definitions ways of classifying things or represent the different ways in which the companies operate. This is an indication that we are not dealing with a normal distribution of these things across the cities which is not a surprise in itself. When normalized by the number of active connections which is I think a proxy for the number of inhabitants this yields the average electricity produced per household per city. And as a side note Eindhoven s data is off as we see again 4. Version 3 of the notebook new features are a more elaborate feature selection in the dimensional reduction section data visualization by projecting the data on a map Took some time to figure out and there are definitely many more possible approaches than this but it s a good first try. I will therefore drop this year in all following electricity analyses. 4 ax ax 1 la join all poly_dfs at the hip there is a smarter way but im getting tired. Bottom middle we see the percentage of active connections is higher among the Enexis left two clusters. But this is just a back of the envelope calculation of course. Amsterdam liander Rotterdam stedin the east and north enexis We can see that self production is a growing trend in all regions but that the Enexis region is outperforming the other regions likely because there is more space to place windmills or solar panels. There are also some other small towns with a high percentage of self production towards upper right corner of plot but these are different in other ways as the remaining subplots show. Global analysis feature selection and dimensional reductionHow similar or different are cities from eachother in terms of electricity consumption and behavior Are there different classes of cities based on energy parameters Does the average street in Rotterdam behave differently than the average street in Eindhoven These are questions one could attempt to answer using principle component analysis PCA or other dimensional reduction techniques e. We get For those who have stared at a map of the Netherlands more than once it becomes pretty clear that the entire province of Zeeland is missing. Of the three providers Enexis seems to be leading these transitions this might be due to the different makeup of the Enexis territory compared to that of Liander and Stedin the latter two cover the more densely populated randstad. Let me know what you think Analysis items 1. IntroductionAs a first approach it suffices to look at the energy parameters at the city level. Transition to the smart gridLet s look into the evolution of smartmeters per city for a bit first. Introduction Country wide picture intro 2. What is the mean or median fraction of self produced energy as a function of the electricity consumed for the Dutch cities in 2018 We can see that for all Dutch cities combined the percentage self produced follows a log normal distribution centered around 10 in the most recent year of this dataset below left and that the median of this distribution shifts upward linearly with time starting around 2012. Alright so now we have all the things at hand to start plotting a bunch of stuff and below are the maps I thought were worth making. But let s look at the current top 20 and how they ranked over the past years We see that the early adopters in self production of electricity like Amersfoort The Hague Rotterdam Zoetermeer are still in the top absolute energy producers of 2018 but we also see several other big cities Eindhoven something is wrong with pre 2017 data Tilburg Zwolle Maastricht catch up starting around 2012. We can increase the resolution at a later point if that is of interest but so for now we can make pivot tables containing the aggregate of an energy parameter of interest per city per year Ok so the year 2009 which allegedly covers the consumption in the year before which is why I changed the x axis in the plot seems to be incomplete. Peculiar to see that a very limited number of random towns produce a limited amount of gas By just joining these two datasets I have noticed there is an outersect between the cities in gas and electricity I m going to ignore that for now. Squinting at the data one can see that on average connection to the smartgrid is positively correlated with the percentage of lowtarif consumption. Ok so we see above which of the large cities num_active_connections 5e4 are over underperforming compared to the regression performed on all Dutch cities. So the defining features are lowtarif consumption active connections and smartmeter percentage. It turns out Zeeland is not part of the electricity dataset. pivot_table elec2018 index city columns sumcols aggfunc np. The percentage of lowtarif consumption tends to cluster per provider indicating that there might be different definitions of what lowtarif means. Interesting to note is that there are a couple of large non Enexis cities deep within Enexis territory let s see who they are Interesting these are all cities literally deep within Enexis territory so perhaps there is some overlap Indeed there is strange. Conclusions Total electricity consumption seems have been roughly constant over the past decade or even a slight decline in the randstad Liander Stedin. However the rate at which the slope increases is slowing down and it seems like this slope of slopes might be asymtotic at a negative value. Geographical projectionsAlright so let s try and project the information at onto a map of the Netherlands as this could make regional differences clear at a glance. This effect is most prominent for Liander cities where for instance Amsterdam biggest orange circle moves from the bottom left towards the top right as the years pass. Again we see cities clustering by size and the parameters being provider specific. This implies that on average the annual amount of electricity used by a connection household is going down. a flat in a high rise building will not have the option to place solar panels. It seems like the 80 smartmeters by 2020 is within reach The complete transition to 100 might take an additional 3 decades. If we normalize the area under the curve we can fit the data. It s hard for me to assess what factors put a cap on or speed up this trend at the moment. Non centralized electricity production by households Let s look at electricity production per city for a bit now. We could also do this for the individual postal code areas in two cities that are of similar size but divergent otherwise or cities that are very alike. ", "id": "bberghuis/dutch-electricity-eda-fs-clustering-maps", "size": "21140", "language": "python", "html_url": "https://www.kaggle.com/code/bberghuis/dutch-electricity-eda-fs-clustering-maps", "git_url": "https://www.kaggle.com/code/bberghuis/dutch-electricity-eda-fs-clustering-maps", "script": "PCA GeoDataFrame geopandas merge_energy_data_into_municip gauss mpl_toolkits.basemap make_log_df Point PatchCollection gauss2 make_group_zipcode matplotlib.ticker bumpsplot defaultdict matplotlib.patches add_widths TSNE collections seaborn numpy shutil gridspec load_and_reindex interpolate sklearn.decomposition Patch attach_municip Normalize copyfile MaxNLocator classify matplotlib.collections Image matplotlib.pyplot stats sklearn.manifold pandas StandardScaler matplotlib.colors Polygon Basemap exponenial_func scipy shapely.geometry matplotlib sklearn.preprocessing scipy.optimize Polygon as PG streamgraph curve_fit IPython.display datetime ", "entities": "(('percentage', 'two clusters'), 'see') (('cities', '80 smartmeters'), 'let') (('we', 'map'), 'be') (('less you', 'income house other such prices'), 'be') (('Almere', 'biggest energy'), 'see') (('we', 'consumption lowtarif self production active connections'), 'be') (('provider', 'self production smartmeter such percentage'), 'this') (('pretty entire province', 'Zeeland'), 'get') (('well we', 'large numbers'), 'make') (('how they', 'genomics research'), 'that') (('median', '2041'), 'expect') (('I', 'https here github'), 'obtain') (('that', 'mainly laziness'), 'choose') (('it', 'large places'), 'make') (('more self when it', 'electricity'), 'let') (('that', 'hand'), 'be') (('complete transition', 'additional 3 decades'), 'seem') (('you', 'output'), 'list') (('Transition', 'city'), 'look') (('Netherlands', '100 8years'), 'assume') (('others', 'Almere better Apeldoorn'), 'seem') (('Why we', 'panel multi figure'), 'see') (('smarter i', 'hip'), 'ax') (('it', 'centralized manner'), 'be') (('It', 'python docker image https kaggle github'), 'come') (('slope', 'fit'), 'be') (('flat', 'solar panels'), 'have') (('number', 'too far future'), 'see') (('we', 'Zeeland'), 'think') (('they', 'city size'), 'see') (('5e4', 'Dutch cities'), 'see') (('this', 'course'), 'be') (('one', 'smartmeters'), 'notice') (('graphs', 'them'), 'have') (('I', 'stuff'), 'have') (('I', 'that'), 'peculiar') (('city', 'own specific dynamics'), 'see') (('smartgrid transition', 'provider'), 'see') (('This', 'time'), 'follow') (('this', 'purposes'), 'divide') (('now cities', 'more Enexis'), 'see') (('number', 'mid 2018'), 'show') (('Two groups', 'middle'), 'cluster') (('as well we', 'last map'), 'seem') (('I', 'global analysis'), 'leave') (('large cities', 'self production'), 'see') (('you', 'what'), 'let') (('otherwise that', 'similar size'), 'do') (('which', 'itself'), 'be') (('here what', 'simply countrywide'), 'get') (('amount', 'linearly 2012'), 'increase') (('how different regions', 'one'), 'get') (('almost cities', 'smartmeter 50 actually around 80 percentages'), 'expect') (('smaller towns', 'electricity production'), 'be') (('these', 'subplots remaining show'), 'be') (('off we', 'side note'), 'be') (('Enexis region', 'likely more windmills'), 'stedin') (('right others', 'this'), 'be') (('color', '491 municipalities'), 'come') (('type', 'typically one'), 'be') (('these', 'literally Enexis territory'), 'be') (('city individual stats', '5'), 'cityviolin') (('s', 'bit'), 'let') (('postal codes', 'polygon'), 'involve') (('why certain cities', 'feature certain values'), 'be') (('index city pivot_table columns', 'sumcols aggfunc np'), 'elec2018') (('Self production', 'roughly 2012'), 'become') (('we', 'https imgs'), 'say') (('that', 'fit'), 'over') (('one', 'reduction other dimensional e.'), 'be') (('this', 'other meantime'), 'level') (('this', 'quantitative expression'), 'give') (('some', 'intervening around years'), 'be') (('Conclusions electricity Total consumption', 'randstad Liander even slight Stedin'), 'seem') (('pc2 pc2 pc3 lowtarif pc4 smartmeter perc l i h elec this', 'postalcode geolocations'), 'transform') (('Transition', 'smart grid'), 'smartgrid') (('These', 'north mostly rural east'), 'expect') (('large cities', '2012'), 'be') (('I', 'electricity analyses'), 'drop') (('median', 'frac'), 'suggest') (('I', 'imageio http https imageio'), 'be') (('k', 'self_production'), 'do') (('they', 'size'), 'see') (('areas', 'self just more amenable others'), 'be') (('that', 'energy'), 'be') (('linearly consumption', 'LED such light'), 'this') (('also Enexis', 'other two providers'), 'be') (('it', 'city level'), 'IntroductionAs') (('Tilburg Zwolle Maastricht', '2012'), 'let') (('why I', 'plot'), 'increase') (('which', 'consumption lowtarif percentage'), 'be') (('where they', 'largest Dutch cities'), 'let') (('one', 'lowtarif consumption'), 'see') (('average annual amount', 'connection household'), 'imply') (('years', 'fit'), 'be') (('percentage self', '2012'), 'be') (('these', 'less variance'), 'be') (('We', 'arbitrary offset'), 'classify') (('urbanized places', 'likely which'), 'have') (('companies', 'which'), 'be') (('geolocation', 'geopandas df pc2018'), 'add') (('distribution', 'early adopters'), 'see') (('correlation', 'provider'), 'mean') (('data polygons ijsselmeer zeeuwse meren l i h f', 'others'), 'let') (('regional differences', 'glance'), 'projectionsalright') (('years', 'top right'), 'be') (('it', 'large cities'), 'leave') (('http here https', 'gis processes'), 'fall') (('self that', 'smaller towns'), 'seem') (('code', 'https i.'), 'comment') (('lowtarif', 'different what'), 'tend') (('cities', 'multiple providers'), 'issue') (('I', 'digit 4 postal codes'), 'be') (('we', 'data'), 'fit') (('average city', 'around 80 smartmeters'), 'expect') (('it', 'gas Perhaps parameters'), 'leave') (('what', 'Enexis'), 'wonder') (('city', 'of course'), 'belong') (('we', 'which'), 'be') (('it', 'definitely many more possible this'), 'be') (('We', 'PCA'), 'look') (('me', 'postal code'), 'allow') (('I', 'functions'), 'summarize') (('One', 'course'), 'normalize') (('peak', '2020'), 'show') (('read_csv Input data files', 'the'), 'be') (('factors', 'moment'), 's') (('self production median', '10'), 'fraction') (('latter two', 'more densely populated randstad'), 'seem') (('Zeeland', 'electricity dataset'), 'turn') (('parameters', 'size'), 'see') (('why cities', 'together certain way'), 'get') (('two groups', 'rest'), 'show') (('slope', 'negative value'), 'seem') (('this', 'city'), 'think') (('Enexis', 'smart grid'), 'be') (('energy yearly total consumption', 'connections'), 'let') ", "extra": "", "label": "No_extra_files", "potential_description_queries": ["absolute", "active", "aggregate", "algorithm", "answer", "apply", "approach", "area", "artifact", "average", "become", "behavior", "bit", "bottom", "calculation", "call", "center", "circle", "city", "classify", "clear", "cluster", "clustering", "code", "coeff", "color", "combined", "connection", "correlation", "could", "count", "country", "course", "current", "curve", "data", "dataframe", "dataset", "degree", "detail", "df", "digit", "directly", "directory", "display", "distribution", "drop", "effect", "effort", "electricity", "end", "energy", "environment", "even", "every", "everything", "expected", "expression", "extract", "feature", "figure", "file", "find", "fit", "fitting", "fixed", "flat", "following", "form", "found", "frac", "function", "gaussian", "general", "gray", "grid", "group", "grouped", "growth", "hand", "high", "house", "http", "idea", "ignore", "im", "image", "imageio", "implementation", "importance", "increase", "index", "individual", "influence", "initialize", "input", "instance", "interest", "io", "job", "join", "kaggle", "largest", "latter", "least", "leave", "left", "let", "level", "linear", "list", "load", "log", "look", "looking", "lower", "major", "majority", "manner", "manual", "map", "mean", "median", "merge", "metadata", "middle", "might", "missing", "mode", "most", "move", "movie", "multiple", "my", "negative", "new", "non", "normal", "normalize", "normalized", "not", "notebook", "number", "observation", "offset", "optimization", "optimize", "option", "out", "overall", "overlap", "package", "panel", "parameter", "part", "past", "peak", "per", "perc", "percent", "percentage", "perform", "performing", "picture", "place", "plot", "plotting", "png", "point", "polygon", "population", "positive", "pre", "present", "processing", "production", "project", "provider", "python", "random", "rank", "ranking", "re", "region", "regression", "research", "resolution", "right", "role", "run", "running", "save", "scale", "scatter", "section", "select", "selection", "sense", "sequence", "set", "several", "side", "sim", "similar", "single", "size", "solution", "something", "space", "speed", "splitting", "start", "structure", "stuff", "subplot", "sum", "surprise", "think", "those", "thought", "time", "total", "transform", "trend", "try", "turn", "type", "under", "unique", "up", "upper", "value", "var", "variance", "visualization", "visualize", "while", "who", "work", "worst", "write", "year"], "potential_description_queries_len": 242, "potential_script_queries": ["copyfile", "datetime", "defaultdict", "gridspec", "interpolate", "matplotlib", "numpy", "scipy", "seaborn", "shutil"], "potential_script_queries_len": 10, "potential_entities_queries": ["city", "df", "even", "http", "individual", "perc", "total"], "potential_entities_queries_len": 7, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 251}