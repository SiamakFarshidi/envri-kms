{"name": "getting started with halite ", "full_name": " h1 Part 1 Get started h2 Game rules h2 Game strategy h1 Part 2 Your first bot h2 The notebook h2 Your first agent h1 Part 3 Keep learning ", "stargazers_count": 0, "forks_count": 0, "description": "To see the current list of open competitions check out the simulations homepage https www. But you ll need a complete understanding of the game dynamics to come up with a winning strategy. In this case the ship destroys the enemy ship and steals its cargo. Your first agentIt s time to create your first agent Copy and paste the code in the cell below into your notebook. A ship can only collect halite from its current position. Then copy and run the next code cell in your notebook to play your agent against three random agents. Players start the game with no shipyards. In order for halite to be counted ships need to deposit their cargo into a shipyard of the same color. Conversely if there are many ships nearby with halite to steal and not too much local halite to collect it makes sense to attack the enemy ships. com c halite overview you ll write your own intelligent bots to play the game. Part 1 Get startedIn this section you ll learn more about how to play the game. Grid locations with halite are indicated by a light blue icon where larger icons indicate more available halite. In this tutorial as part of the Halite competition https www. You can convert a ship into a shipyard. com alexisbcook getting started with titanic before proceeding. use a shipyard to create a ship. Kaggle s Intro to Game AI and Reinforcement Learning https www. It can collect or mine halite from its current position. Over time and with effort your score will gradually improve. The cargo that is tracked in the player s scoreboard contains the total cargo summed over all of the player s ships. It teaches you how to run code in the notebook. com learn intro to game ai and reinforcement learning discussion to chat with other learners. collide with an enemy ship containing relatively more halite in its cargo. Game strategyAs mentioned above a ship has two options at its disposal for collecting halite. Halite is an online multiplayer game created by Two Sigma. The line writefile submission. You can use the animation below to view the game in detail every move is captured and can be replayed. This event results in a collision where the ship with more halite in its cargo is destroyed and the other ship survives and instantly collects the destroyed ship s cargo. If the code cell runs successfully then you ll see a message Writing submission. com c halite notebooks sortBy voteCount group everyone pageSize 20 competitionId 18011 in the Halite competition to learn from agents that other users have created. com c halite overview environment rules. In the game four participants command ships to collect an energy source called halite. Look at the Notebooks tab https www. If there are no shipyards convert first ship into shipyard. com sam halite sdk overview to simplify the code we need to write. This is the only way to create a shipyard. A ship can deposit all of its cargo in a single timestep simply by navigating to a cell containing a shipyard. Note that the Halite competition is now closed so we are no longer accepting submissions. Begin by navigating to https www. py saves the agent to a Python file. This collected halite is added to the ship s cargo. Next click on Create. py or Overwriting submission. That said you can still use the competition to write your own bots you just cannot submit bots to the official leaderboard. The agent you just submitted uses Sam Harris Halite SDK https www. For simplicity we ve only covered a subset of the rules here. Note that all of the code above has to be copied and run in a single cell please do not split the code into multiple cells. The notebookThe first thing to do is to create a Kaggle notebook where you ll store all of your code. Each player starts the game with 5 000 halite and one ship. deposit a ship s cargo into a shipyard. png You now have a notebook where you ll develop your first agent If you re not sure how to use Kaggle Notebooks we strongly recommend that you walk through this notebook https www. com learn intro to game ai and reinforcement learning course is a great resource to get started with techniques for creating intelligent agents. If cargo is too low collect halite If cargo gets very big deposit halite If halite at current location running low move to the adjacent square containing the most halite Move towards shipyard to deposit cargo. The game is played in a 21 by 21 gridworld and lasts 400 timesteps. Two ships cannot successfully inhabit the same cell. The player with the most halite at the end of the game wins. Players use ships to navigate the world and collect halite. But even given these simplified rules you can imagine that a successful player will have to use a relatively complicated strategy. com notebooks https www. Imports helper functions Returns best direction to move from one position fromPos to another toPos Example If I m at pos 0 and want to get to pos 55 which direction should I choose Directions a ship can move Will keep track of whether a ship is collecting halite or carrying cargo to a shipyard Returns the commands we send to our ships and shipyards If there are no ships use first shipyard to spawn a ship. Check out the notebook to see what other helper functions are available. Also shipyards can spawn or create new ships which deducts 500 halite per ship from the player. Have questions or comments Visit the course discussion forum https www. py if you run it more than once. Game rules In this section we ll look more closely at the game rules and explore the different icons on the game board. Halite in ship cargo is not counted towards final scores. To get a shipyard a player must convert a ship into a shipyard which costs 500 halite. Your agent is in the top left corner of the screen. But each additional ship and shipyard costs you halite how will you decide when it might be beneficial to create more Part 2 Your first botIn this section you ll create your first bot to play the game. This raises some questions that you ll have to answer when commanding ships Will your ships focus primarily on locating large halite reserves and mining them efficiently while mostly ignoring and evading the other players Or will you look for opportunities to steal halite from other players Alternatively can you use a combination of those two strategies If so what cues will you look for in the game to decide which option is best For instance if all enemy ships are far away and your ships are located on cells containing a lot of halite it makes sense to focus on mining halite. In general Halite is a complex game and we have not covered all of the details here. These are illustrated in the image below. If you view the full game rules you ll notice that there are more types of collisions that can occur in the game for instance ships can collide with enemy shipyards which destroys the ship the ship s cargo and the enemy shipyard. You ll also have to decide how to control your shipyards and how your ships interact with shipyards. _Don t change the default settings so Python should appear under Select language and you should have Notebook selected under Select type. com notebooks and clicking on New Notebook. If this is the case try copying the code cell and running it again. For context we ll look at a game played by four random players. Your agent should perform much better than the random agents Note that if your ship doesn t move at all in the game then you ve likely made an error in the code you used to generate the submission. Both are illustrated in the figure below. Here are some resources to keep learning The first step is to read the complete game rules https www. When a ship decides to collect halite it collects 25 of the halite available in its cell. There are three primary actions in the game involving shipyards. Part 3 Keep learning This first agent is just the beginning. With more ships and shipyards you can collect halite at a faster rate. ", "id": "alexisbcook/getting-started-with-halite", "size": "8241", "language": "python", "html_url": "https://www.kaggle.com/code/alexisbcook/getting-started-with-halite", "git_url": "https://www.kaggle.com/code/alexisbcook/getting-started-with-halite", "script": "kaggle_environments make kaggle_environments.envs.halite.helpers evaluate getDirTo agent ", "entities": "(('this', 'it'), 'try') (('four participants', 'energy source'), 'command') (('player', '5 000 halite'), 'start') (('mentioned', 'halite'), 'have') (('ship', 'current position'), 'collect') (('ship', 'cargo'), 'destroy') (('which', '500 halite'), 'convert') (('strongly you', 'notebook https www'), 'have') (('complex we', 'details'), 'be') (('other users', 'that'), 'pagesize') (('Here resources', 'game rules https complete www'), 'be') (('game', '400 timesteps'), 'play') (('you', 'how game'), 'get') (('successfully then you', 'message Writing submission'), 'see') (('now we', 'longer submissions'), 'note') (('we', 'four random players'), 'look') (('where larger icons', 'more available halite'), 'indicate') (('too low collect cargo', 'cargo'), 'be') (('it', 'available cell'), 'decide') (('current list', 'simulations homepage https www'), 'see') (('Players', 'shipyards'), 'start') (('This', 'only shipyard'), 'be') (('questions', 'course discussion forum https www'), 'have') (('you', 'Sam Harris Halite SDK https just www'), 'use') (('you', 'faster rate'), 'collect') (('Two ships', 'successfully same cell'), 'inhabit') (('successful player', 'relatively complicated strategy'), 'imagine') (('you', 'official leaderboard'), 'say') (('helper other functions', 'notebook'), 'check') (('it', 'mining halite'), 'raise') (('how ships', 'shipyards'), 'have') (('you', 'submission'), 'perform') (('where you', 'code'), 'be') (('It', 'notebook'), 'teach') (('that', 'ships'), 'contain') (('Both', 'figure'), 'illustrate') (('ships', 'same color'), 'need') (('we', 'ship'), 'return') (('Halite', 'multiplayer online Two Sigma'), 'be') (('These', 'image'), 'illustrate') (('you', 'winning strategy'), 'need') (('which', 'player'), 'spawn') (('3 learning', 'first agent'), 'keep') (('com halite you', 'game'), 'overview') (('where ship', 'ship other instantly destroyed cargo'), 'result') (('agent', 'screen'), 'be') (('Players', 'halite'), 'use') (('we', 'com sdk sam halite code'), 'overview') (('we', 'game board'), 'rule') (('move', 'detail'), 'use') (('all', 'multiple cells'), 'note') (('Halite', 'final scores'), 'count') (('which', 'ship'), 'notice') (('collected halite', 'cargo'), 'add') (('we', 'rules'), 'cover') (('It', 'mine current position'), 'collect') (('2 first section you', 'game'), 'cost') (('ship', 'shipyard'), 'deposit') (('score', 'effort'), 'improve') (('Notebook', 'Select type'), 'change') ", "extra": "", "label": "No_extra_files", "potential_description_queries": ["agent", "animation", "answer", "appear", "best", "cargo", "case", "cell", "check", "choose", "code", "command", "competition", "context", "control", "convert", "copy", "course", "create", "current", "default", "detail", "develop", "direction", "effort", "end", "energy", "environment", "error", "even", "event", "every", "everyone", "explore", "faster", "figure", "final", "game", "general", "generate", "group", "halite", "helper", "image", "indicate", "instance", "interact", "language", "learn", "learning", "left", "light", "line", "list", "local", "look", "lot", "message", "might", "most", "move", "multiple", "need", "new", "next", "no", "not", "notebook", "official", "open", "option", "order", "out", "overview", "part", "per", "perform", "player", "png", "position", "py", "random", "re", "read", "recommend", "run", "running", "score", "sdk", "section", "selected", "sense", "ship", "simplicity", "single", "source", "split", "square", "start", "step", "store", "subset", "those", "through", "time", "titanic", "total", "track", "try", "tutorial", "under", "understanding", "up", "view", "walk", "while", "world", "write"], "potential_description_queries_len": 118, "potential_script_queries": ["evaluate"], "potential_script_queries_len": 1, "potential_entities_queries": ["halite", "sdk"], "potential_entities_queries_len": 2, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 118}