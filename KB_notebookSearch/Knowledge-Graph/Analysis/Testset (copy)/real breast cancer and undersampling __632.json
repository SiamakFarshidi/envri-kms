{"name": "real breast cancer and undersampling ", "full_name": " h1 Importing Real Breast Cancer data set h1 PRE Processing h1 Visualization of Data h1 Classification Technic h1 Conclusion h1 Under Sampling h1 Conclusion After Under Sampling ", "stargazers_count": 0, "forks_count": 0, "description": "7 after 10 epochs Conclusion Stochastic Gradient Descent with an Highest Accuracy of 80. 42 split data train 72 and test 28 random forest classifier with n_estimators 10 default Divide by class split data train 70 and test 30 random forest classifier with n_estimators 10 default. But when we see Confusion matrix of XG boost we see it tough for Algo to predict Alive patient because data set is uneven so we do under sampling which will result in less accuracy but it will predict both class. Importing Real Breast Cancer data set PRE Processing Taking only female data Visualization of Data Converting all the data which are Alphabets Classification Technic Accuracy of Random Forest 79. Under Sampling Conclusion After Under SamplingSVM Linear with the highest Accuracy of 68. ", "id": "sanketbose97/real-breast-cancer-and-undersampling", "size": "632", "language": "python", "html_url": "https://www.kaggle.com/code/sanketbose97/real-breast-cancer-and-undersampling", "git_url": "https://www.kaggle.com/code/sanketbose97/real-breast-cancer-and-undersampling", "script": "sklearn.metrics cross_val_score recall_score KNeighborsClassifier seaborn numpy SGDClassifier cross_val_predict plotly.express sklearn.ensemble sklearn.model_selection f1_score confusion_matrix sklearn RandomForestClassifier metrics matplotlib.pyplot pandas classification_report accuracy_score sklearn.neighbors SVC sklearn.linear_model RepeatedKFold sklearn.svm train_test_split ", "entities": "(('it', 'class'), 'see') (('which', 'Alphabets Classification Technic Random Forest'), 'set') (('42 split data', 'n_estimators 10 default'), 'train') ", "extra": "['patient', 'test']", "label": "Perfect_files", "potential_description_queries": ["accuracy", "classifier", "data", "default", "forest", "matrix", "patient", "predict", "random", "result", "sampling", "set", "split", "test", "train", "under"], "potential_description_queries_len": 16, "potential_script_queries": ["numpy", "seaborn", "sklearn"], "potential_script_queries_len": 3, "potential_entities_queries": [], "potential_entities_queries_len": 0, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 19}