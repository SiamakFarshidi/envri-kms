{"name": "siim covid 19 box detect dcm metadata ", "full_name": " h1 SIIM FISABIO RSNA COVID 19 Detection h3 Libraries h3 Handy Functions h1 1 Metadata h2 1 1 train study analysis h3 Target labels distribution h3 How many instances per label h2 1 2 train image analysis h3 How many images have some sort of abnormality h3 How many images per each study h3 Create the full train dataset h1 2 Images h3 WHAT ARE CT SCANS h3 Typical Appearance h3 Atypical Appearance h3 Indeterminate Appearance h3 Negative for Pneumonia h2 2 2 Magic save images bounding boxes to W B h1 3 Extract Metadata from dcm h2 3 1 Store and Save Metadata h2 3 2 Let s Analyse the new information h3 Patient s Gender h3 Location of X rays h3 MONOCHROME1 or MONOCHROME2 That s the question h1 My Specs ", "stargazers_count": 0, "forks_count": 0, "description": "For example there aren t any images which are both negative_for_pneumonia and indeterminate appearance in the same time. The Exploratory Dashboard in W B My Specs Z8 G4 Workstation 2 CPUs 96GB Memory NVIDIA Quadro RTX 8000 RAPIDS version 0. good luck Libraries Link to my W B Dashboard here https wandb. csv index False print Metadata processed saved successfuly Save data to W B Dashboard Import Get the Data Plotting Get the Data Plotting Get the Data Plotting. id there are 6 054 unique ids there are no duplicates 2. If there is nothing weird. 8 images have nothing unusual in them and 1 is labeled as Indeterminate Appearance. Fun Bonus Z by HP is providing the top student team with a ZBook G8 Data Science Workstation I have been working on these for quite some time and I absolutely LOVE it. WHAT ARE CT SCANS A Computerized Tomography scan CT or CAT scan uses computers and rotating X ray machines to create cross sectional images of the body. dcm example get_observation_data p print example all_paths glob. input siim covid19 detection train exceptions 0 dicts for path in tqdm. keys meta_train_data meta_train_data. They can show the soft tissues blood vessels and bones in various parts of the body. If some abnormalities are found provide the bounding boxes. csv files containing custom information for each radiography. You can find his full notebook with explanations here https www. csv containing one row for each image including both correct labels and any bounding boxes in a dictionary format Important An image can have multiple bounding boxes. MetadataOur data consists of images. ai andrada siim covid19 workspace user andrada looks like this Create the full train datasetThis is also how the final_label will need to look before submission. an image can have positive value for only 1 label. ai andrada siim covid19 workspace user andrada 3. DataFrame data dicts columns example. 2 Magic save images bounding boxes to W B Thank you very much to Ayush who inspired the following experiment. Extract Metadata from. Handy Functions 1. So I encourage everybody to try have fun and. dcm file and storing them into a sepparate dataframe. ImagesGood now that we ve explored the metadata and the target labels we can start focusing on the good stuff meaning the CT scans. dcm paths Loop through the information Fix inverted images Below function available in functions section Check for bounding box and add if it s the case For no bbox the list is nan Retrieve the bounding box Plot the image Save to W B Resize the image Resize the coordinates Get a few example ids image_id Read in datas Retrieve resized information Read data file Get image data Get image coordinates Fix inverted radiograms resize Map each label to a number And each number to a label Log each image Save images to W B Dashboard Dictionary to store the information from the image String columns p. class imbalance is present especially for Indeterminate Appearance and Atypical Appearance Target labels distribution Now let s see how the labels we ll have to predict are layed out. 2 Let s Analyse the new information Patient s Gender Location of X rays MONOCHROME1 or MONOCHROME2 That s the question. Let s also look at the study id 0fd2db233deb which has most of the images available. Let s look at an example of 10 images below you can see how all the code outputs in the W B Dashboard https wandb. dcm Important We can create more metadata more information on the images from the information stored in the. Metadata structure 1. It s only one or the other. target one of our targets is to predict is the radiography is negative_for_pneumonia has typical appearance has indeterminate appearance or it s just atypical. It will ask for the API key to login which you can get from your W B profile click on Profile Settings scroll to API keys. 2 train_image analysis Findings 1. OK Covid 19 sympthoms look very similar to other viral or bacterial pneumonias chest radiographs hence it s much harder to correctly and I might add quickly diagnose. SIIM FISABIO RSNA COVID 19 DetectionThis is an object detection and classification problem meaning that for each instance we ll have to predict a bounding box and a class. 1 Store and Save Metadata 3. com ayuraj experiment tracking with weights and biases Note If this line throws an error try using wandb. csv contains one row for each study including correct labels. tqdm all_paths try d get_observation_data path dicts. image_id is unique in the image_train data. 1 train_study analysis Findings 1. input siim covid19 detection train 00792b5c8852 1f52bcb3143e 3fadf4b48db3. There are images with multiple bounding boxes 4. Below I am extracting all features stored in each. then we don t need a bounding box How many images per each study Majority of studies have only 1 images. Typical Appearance Atypical Appearance Indeterminate Appearance Negative for Pneumonia 2. append d except Exception as e exceptions 1 continue meta_train_data pd. 17 CSS STYLE Libraries Environment check Secrets Custom colors Set Style Get the list of dictionaries Get the exact x and y coordinates Save coordinates Save data to W B Dashboard Read in metadata Head of our 2 training metadata Process id Data for plots Plotting Virus png Save plots into W B Dashboard Get data and transform frequencies to percentages Plot Process id Data for plotting Plot Virus png Crate df Plot Merge all info together Get. How many instances per label Note 50 of our images have typical appearance. That being said we have 230 studies that have multiple images available up to 9. ai andrada siim covid19 How to use W B Experiment Tracking with Weights and Biases https www. These images provide more detailed information than normal X ray images. com ayuraj visualize bounding boxes interactively. StudyInstanceUID corresponds 1 1 to new_id created for train_study. The rest 50 is split in order into negative for pneumonia 28 indeterminate 17 and the rest atypical. After EDA my W B Dashboard https wandb. Competition Goal Categorize chest radiographs as negative for pneumonia typical indeterminate or atypical for COVID 19. There can be multiple images per study How many images have some sort of abnormality To have a bounding box we need to have something weird detected in the scan. ", "id": "andradaolteanu/siim-covid-19-box-detect-dcm-metadata", "size": "6132", "language": "python", "html_url": "https://www.kaggle.com/code/andradaolteanu/siim-covid-19-box-detect-dcm-metadata", "git_url": "https://www.kaggle.com/code/andradaolteanu/siim-covid-19-box-detect-dcm-metadata", "script": "show_values_on_bars AnnotationBbox apply_voi_lut create_wandb_hist sklearn.cluster pydicom.pixel_data_handlers.util KMeans UserSecretsClient display_html css_styling morphology matplotlib.patches return_coords _show_on_single_plot seaborn numpy scipy.stats color offset_png matplotlib.offsetbox save_dataset_artifact IPython.core.display get_observation_data wandb_bbox skimage matplotlib.pyplot kaggle_secrets measure pandas pearsonr get_image_metadata show_dcm_info OffsetImage fix_inverted_radiograms matplotlib create_wandb_plot resize_img_and_coord IPython.display HTML ", "entities": "(('image_id', 'image_train data'), 'be') (('Important image', 'bounding multiple boxes'), 'csv') (('images', 'X ray normal images'), 'provide') (('Below I', 'each'), 'extract') (('dcm We', 'the'), 'Important') (('which', 'indeterminate same time'), 't') (('They', 'body'), 'show') (('look', 'code W B Dashboard https how wandb'), 'let') (('we', 'weird scan'), 'be') (('most', 'images'), 'let') (('image', 'only 1 label'), 'have') (('append d', 'meta_train_data 1 pd'), 'continue') (('who', 'following experiment'), 'save') (('it', 'indeterminate appearance'), 'be') (('we', 'Indeterminate especially Appearance'), 'be') (('com ayuraj', 'boxes'), 'visualize') (('So I', 'fun'), 'encourage') (('50', 'typical appearance'), 'Note') (('we', 'bounding box'), 'covid') (('abnormalities', 'bounding boxes'), 'provide') (('line', 'wandb'), 'tracking') (('also how final_label', 'submission'), 'look') (('you', 'API keys'), 'ask') (('Specs Z8 GB Memory G4 Workstation 2 CPUs 96 Quadro', 'RAPIDS 8000 version'), 'Dashboard') (('That', 'MONOCHROME1'), 'let') (('Fix', 'image'), 'path') (('Computerized Tomography scan scan', 'body'), 'scan') (('target we', 'CT scans'), 'ImagesGood') (('csv', 'correct labels'), 'contain') (('much correctly I', 'pneumonias chest very other viral radiographs'), 'look') (('that', 'up to 9'), 'say') (('csv index False Metadata processed', 'Data Plotting'), 'print') (('I', 'absolutely it'), 'provide') (('StudyInstanceUID', 'train_study'), 'correspond') (('png', 'Plot Virus png Crate Plot info'), 'check') (('rest', 'pneumonia 28 indeterminate 17'), 'split') (('You', 'explanations'), 'find') (('1', 'Indeterminate Appearance'), 'have') (('How many images', 'only 1 images'), 'need') ", "extra": "['gender', 'patient']", "label": "Perfect_files", "potential_description_queries": ["appearance", "append", "bbox", "blood", "bounding", "box", "case", "check", "chest", "classification", "code", "correct", "create", "csv", "custom", "data", "dcm", "detected", "detection", "df", "dictionary", "distribution", "error", "experiment", "file", "find", "following", "format", "found", "fun", "function", "id", "image", "imbalance", "including", "index", "info", "input", "instance", "key", "label", "labeled", "let", "line", "list", "look", "meaning", "metadata", "might", "most", "multiple", "my", "need", "negative", "new", "no", "normal", "notebook", "number", "object", "order", "path", "per", "plotting", "pneumonia", "png", "positive", "predict", "present", "print", "problem", "profile", "provide", "resize", "rest", "row", "save", "scan", "section", "similar", "soft", "something", "sort", "split", "start", "store", "structure", "student", "stuff", "target", "team", "through", "time", "tqdm", "train", "training", "transform", "try", "unique", "up", "user", "value", "version", "visualize", "who"], "potential_description_queries_len": 105, "potential_script_queries": ["color", "core", "matplotlib", "measure", "morphology", "numpy", "pearsonr", "seaborn", "skimage"], "potential_script_queries_len": 9, "potential_entities_queries": ["index", "normal", "scan"], "potential_entities_queries_len": 3, "potential_extra_queries": ["patient"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 115}