{"name": "pixel2style2pixel ", "full_name": " h1 Pixel2Style2Pixel h2 Sketch to Face h2 Repro Github h2 Select Experiment Type h2 Download Pretrained Models h2 Define Inference Parameters h2 Load Pretrained Model h2 Visualize Input h2 Convert picture to sketch h2 Perform Inference h2 Multi Modal Synthesis h3 Generate Outputs h3 Visualize Results ", "stargazers_count": 0, "forks_count": 0, "description": "Pixel2Style2Pixel Sketch to Face Repro Github https github. com eladrich pixel2style2pixel Select Experiment Type Download Pretrained Models Define Inference Parameters Load Pretrained Model Visualize Input Convert picture to sketch Perform Inference Multi Modal Synthesis Generate Outputs Visualize Results param ffhq_encode ffhq_frontalize celebs_sketch_to_face celebs_seg_to_face celebs_super_resolution toonify update the training options download a picture Conan use opencv to generate edge for sketch dilation convert opencv image to pillow image resize to 256x256 get latent vector to inject into our input image get output image with injected style vector get latent vector to inject into our input image get output image with injected style vector randomly draw the latents to use for style mixing. ", "id": "rkuo2000/pixel2style2pixel", "size": "346", "language": "python", "html_url": "https://www.kaggle.com/code/rkuo2000/pixel2style2pixel", "git_url": "https://www.kaggle.com/code/rkuo2000/pixel2style2pixel", "script": "Namespace get_download_model_command tensor2im numpy Image matplotlib.pyplot log_input_image argparse utils.common get_multi_modal_outputs datasets run_on_batch PIL augmentations models.psp pSp torchvision.transforms ", "entities": "(('output image', 'style mixing'), 'eladrich') (('Pixel2Style2Pixel Sketch', 'Face'), 'github') ", "extra": "", "label": "No_extra_files", "potential_description_queries": ["256x256", "convert", "dilation", "download", "draw", "edge", "generate", "image", "input", "output", "picture", "resize", "style", "training", "update", "vector"], "potential_description_queries_len": 16, "potential_script_queries": ["argparse", "numpy"], "potential_script_queries_len": 2, "potential_entities_queries": [], "potential_entities_queries_len": 0, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 18}