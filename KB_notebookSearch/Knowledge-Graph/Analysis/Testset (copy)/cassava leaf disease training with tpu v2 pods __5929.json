{"name": "cassava leaf disease training with tpu v2 pods ", "full_name": " h1 Cassava Leaf Disease Training with TPU v2 Pods h4 This is based on my previous work Cassava Leaf Disease TPU Tensorflow Training h3 What is a TPU pod h3 What s in a Cloud TPU Pod h2 Dependencies h3 Hardware configuration h1 Model parameters h1 Load data h1 Augmentation h2 Auxiliary functions h1 Training data samples with augmentation h2 Datasets distribution h3 Competition data h3 2019 competition data h3 Dataset oversampled h3 Learning rate schedule h1 Model h1 Training h2 Model loss graph h1 Model evaluation h2 OOF metrics h4 I am still having some problems to get the real model OOF scores while using TPU Pods so the results here and the confusion matrix are just placeholders h1 Confusion matrix h1 Visualize predictions h3 Class map h2 Train set ", "stargazers_count": 0, "forks_count": 0, "description": "No relevant improvements from using MixUp. When assembled into multi rack ML supercomputers called Cloud TPU Pods. Class map 0 Cassava Bacterial Blight CBB 1 Cassava Brown Streak Disease CBSD 2 Cassava Green Mottle CGM 3 Cassava Mosaic Disease CMD 4 Healthy Train set TPU or GPU detection Detect hardware return appropriate distribution strategy GCS_PATH KaggleDatasets. com dimitreoliveira cassava leaf disease 50 tfrecords external 512x512 divided by classes 512x512 https www. Confusion matrixLet s also take a look at the confusion matrix this will give us an idea about what classes the model is mixing or having a hard time. We are evaluating the model on the OOF predictions it stands for Out Of Fold since we are training using K Fold our model will see all the data and the correct way to evaluate each fold is by looking at the predictions that are not from that fold. com dimitreoliveira cassava leaf disease 50 tfrecords center 512x512 divided by classes 512x512 https www. glob GCS_PATH train_tfrecords. Small improvements from keeping batch normalization layers frozen. No relevant improvements from using class weights. com dimitreoliveira cassava leaf disease ext 50 tfrec classes 512x512 Dataset source discussion thread https www. Small improvements from using CutOut. com tpu Google s scalable supercomputers for machine learning Cloud TPU Pods are now publicly available in beta https cloud. Changing the learning rate batch wise seems more efficent than epoch wise specially for the warm up phase. Experiments Small improvements using external data 2019 competition. Small improvements from using CCE label smoothing. Model parameters Load data Augmentation Auxiliary functions Training data samples with augmentation Datasets distribution Competition data 2019 competition data Dataset oversampled Learning rate scheduleWe are going to use a cosine learning rate schedule with a warm up phase this may be a good idea since we are using a pre trained model the warm up phase will be useful to avoid the pre trained weights degradation resulting in catastrophic forgetting during the schedule the learning rate will slowly decrease to very low values this helps the model to land on more stable weights. org guide data_performance Custom training with tf. com dimitreoliveira cassava leaf disease stratified tfrecords 256x256 What is a TPU pod To accelerate the largest scale machine learning ML applications deployed today and enable rapid development of the ML applications of tomorrow Google created custom silicon chips called Tensor Processing Units TPUs https cloud. com blog products ai machine learning googles scalable supercomputers for machine learning cloud tpu pods are now publicly available in beta Improvements Custom training loop Using a custom training loop greatly improves the training time and resource usage. Maximize MXU and minimize Idle time I have made a few adjustments to the Tensorflow pipeline to improve performance. tfrec Original TFRecords Shear Rotation Flips Rotates rotate 270\u00ba rotate 180\u00ba rotate 90\u00ba Pixel level transforms Crops data augmentation cdeotte kernel https www. data API https www. com dimitreoliveira cassava leaf disease tpu v2 pods inference Dataset source center cropped 512x512 https www. What s in a Cloud TPU Pod A single Cloud TPU Pod can include more than 1 000 individual TPU chips which are connected by an ultra fast two dimensional toroidal mesh network as illustrated below. Worse performance by using different image resolution even the default EfficientNet input size. com c cassava leaf disease classification discussion 198744 Dataset creation source https www. Changing Sparse CCE to CCE has no impact as expected. Was not able to make progressive unfreezing work. Visualize predictionsFinally it is a good practice to always inspect some of the model s prediction by looking at the data this can give an idea if the model is getting some predictions wrong because the data is really hard of if it is because the model is actually bad. Small improvements from oversmapling classes 0 1 2 and 4. com cdeotte rotation augmentation gpu tpu 0 96 input image is one image of size dim dim 3 not a batch of b dim dim 3 output image randomly rotated fix for size 331 CONVERT DEGREES TO RADIANS ROTATION MATRIX LIST DESTINATION PIXEL INDICES ROTATE DESTINATION PIXELS ONTO ORIGIN PIXELS FIND ORIGIN PIXEL VALUES input image is one image of size dim dim 3 not a batch of b dim dim 3 output image randomly sheared fix for size 331 SHEAR MATRIX LIST DESTINATION PIXEL INDICES ROTATE DESTINATION PIXELS ONTO ORIGIN PIXELS FIND ORIGIN PIXEL VALUES CutOut 10 15 cut outs 5 10 cut outs 2 5 cut outs 1 cut out Datasets utility functions One Hot Encoding needed to use categorical_crossentropy loss Unfreeze layers while leaving BatchNorm layers frozen Unfreeze layers while leaving BatchNorm layers frozen Visualization utility functions binary string in this case these are image ID strings If no labels only image IDs return None for labels this is the case for test data data auto squaring this will drop data that does not fit into square or square ish rectangle size and spacing display magic formula tested to work from 1x1 to 10x10 images Visualize model predictions Model evaluation rng i for i in range total_epochs Create train and validation sets Build TF datasets Step functions update metrics update metrics Model unfreeze all layers except batch normalization Setup training loop Run training step Validation run at the end of each epoch Validation run Compute metrics Report metrics Early stopping monitor Set up next epoch Load best model weights OOF predictions. The TPU software stack uses this mesh network to enable many racks of machines to be programmed as a single giant ML supercomputer via a variety of flexible high level APIs. org tutorials distribute custom_training Cloud TPU https cloud. No relevant improvements from using different backbones. References Use TPUs https www. Dependencies Hardware configurationNote that we have 32 cores this is because the TPU v2 Pod have more cores than a single TPU v3 which has 8 cores. Strategy https www. OOF metrics I am still having some problems to get the real model OOF scores while using TPU Pods so the results here and the confusion matrix are just placeholders. get_gcs_path cassava leaf disease classification Original dataset Center croped and resized 50 TFRecord Center croped and resized 50 TFRecord External Center croped and resized 50 TFRecord by classes Center croped and resized 50 TFRecord External by classes FILENAMES_COMP tf. org guide tpu Better performance with the tf. com dimitreoliveira cassava leaf disease 50 tfrecords classes 512x512 Dataset source external data center cropped 512x512 https www. Model Training Model loss graph Model evaluationNow we can evaluate the performance of the model first we can evaluate the usual metrics like accuracy precision recall and f1 score scikit learn provides the perfect function for this classification_report. com dimitreoliveira cassava leaf disease tpu tensorflow training Inference notebook https www. Cassava Leaf Disease Training with TPU v2 Pods This is based on my previous work Cassava Leaf Disease TPU Tensorflow Training https www. ", "id": "dimitreoliveira/cassava-leaf-disease-training-with-tpu-v2-pods", "size": "5929", "language": "python", "html_url": "https://www.kaggle.com/code/dimitreoliveira/cassava-leaf-disease-training-with-tpu-v2-pods", "git_url": "https://www.kaggle.com/code/dimitreoliveira/cassava-leaf-disease-training-with-tpu-v2-pods", "script": "sklearn.metrics display_9_images_with_predictions random_cutout scale_image data_augment_cutout transform_rotation tensorflow.keras.layers pyplot as plt tensorflow.keras.callbacks EarlyStopping unfreeze_model unfreeze_block Sequential transform_shear lrfn efficientnet.tfkeras plot_metrics prepare_image read_tfrecord seaborn numpy pyplot optimizers data_augment display_one_flower count_data_items batch_to_numpy_images_and_labels dataset_to_numpy_util train_step_fn display_batch_of_images sklearn.model_selection confusion_matrix metrics KFold seed_everything decode_image tensorflow pandas kaggle_datasets classification_report tensorflow.keras.backend title_from_label_and_target display_one_flower_eval tensorflow.keras valid_step Model losses KaggleDatasets matplotlib model_fn get_dataset valid_step_fn train_step ", "entities": "(('TFRecord External 50 Center', 'classes tf'), 'crop') (('com dimitreoliveira cassava leaf disease', 'tfrec 50 classes'), 'ext') (('GPU Detect hardware', 'distribution strategy GCS_PATH appropriate KaggleDatasets'), 'map') (('Pixel level', 'Crops data augmentation cdeotte kernel https www'), 'tfrec') (('Changing', 'impact'), 'have') (('com dimitreoliveira cassava leaf tfrecords data 50 Dataset source external center', 'https 512x512 www'), 'disease') (('which', 'toroidal mesh ultra fast two dimensional network'), 'include') (('which', '8 cores'), 'Hardware') (('com dimitreoliveira cassava leaf disease', 'https 512x512 www'), 'tpu') (('com dimitreoliveira cassava leaf disease', 'training Inference notebook https tensorflow www'), 'tpu') (('that', 'fold'), 'evaluate') (('model', 'hard time'), 'take') (('com tpu', 'beta https now publicly cloud'), 'be') (('this', 'more stable weights'), 'parameter') (('Changing', 'wise specially warm up phase'), 'seem') (('Using', 'training greatly time'), 'ai') (('TPU software stack', 'level flexible high APIs'), 'use') (('Maximize Idle time I', 'performance'), 'MXU') (('org guide', 'tf'), 'tpu') (('confusion here matrix', 'TPU Pods'), 'metric') (('next Load best model', 'OOF predictions'), 'be') (('model', 'idea'), 'be') (('This', 'previous work'), 'Training') (('first we', 'classification_report'), 'evaluate') (('org tutorials', 'custom_training Cloud TPU https cloud'), 'distribute') (('What', 'custom silicon chips'), 'stratify') ", "extra": "['disease', 'test']", "label": "Perfect_files", "potential_description_queries": ["256x256", "accuracy", "augmentation", "auto", "batch", "best", "beta", "binary", "blog", "case", "center", "classification", "cloud", "competition", "confusion", "correct", "cosine", "creation", "custom", "cut", "data python https www", "data", "dataset", "default", "detection", "development", "dim", "disease", "display", "distribution", "drop", "enable", "end", "epoch", "evaluate", "evaluation", "even", "external", "f1", "fit", "fix", "fold", "formula", "function", "glob", "gpu", "graph", "high", "idea", "image", "improve", "include", "individual", "inference", "input", "kernel", "label", "largest", "leaf", "learn", "learning", "level", "look", "looking", "loop", "magic", "map", "matrix", "mesh", "minimize", "mixing", "model", "my", "network", "next", "no", "normalization", "not", "notebook", "out", "output", "performance", "pipeline", "pod", "practice", "pre", "precision", "prediction", "range", "recall", "resolution", "return", "rotate", "run", "scale", "schedule", "scikit", "score", "set", "single", "size", "source", "square", "stack", "step", "strategy", "string", "tensorflow", "test", "time", "train", "training", "up", "update", "v2", "v3", "validation", "while", "wise", "work"], "potential_description_queries_len": 120, "potential_script_queries": ["lrfn", "matplotlib", "numpy", "plt", "pyplot", "seaborn", "sklearn"], "potential_script_queries_len": 7, "potential_entities_queries": ["best", "external", "kernel", "mesh", "source", "tensorflow", "up"], "potential_entities_queries_len": 7, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 127}