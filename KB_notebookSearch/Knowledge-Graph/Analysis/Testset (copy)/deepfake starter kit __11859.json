{"name": "deepfake starter kit ", "full_name": " h1 DeepFake Starter Kit h1 Content h1 Introduction h1 Preliminary data exploration h2 Load packages h2 Load data h2 Check files type h1 Meta data exploration h2 Missing data h2 Unique values h2 Most frequent originals h1 Video data exploration h2 Missing video or meta data h2 Few fake videos h2 Few real videos h2 Videos with same original h2 Test video files h1 Face detection h2 Play video files h1 Resources h1 References ", "stargazers_count": 0, "forks_count": 0, "description": "25 of the samples or 77. We suspect that actually the real data has missing original if we generalize from the data we glimpsed. The function detect uses a method of the CascadeClassifier to detect objects into images in this case the face eye smile or profile face. Let s look to some more videos from test set. Few real videos Videos with same originalLet s look now to set of samples with the same original. Let s count how many files with each extensions there are. Video data explorationIn the following we will explore some of the video data. com deepfakes the ugly and the good 49115643d8dd Introduction to GAN from Towards Data Science with code GANs from Scratch 1 A deep introduction. Let s check the json file first. We observe that original label has the same pattern for uniques values. In the Data Exploration section we perform a partial Exploratory Data Analysis EDA on the training and testing data. The phenomen invades rapidly the film industry and threatens to compromise news agencies. com Oldpan Faceswap Deepfake Pytorch A Github project for GAN with PyTorch PyTorch GAN https github. com jesucristo gan introduction A GAN developed for Dog face generation competition by cdeotte http kaggle cdeotte Dog Memorizer GAN https www. com eriklindernoren PyTorch GAN A Github recommended by shwetagoyal4 https www. Let s look to few fake videos. com ai society gans from scratch 1 a deep introduction with code in pytorch and tensorflow cb03cdcdba0f A cGAN introduction from Mastering Data Science with code How to Develop a Conditional GAN cGAN From Scratch https machinelearningmastery. Then we initialize the ObjectDetector objects defined above with the respective resources to use CascadeClassfier for each specific task. Then we are also playing few videos. 25 in train sample videos with the FAKE s acounting for 80. DeepFake Starter Kit Content Introduction Preliminary data exploration Load the packages Load the data Check files type Meta data exploration Missing data Unique values Most frequent originals Video data exploration Missing video or meta data Few fake videos Few real videos Videos with same original Test video files Play video files Face detection Resources References IntroductionDeepFake is composed from Deep Learning and Fake and means taking one person from an image or video and replacing with someone elselikeness using technology such as Deep Artificial Neural Networks 1. com Shwetago Generative model using PyTorch References 1 Deepfake Wikipedia https en. com serkanpeldek face detection with opencv 6 Play video and processing https www. com serkanpeldek face detection with opencv Play video and processing by hamditarek https www. 4 db d28 tutorial_cascade_classifier. Let s look to a small collection of samples from test videos. Large companies like Google invest very much in fighting the DeepFake this including release of large datasets to help training models to counter this threat 2. Check files typeHere we check the train data files extensions. com shwetagoyal4 Generative model using PyTorch https github. Unique valuesLet s check into more details the unique values. We also modify our visualization function to work with multiple images. com wiki generative adversarial network gan Deep Convolutional Generative Adversial Networks Tensorflow DCGAN https www. The function call the detect method of the ObjectDetector object. The competition specifies that the train data is provided as archived chunks. com init27 Decrappification DeOldification and Super Resolution https www. Let s explore this JSON file. Play video files From Play video and processing https www. Preliminary data exploration Load packages Load dataWe also added a face detection resource. In the Resources section I provide a short list of various resources for GAN and DeepFake with blog posts Kaggle Kernels and Github repos. The following function extracts an image from a video and then call the function that extracts the face rectangle from the image and display the rectangle above the image. Then we move to perform face and other objects from the persons in the videos extraction. Indeed all missing original data are the one associated with REAL label. After we are checking the files types we are focusing first on the metadata files which we are exploring in details after we are importing in dataframes. We load the resources for frontal face eye smile and profile face detection. The class ObjectDetector initialize the cascade classifier using the imported resource. Important note The data we analyze here is just a very small sample of data. Missing dataWe start by checking for any missing values. There are missing data 19. GANs that generate DeepFakes becomes better every day and of course if you include in a new GAN model all the information we collected until now how to combat various existent models we create a model that cannot be beatten by the existing ones. com marcovasquez basic eda face detection split video roi 5 Face Detection with OpenCV https www. Test video filesLet s also look to few of the test data files. Most frequent originalsLet s look now to the most frequent originals uniques in train sample data. com tagged deepfakes An introduction to DeepFakes from Towards Data Science Deepfakes The Ugly and The Good https towardsdatascience. We pick one of the originals with largest number of samples. After that we are also exploring few of the videos with the same origin. html A tutorial for GANs A Beginner s Guide to Generative Adversarial Networks GANs https pathmind. ai 2019 05 03 decrappify A tutorial from OpenCV for face detection using Cascade Classifiers Cascade Classifier https docs. Face detection From 5 Face Detection using OpenCV https www. rectangle image x y x w y h 0 0 255 3 detected profiles shown in color image detected faces shown in color image image. Let s check this hypothesis. Few fake videosFrom 4 Basic EDA Face Detection split video ROI https www. detect image_gray scale_factor scale_factor min_neighbors min_neighbors min_size int min_size 0 2 int min_size 1 2 for x y w h in smiles cv. Let s visualize now the data. com serkanpeldek face detection with opencv by serkanpeldek https www. Then we move to explore video files by looking first to a sample of fake videos then to real videos. Large digital companies including content providers and social platforms are in the frontrun of fighting Deep Fakes. com serkanpeldek Face Detection with OpenCV https www. Aparently here is a metadata file. Due to a large amount of false positive we deactivated for now the smile detector. More precisely we are using OpenCV Haar Cascade resources to identify frontal face eyes smile and profile face from still images in the videos. Training of models should pe performed offline using the data provided by Kaggle as archives models should be loaded max 1GB memory in a Kernel where inference should be performed submission sample file provided and prediction should be prepared as an output file from the Kernel. From visual inspection of these fakes videos in some cases is very easy to spot the anomalies created when engineering the deep fake in some cases is more difficult. com analytics vidhya gans a brief introduction to generative adversarial networks f06216c7200e Tutorials A nice tutorial for GAN using Pytorch DCGAN Faces Tutorial https pytorch. org wiki Deepfake 2 Google DeepFake Database Endgadget https www. com brassmonkey381 a quick look at the first frame of each video 4 Basic EDA Face Detection split video ROI https www. com hamditarek play video and processing Kernel by hamditarek https www. com hamditarek play video and processing we only show images extracted from the first 6 videos Frontal face profile eye and smile haar cascade loaded Detector object created frontal face eye profile face smile detected eyes shown in color image deactivated due to many false positive smiles sd. Note due to a huge amount of false positive we deactivate for now the smile detector. Let s do now some data distribution visualizations. html Kaggle Kernels A very good intro to GAN by nanashi http kaggle nanashi GAN Introduction https www. com how to develop a conditional generative adversarial network from scratch An introduction to GANs on Analytics Vidhya GANs A Brief Introduction to Generative Adversarial Networks https medium. We can observe that in some cases when the subject is not looking frontaly or when the luminosity is low the algorithm for face detection is not detecting the face or eyes correctly. As we can see the REAL are only 19. Most of the files looks to have mp4 extension let s check if there is other extension as well. org tutorials beginner dcgan_faces_tutorial. com 2019 09 25 google deepfake database 3 A quick look at the first frame of each video https www. For each object we are using a different shape and color as following Frontal face green rectangle Eye red circle Smile red rectangle Profile face blue rectangle. We are visualizing one frame extracted from the video for both real and fake videos. com hamditarek https www. org tutorials generative dcgan A tutorial for video and image colorization and resolution improvement using fast. Missing video or meta dataWe check first if the list of files in the meta info and the list from the folder are the same. com topics A Github project using Pytorch Faceswap Deepfake Pytorch https github. mp4 is the most frequent original 6 samples. We know that we have 77 missing data that s why total is only 323 and we observe that we do have 209 unique examples. com serkanpeldek we got and slightly modified the functions to extract face profile face eyes and smile. Meta data explorationLet s explore now the meta data in train sample. Let s try now the same for few of the images that are real. We apply the function for face detection for a selection of images from train sample videos. Let s look now to a different selection of videos with the same original. With code in PyTorch and TensorFlow https medium. Resources This resources list is not exhaustive it provides just a starting point for Kagglers that would like to join this competition in order to learn like myself. com hamditarek we learned how to play video files in a Kaggle Kernel. com cdeotte dog memorizer gan A Kernel for Face detection using OpenCV with Haarcascade by serkanpeldek https www. We select first a list of fake videos. I provide here technical articles links small blog articles links to Github projects and some inspirational Kaggle Kernels about DeepFake DCGANs and GANs. Let s visualize now one of the videos. We also define a function for detection and display of all these specific objects. com hamditarek play video and processing Github repos Github topic for DeeFakes deepfakes https github. Let s repeat the same process for test videos folder. Blogs Technical Articles Towards Data Science DeepFakes subject selection DeepFakes https towardsdatascience. com marcovasquez basic eda face detection split video roi we modified a function for displaying a selected image from a video. We see that most frequent label is FAKE 80. ai and PyTorch recommended by init27 https www. ", "id": "gpreda/deepfake-starter-kit", "size": "11859", "language": "python", "html_url": "https://www.kaggle.com/code/gpreda/deepfake-starter-kit", "git_url": "https://www.kaggle.com/code/gpreda/deepfake-starter-kit", "script": "__init__ display_image_from_video display_image_from_video_list tqdm_notebook unique_values play_video missing_data plot_count seaborn numpy get_meta_from_json extract_image_objects detect matplotlib.pyplot most_frequent_values pandas b64encode base64 tqdm detect_objects ObjectDetector() IPython.display HTML cv2 ", "entities": "(('function detect', 'face'), 'use') (('Most frequent originalsLet', 'train sample data'), 'look') (('video files Face detection Resources References IntroductionDeepFake', 'Deep Artificial Neural such Networks'), 'load') (('Few real videos', 'same original'), 'look') (('we', 'training data'), 'perform') (('face', 'image'), 'extract') (('EDA Face Few fake videosFrom 4 Basic Detection', 'video ROI https www'), 'split') (('image_gray scale_factor scale_factor min_neighbors min_neighbors int 1 y w 0 2 2 h', 'smiles'), 'detect') (('that', 'myself'), 'be') (('face frontal eyes', 'videos'), 'use') (('first list', 'folder'), 'miss') (('train data', 'archived chunks'), 'specify') (('Large companies', 'threat'), 'invest') (('com serkanpeldek', 'serkanpeldek https www'), 'face') (('we', '209 unique examples'), 'know') (('s', 'data distribution now visualizations'), 'let') (('function', 'ObjectDetector object'), 'call') (('Large digital companies', 'Deep Fakes'), 'be') (('EDA Face Basic Detection', 'video ROI https www'), 'brassmonkey381') (('s', 'files'), 'look') (('com we', 'eyes'), 'serkanpeldek') (('phenomen', 'news agencies'), 'invade') (('Then we', 'then real videos'), 'move') (('com hamditarek we', 'Kaggle Kernel'), 'learn') (('that', 'existing ones'), 'become') (('com', 'Scratch'), 'deepfake') (('Then we', 'videos extraction'), 'move') (('Test video filesLet', 'test data files'), 'look') (('we', 'data'), 'suspect') (('FAKE s', '80'), '25') (('com serkanpeldek', 'hamditarek https www'), 'face') (('We', 'face detection'), 'load') (('We', 'multiple images'), 'modify') (('we', 'here just very small data'), 'note') (('com serkanpeldek', 'OpenCV https www'), 'face') (('blog small articles', 'Kaggle DeepFake inspirational DCGANs'), 'provide') (('Video explorationIn following we', 'video data'), 'datum') (('eda com marcovasquez basic detection', 'OpenCV https www'), 'face') (('we', 'smile detector'), 'due') (('we', 'same origin'), 'explore') (('s', 'same original'), 'let') (('com serkanpeldek', 'Play opencv 6 video'), 'face') (('ObjectDetector', 'imported resource'), 'class') (('algorithm', 'face'), 'observe') (('s', 'test videos folder'), 'let') (('we', 'video'), 'face') (('com analytics vidhya', 'Pytorch DCGAN Faces Tutorial https pytorch'), 'gan') (('s', 'how many extensions'), 'let') (('typeHere we', 'train data files extensions'), 'check') (('s', 'test set'), 'let') (('com jesucristo gan GAN', 'cdeotte http kaggle cdeotte Dog Memorizer GAN https www'), 'introduction') (('s', 'test videos'), 'let') (('I', 'blog posts Kaggle Kernels'), 'provide') (('submission sample prediction', 'Kernel'), 'perform') (('we', 'smile detector'), 'note') (('Then we', 'specific task'), 'initialize') (('We', 'specific objects'), 'define') (('We', 'train sample videos'), 'apply') (('ai', 'Cascade Classifiers Cascade Classifier https docs'), 'decrappify') (('Load', 'face detection dataWe also resource'), 'add') (('com hamditarek', 'hamditarek https www'), 'play') (('that', 'images'), 'let') (('Github repos Github video topic', 'https github'), 'play') (('We', 'samples'), 'pick') (('we', 'blue rectangle'), 'use') (('we', 'dataframes'), 'check') (('original label', 'uniques values'), 'observe') (('We', 'real videos'), 'visualize') (('org tutorials generative', 'video colorization'), 'dcgan') (('Unique valuesLet', 'unique values'), 'check') (('Indeed missing', 'REAL label'), 'be') (('data Meta explorationLet', 'train sample'), 'explore') (('we', 'smiles many false positive sd'), 'play') ", "extra": "['test']", "label": "Perfect_files", "potential_description_queries": ["algorithm", "analyze", "apply", "associated", "basic", "blog", "call", "case", "check", "checking", "circle", "classifier", "code", "collection", "color", "competition", "content", "count", "course", "create", "data", "database", "day", "deepfake", "define", "detect", "detected", "detection", "develop", "display", "distribution", "eda", "engineering", "every", "explore", "extension", "extract", "eye", "face", "file", "folder", "following", "frame", "frequent", "function", "gan", "generate", "generation", "google", "green", "help", "http", "image", "improvement", "include", "including", "industry", "inference", "info", "initialize", "int", "join", "json", "kaggle", "label", "largest", "learn", "let", "list", "load", "look", "looking", "max", "memory", "meta", "metadata", "method", "missing", "model", "most", "move", "multiple", "network", "new", "not", "number", "object", "offline", "order", "output", "partial", "pattern", "perform", "person", "point", "positive", "prediction", "processing", "profile", "project", "provide", "pytorch", "resolution", "roi", "sample", "scratch", "section", "select", "selected", "selection", "set", "shape", "short", "society", "split", "start", "subject", "submission", "technology", "tensorflow", "test", "testing", "topic", "total", "train", "training", "try", "tutorial", "type", "unique", "until", "video", "visualization", "visualize", "work"], "potential_description_queries_len": 135, "potential_script_queries": ["cv2", "numpy", "seaborn", "tqdm"], "potential_script_queries_len": 4, "potential_entities_queries": ["data", "distribution", "frequent", "http", "kaggle", "sample", "video"], "potential_entities_queries_len": 7, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 138}