{"name": "titanic tutorial ", "full_name": " h1 Part 1 Get started h2 Join the competition h2 The challenge h2 The data h3 1 train csv h3 2 test csv h3 3 gender submission csv h1 Part 2 Your coding environment h2 The Notebook h2 Your first lines of code h2 Load the data h1 Part 3 Your first submission h2 Explore a pattern h2 Your first machine learning model h1 Part 4 Learn more ", "stargazers_count": 0, "forks_count": 0, "description": "com kaggle docker python For example here s several helpful packages to load in linear algebra data processing CSV file I O e. Once you ve done this you can view all of the data in the window. png Congratulations for making your first submission to a Kaggle competition Within ten minutes you should receive a message providing your spot on the leaderboard. Make sure that your notebook outputs the same message above Your submission was successfully saved before moving on. png You can edit the name by clicking on it. csv does not have a Survived column this information is hidden from you and how well you do at predicting these hidden values will determine how highly you score in the competition 3 gender_submission. Part 2 Your coding environmentIn this section you ll train your own machine learning model to improve your predictions. This pulls up a list of versions on the right of the screen. At the end of the tutorial we suggest resources to continue your learning. Copy the code below into a new code cell. This will generate a pop up window. So we ll start simple. read_csv Input data files are available in the. to the right of the most recent version and select Open in Viewer. Your hypotheses regarding survival will probably be different which will lead to a different submission file. But just like this file your submission should have a PassengerId column containing the IDs of each passenger from test. For instance the first passenger listed in train. Load the dataThe second code cell in your notebook now appears below the three lines of output with the file locations. _The code above shows only the first 5 rows of each table but all of the data is there all 891 rows of train. You must accept the competition rules in order to participate. You can use Kaggle Notebooks to getting up and running with writing code quickly and without having to install anything on your computer. _ Then either hit the play button which appears to the left of the blue line or hit Shift Enter on your keyboard. If the code runs successfully three lines of output are returned. After it has finished running click on the number to the right of the Save Version button. Join the competition The first thing to do is to join the competition Open a new window with the competition page https www. This generates a window in the bottom left corner of the notebook. Before moving on make sure that your code returns the output above. csv file is provided as an example that shows how you should structure your predictions. Your first machine learning modelWe ll build what s known as a random forest model. The code that you ve just written is in the Python programming language. For example running this by clicking run or pressing Shift Enter will list all files under the input directory Any results you write to the current directory are saved as output. Our competitions often have large cash prizes public leaderboards and involve complex data. Don t forget to click on the play button or hit Shift Enter As before make sure that you see the output above in your notebook before continuing. Click on the Output tab on the right of the screen. _If you ve never written code before or don t have any experience with machine learning don t worry We don t assume any prior experience in this tutorial. csvUsing the patterns you find in train. These rules govern how many submissions you can make per day the maximum team size and other competition specific details. Since gender seems to be such a strong indicator of survival the submission file in gender_submission. It uses a Python module called pandas abbreviated as pd to load the table from the train. _If your cursor is in the right place you ll notice a blue vertical line to the left of the gray box. png Your first lines of codeWhen you start a new notebook it has two gray boxes for storing code. Then click on I Understand and Accept to indicate that you will abide by the competition rules. Once all of the code runs successfully all of the data in train. It s very important that you see this output in your notebook before proceeding with the tutorial _If your code does not produce this output_ double check that your code is identical to the two lines above. csv and 3 gender_submission. png The first code cell already has some code in it. if it s a 0 the passenger died. Logging into Kaggle for the first time can be daunting. To give you a clear understanding of how our platform works and a mental model of the type of learning you could do on Kaggle we ve created a Getting Started tutorial for the Titanic competition. _If you see a Submit Predictions button instead of a Join Competition button you have already joined the competition and don t need to do so again. png This takes you to the rules acceptance page. Then click on New Notebook. At this point you should have at least three code cells in your notebook. Then click on the Submit button to submit your results. csv you have to predict whether the other 418 passengers on board in test. The code above calculates the percentage of female passengers in train. Then run the code below in another code cell The code above calculates the percentage of male passengers in train. Nevertheless we really think all data scientists can rapidly learn from machine learning competitions and meaningfully contribute to our community. csv on the left of the screen to examine its contents. To run this code put your cursor in the code cell. This model is constructed of several trees there are three trees in the picture below but we ll construct 100 that will individually consider each passenger s data and vote on whether the individual survived. And make sure your cursor is in the code cell before hitting Shift Enter. So if this is your first time entering a Kaggle competition regardless of whether you have experience with handling large datasets haven t done much coding are newer to data science or are relatively experienced but are just unfamiliar with Kaggle s platform you re in the right place Part 1 Get startedIn this section you ll learn more about the competition and make your first submission. Copy this code into your notebook and run it in a new code cell. This shows us where the competition data is stored so that we can load the files into the notebook. csv file before generating predictions for the passengers in test. Then once you re done either click on the blue play button or hit Shift Enter. You ll also know enough to generate even better predictions This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python docker image https github. Great work Part 4 Learn more If you re interested in learning more we strongly suggest our 3 hour Intro to Machine Learning https www. The challengeThe competition is simple we want you to use the Titanic passenger data name age price of ticket etc to try to predict who will survive and who will die. It walks you through the initial steps required to get your first decent submission on the leaderboard. csv is not a bad first guess But at the end of the day this gender based submission bases its predictions on only a single column. a Survived column that you will create with a 1 for the rows where you think the passenger survived and a 0 where you predict that the passenger died. From this you can see that almost 75 of the women on board survived whereas only 19 of the men lived to tell about it. Change it to something more descriptive like Getting Started with Titanic. Once you re ready click on the Save Version button in the top right corner of your notebook. Below you can see the same code that you just ran along with the output that you should see in your notebook. _ The NotebookThe first thing to do is to create a Kaggle Notebook where you ll store all of your code. png The code cell below looks for patterns in four different columns Pclass Sex SibSp and Parch of the data. There are three files in the data 1 train. com learn intro to machine learning course which will help you fully understand all of the code that we ve presented here. Explore a patternRemember that the sample submission file in gender_submission. Click on the ellipsis. By the end of the tutorial you ll also have a solid understanding of how to use Kaggle s online coding environment where you ll have trained your own machine learning model. He was 22 years old when he died on the Titanic. In the top left corner you can see the name of your notebook something like kernel2daed3cd79. Then scroll down to find the list of files. We refer to these gray boxes as code cells. csv is loaded in the notebook. The dataTo take a look at the competition data click on the Data tab at the top of the competition page. If you re not already familiar with Python and pandas the code shouldn t make sense to you but don t worry The point of this tutorial is to quickly make your first submission to the competition. Then the random forest model makes a democratic decision the outcome with the most votes wins https i. _If you are interested in deep learning we also offer free GPU access _ Begin by clicking on the Code tab on the competition page. csvThe gender_submission. It predicts that all female passengers survived and all male passengers died. csv contains the details of a subset of the passengers on board 891 passengers to be exact where each passenger gets a different row in the table. png Copy the code below into the third code cell of your notebook to load the contents of the test. To investigate this data click on the name of the file on the left of the screen. As you can imagine by considering multiple columns we can discover more complex patterns that can potentially yield better informed predictions. The code also saves these new predictions in a CSV file submission. It constructs the trees in the random forest model based on patterns in the train. csv _ Part 3 Your first submissionRemember our goal we want to find patterns in train. Your code should return the output above which corresponds to the first five rows of the table in train. png Type the two lines of code below into your second code cell. Again don t worry if this code doesn t make sense to you For now we ll focus on how to generate and submit predictions. csv file into the notebook. To do this we needed to plug in the location of the file which we saw was kaggle input titanic train. csv that help us predict whether the passengers in test. png Your notebook will take a few seconds to load. Is this a reasonable first guess We ll check if this pattern holds true in the data in train. Since it is quite difficult to consider several columns at once or it would take a long time to consider all possible patterns in many different columns simultaneously we ll use machine learning to automate this for us. png The values in the second column Survived can be used to determine whether each passenger survived or not if it s a 1 the passenger survived. Ensure that the Save and Run All option is selected and then click on the Save button. com c titanic and click on the Join Competition button if you haven t already. csv and all 418 rows of test. It might initially feel overwhelming to look for patterns when there s so much data to sort through. csv assumes that all female passengers survived and all male passengers died. ", "id": "alexisbcook/titanic-tutorial", "size": "12380", "language": "python", "html_url": "https://www.kaggle.com/code/alexisbcook/titanic-tutorial", "git_url": "https://www.kaggle.com/code/alexisbcook/titanic-tutorial", "script": "sklearn.ensemble pandas numpy RandomForestClassifier ", "entities": "(('passenger', 'rows'), 'column') (('gender', 'submission gender_submission'), 'seem') (('This', 'notebook'), 'generate') (('submission', 'test'), 'have') (('option', 'Save then button'), 'ensure') (('individual', 'individually data'), 'be') (('you', 'output'), 'list') (('you', 'team maximum size'), 'govern') (('code', 'train'), 'run') (('It', 'train'), 'use') (('It', 'leaderboard'), 'walk') (('double code', 'two lines'), 's') (('you', 'kernel2daed3cd79'), 'see') (('you', 'gray box'), '_') (('a passenger', 'second column'), 'png') (('it', 'Save Version button'), 'finish') (('dataTo', 'competition page'), 'take') (('we', 'competition page'), '_') (('who', 'etc'), 'be') (('which', 'keyboard'), 'hit') (('only 19', 'it'), 'see') (('you', 'competition rules'), 'click') (('_ Part 3 first we', 'train'), 'csv') (('it', 'code'), 'png') (('Logging', 'first time'), 'daunt') (('you', 'notebook'), 're') (('notebook', 'load'), 'png') (('png', 'test'), 'Copy') (('It', 'train'), 'construct') (('simultaneously we', 'us'), 'be') (('you', 'notebook'), 'have') (('Then you', 'Shift Enter'), 'do') (('Join Competition instead you', 'don need'), '_') (('data really scientists', 'meaningfully community'), 'think') (('based submission', 'only single column'), 'be') (('you', 'test'), 'have') (('We', 'tutorial'), '_') (('we', 'Machine Learning https www'), 'learn') (('which', 'train'), 'return') (('png', 'code below second cell'), 'Type') (('all', '891 train'), '_') (('we', 'that'), 'learn') (('code', 'output'), 'make') (('It', 'initially patterns'), 'feel') (('successfully three lines', 'output'), 'return') (('This', 'screen'), 'pull') (('We', 'code cells'), 'refer') (('we', 'file'), 'need') (('Load', 'file locations'), 'appear') (('you', 'leaderboard'), 'Congratulations') (('Once all', 'train'), 'run') (('cursor', 'Shift Enter'), 'make') (('probably which', 'submission different file'), 'be') (('we', 'Titanic competition'), 'give') (('outcome', 'https i.'), 'make') (('you', 'Python programming just language'), 'be') (('where you', 'code'), '_') (('2 coding environmentIn section you', 'predictions'), 'part') (('you', 'window'), 'view') (('output', 'notebook'), 'forget') (('22 years when he', 'Titanic'), 'be') (('don t point', 'competition'), 'make') (('what', 'forest random model'), 'build') (('code cell', 'Pclass Sex data'), 'png') (('png You', 'it'), 'edit') (('code', 'CSV file submission'), 'save') (('you', 'first submission'), 'be') (('where you', 'machine learning own model'), 'have') (('how highly you', '3 gender_submission'), 'have') (('us', 'test'), 'csv') (('same message', 'submission'), 'make') (('how you', 'predictions'), 'provide') (('where passenger', 'table'), 'contain') (('You', 'order'), 'accept') (('we', 'how predictions'), 'worry') (('that', 'potentially better informed predictions'), 'discover') (('It', 'python docker image https kaggle github'), 'know') (('we', 'learning'), 'suggest') (('first thing', 'competition page https www'), 'join') (('competitions', 'complex data'), 'have') (('code first cell', 'it'), 'png') (('You', 'computer'), 'use') (('you', 't'), 'titanic') (('read_csv Input data files', 'the'), 'be') (('we', 'notebook'), 'show') (('This', 'rules acceptance page'), 'png') (('you', 'notebook'), 'see') (('pattern', 'train'), 'be') (('code', 'train'), 'calculate') ", "extra": "['gender', 'outcome', 'test']", "label": "Perfect_files", "potential_description_queries": ["age", "board", "bottom", "build", "button", "cell", "check", "clear", "code", "coding", "column", "competition", "consider", "could", "course", "create", "csv", "current", "data", "day", "decision", "directory", "double", "end", "environment", "even", "experience", "file", "find", "forest", "gender", "generate", "gray", "help", "image", "improve", "indicate", "individual", "initially", "input", "instance", "join", "kaggle", "lead", "learn", "learning", "least", "left", "line", "linear", "list", "load", "look", "male", "maximum", "men", "message", "might", "model", "module", "most", "multiple", "name", "need", "new", "not", "notebook", "number", "option", "order", "outcome", "output", "page", "passenger", "pattern", "pd", "per", "percentage", "picture", "place", "png", "point", "predict", "price", "processing", "public", "python", "random", "re", "return", "right", "row", "run", "running", "sample", "science", "score", "screen", "second", "section", "select", "selected", "sense", "several", "single", "size", "something", "sort", "start", "store", "structure", "submission", "subset", "survival", "survived", "table", "team", "think", "through", "ticket", "time", "titanic", "train", "try", "tutorial", "type", "under", "understanding", "up", "version", "vertical", "view", "vote", "who", "window", "work", "write"], "potential_description_queries_len": 137, "potential_script_queries": ["numpy", "sklearn"], "potential_script_queries_len": 2, "potential_entities_queries": ["data", "image", "learning", "page", "second", "single"], "potential_entities_queries_len": 6, "potential_extra_queries": ["test"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 140}