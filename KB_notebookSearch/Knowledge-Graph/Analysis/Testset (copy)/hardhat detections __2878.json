{"name": "hardhat detections ", "full_name": " h1 for video h1 for images h1 load image h1 img path input hardhat v2 Hard Hat Images 005325 jpg rf 45a2fcd397555b21cb09401d1a044d25 jpg h1 plt figure h1 plt imshow image h1 plt show h1 buat blob dari image h1 lewatkan blob pada face detection h1 loop pada detections ", "stargazers_count": 0, "forks_count": 0, "description": "COLOR_BGR2RGB plt. for video for images load imageimg_path. predict face1 0 hardhat withoutHardhat hardHatNet. setInput blob detections faceNet. 45 color 2 cv2. expand_dims face axis 0 mask withoutMask maskNet. 0 lewatkan blob pada face detectionprint INFO computing face detections. 0 300 300 104. format label max mask withoutMask 100 tampilkan label dan bounding box pada frame increment fps write video yang telah di proses ke output. forward loop pada detectionsfor i in range 0 detections. shape 2 extract confidence probabilitas confidence detections 0 0 i 2 filter weak detections yang kurang dari confidence minimum if confidence ap. input hardhat v2 Hard Hat Images 005325_jpg. COLOR_BGR2RGB face cv2. predict face1 0 tentukan label yang digunakan dan warna untuk label tersebut hijau dan merah if hardhat withoutHardhat and mask withoutMask label Hardhat Mask color 0 255 0 green elif hardhat withoutHardhat and mask withoutMask label Hardhat color 255 0 0 blue elif hardhat withoutMask label Mask color 0 255 255 yellow elif hardhat withoutHardhat and mask withoutMask label No Hardhat Mask color 0 0 255 red tampilkan label dan bounding box pada frame cv2. rectangle image startX startY endX endY color 2 image cv2. shape 2 buat blob dari imageblob cv2. FONT_HERSHEY_SIMPLEX 0. resize face 224 224 face img_to_array face face preprocess_input face face1 np. confidence buat bounding box pada face yang terdeteksi box detections 0 0 i 3 7 np. input test hardhatmask detector no mask hardhat. show impor pustaka yang diperlukan download imutils buat argparse class karena pada kaggle tidak dapat menginstall argparse untuk training model untuk implementasi model load model face detektor load model face mask detector buat fungsi untuk mendeteksi mask frame video faceNet model pendeteksi face maskNet model pendeteksi mask buat blob lewatkan blob pada face detection initialize list dari face lokasi dan prediksi loop pada detections extract confidence probabilitas pada detections filter weak detections yang kurang dari confidence minimum buat bounding box pada face yang terdeteksi pastikan bounding box berada dalam frame extract face ROI Region of Interest convert dari BGR to RGB ordering resize 224x224 dan preprocess append face dan bounding box pada list yg telah dibuat run faces yang telah didapat ke face mask detector buat prediksi saat ada face terdeteksi buat batch predictions untuk mendeteksi semua face secara bersamaan return 2 tuple face locations dan nilai prediksi ambil variable height width dan fps dari video simpan video output inisiasi elapsed time dan fps loop pada frame video deteksi face pada video dan tentukan apakah memakai masker atau tidak loop pada lokasi face yang terdeteksi unpack bounding box dan nilai prediksi tentukan label yang digunakan dan warna untuk label tersebut hijau dan merah green blue yellow red label Helmet if harhat withoutHardhat else No Helmet color 0 255 0 if label Helmet else 0 0 255 label. 45a2fcd397555b21cb09401d1a044d25. putText image label startX startY 10 cv2. blobFromImage image 1. imread img_path plt. astype int startX startX 15 startY startY 20 endX endX 15 endY endY 20 pastikan bounding box berada dalam frame startX startY max 0 startX max 0 startY endX endY min w 1 endX min h 1 endY extract face ROI Region of Interest convert dari BGR to RGB ordering resize 224x224 dan preprocess face image startY endY startX endX face cv2. array w h w h startX startY endX endY box. ", "id": "didiruh/hardhat-detections", "size": "2878", "language": "python", "html_url": "https://www.kaggle.com/code/didiruh/hardhat-detections", "git_url": "https://www.kaggle.com/code/didiruh/hardhat-detections", "script": "Flatten sklearn.metrics tensorflow.keras.applications.mobilenet_v2 tensorflow.keras.utils LabelBinarizer tensorflow.keras.optimizers tensorflow.keras.layers VideoStream tensorflow.keras.preprocessing.image ap Dropout tensorflow.keras.models Adam MultiLabelBinarizer AveragePooling2D detect_and_predict_hardhat_mask numpy tensorflow.keras.applications Input img_to_array sklearn.model_selection ImageDataGenerator load_img matplotlib.pyplot MobileNetV2 Dense classification_report imutils.video to_categorical imutils preprocess_input load_model Model sklearn.preprocessing paths train_test_split ", "entities": "(('forward loop pada', 'range'), 'detection') (('Helmet label else 0 255 0 Helmet', 'dan warna untuk label tersebut hijau label dan merah green blue yellow red withoutHardhat'), 'show') (('rectangle image', 'image startY endY color 2 cv2'), 'startX') (('expand_dims', 'axis 0 mask'), 'face') (('di', 'ke output'), 'withoutMask') (('preprocess_input', 'face1 np'), 'face') (('0 255 255 yellow hardhat withoutMask', 'Mask tampilkan label box pada frame 255 red cv2'), 'predict') (('image putText label', 'startY 10 cv2'), 'startX') (('dan 224x224 preprocess', 'image face startX cv2'), 'startx') (('0 i', 'yang terdeteksi box detections'), 'buat') ", "extra": "['test', 'cd3']", "label": "Perfect_files", "potential_description_queries": ["append", "argparse", "array", "batch", "blob", "bounding", "box", "color", "confidence", "convert", "detection", "detector", "download", "elapsed", "extract", "face", "filter", "format", "forward", "frame", "green", "height", "image", "imread", "initialize", "input", "int", "kaggle", "label", "list", "load", "loop", "mask", "max", "min", "minimum", "model", "no", "output", "predict", "range", "resize", "return", "run", "shape", "test", "time", "training", "tuple", "unpack", "v2", "variable", "video", "width", "write"], "potential_description_queries_len": 55, "potential_script_queries": ["ap", "numpy", "preprocessing"], "potential_script_queries_len": 3, "potential_entities_queries": ["color", "frame", "label"], "potential_entities_queries_len": 3, "potential_extra_queries": ["cd3"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 59}