{"name": "image recognition gender detection inceptionv3 ", "full_name": " h2 Notebook Image Recognition Gender Detection h3 Now let s start h2 Dataset h3 Context h3 Content h4 Overall h4 Data Files h3 Import libraries h2 Step 1 Data Exploration h3 Load the attributes of every picture h3 List of the available attribute in the CelebA dataset h3 Example of a picture in CelebA dataset h3 Distribution of the Attribute h2 Step 2 Split Dataset into Training Validation and Test h4 Join the partition and the attributes in the same data frame h3 2 1 Generate Partitions Train Validation Test h2 Step 3 Pre processing Images Data Augmentation h3 3 1 Let s start with an example Data Augmentation h3 3 2 Build Data Generators h2 Step 4 Build the Model Gender Recognition h3 4 1 Set the Model h2 Inception V3 model structure h2 New Top layers h3 4 2 Train Model h4 The best model after NUM epech got an accuracy over the validation data of 95 75 h3 4 3 Model Evaluation h3 5 Conclusion h3 6 Let s play with the Model ", "stargazers_count": 0, "forks_count": 0, "description": "Due computational resource limitation the model was train with a subset of images. I have modifed the code regarding the one I submitted in Udacity due some limitation on Kaggle s Notebook This dataset on Kaggle do not allow to work with the flow_from_directory method of keras as the images need to be on different folders depending the target and type of data train validation test. Train Model The best model after NUM_epech got an accuracy over the validation data of 95. This approach could give better performance to the model is an expensive task anyway as the model can be measure on the test data set after is trained and this takes time and computational resources. To deal with this more sophisticated preprocessing data can be added or complement the data set with pictures that are not entirely based in close up to the face of the subject. Environments where there are more than one subject in the picture was not part of the scope of this Notebook but it is a good improvement in order to develop a better application. The model will learn from these variations changing angle size and position being able to predict better never seen images that could have the same variations in position size and position. Images cover large pose variations background clutter diverse people supported by a large quantity of images and rich annotations. ConclusionThe built model using transfer learning from the InceptionV3 and adding custom layers successfully recognize the gender giving certain picture with 94. This degree project explains how imbalanced training data impact on CNNs models https www. 8 of accuracy over the test data. io models sequential fit generator Plot loss function value through epochs Plot accuracy through epochs load the best model Test Data generate prediction report test accuracy dictionary to name the prediction inspired on this kernel https www. For this I am working with the flow method. csv Recommended partitioning of images into training validation testing sets. There are more Female gender than Male gender in the data set. 1 Generate Partitions Train Validation Test Number of images need to be balanced in order to get a good performance for the model each model will have its own folder of training validation and test balanced data. source https hackathonprojects. csvDue time execution by now we will be using a reduced number of images Training 20000 images Validation 5000 images Test 5000 Images Join the partition and the attributes in the same data frame 2. com 2016 09 74911 image03. This data was originally collected by researchers at MMLAB The Chinese University of Hong Kong specific reference in Acknowledgment section. Watching the pictures of the CelebA Data Set most of the pictures are almost a close up to the face of the subject this leads to the model to learn from this type of pictures and in situation where the subjects is just a small portion of a picture the model could not perform well. There are 5 landmarks left eye right eye nose left mouth right mouth list_attr_celeba. width and height represent the width and height of bounding box list_landmarks_align_celeba. Below is an example of how the pictures looks like. html which is available on Kaggle. com jessicali9530 celeba dataset ContextA popular component of computer vision and deep learning revolves around identifying faces for various applications from logging into your phone with your face or searching through surveillance images for a particular suspect. Nevertheless there are some limitations detected and opportunities for improvements Train the algorithms with the entire data set of images. csv Attribute labels for each image. Memory limitation so I am using a reduced amount of images to train and validate. csv Bounding box information for each image. In this project we will build a Machine Learning Algorithm using CNN to predict from a giving picture if the celebrity is male or female. Data Augmentation allows to generate images with modifications to the original ones. A good example of these applications is the work done by research of The Chinese University of Hong Kong for face detection using deep learning https arxiv. Build Data GeneratorsWith the data generator created and data for validation we are ready to start modeling. Content Overall202 599 number of face images of various celebrities10 177 unique identities but names of identities are not given40 binary attribute annotations per image5 landmark locations Data Files img_align_celeba. Notebook Image Recognition Gender DetectionThis Notebook is part of my Capstone Project for the Machine Learning Engineer Nanodegree of Udacity. 1 represents positive while 1 represents negative Import libraries Step 1 Data ExplorationWe will be using the CelebA Dataset which includes images of 178 x 218 px. Step 2 Split Dataset into Training Validation and TestThe recommended partitioning of images into training validation testing of the data set is 1 162770 are training 162771 182637 are validation 182638 202599 are testingThe partition is in file list_eval_partition. se social files 588617ebf2765401cfcc478c PHensmanDMasko_dkand15. Images 1 162770 are training 162771 182637 are validation 182638 202599 are testing list_bbox_celeba. pdfOn this step we will create functions that will help us to create each partition. Step 3 Pre processing Images Data AugmentationGenerates Data Augmentation for iamges. This will make the algorithm to learn from different context of the picture giving it more experience in order to predict better never seen images. This dataset is great for training and testing models for face detection particularly for recognising facial attributes such as finding people with brown hair are smiling or wearing glasses. OpenCV is a good candidate to help with this development as it very accurate to detect feces and its position in the pictures then that portion of the picture the faces can be classified separately using the developed models on this project. The result is a new set of images with modifications from the original one that allows to the model to learn from these variations in order to take this kind of images during the learning process and predict better never seen images. Step 4 Build the Model Gender Recognition 4. Description of the CelebA dataset from kaggle https www. Let s start with an example Data AugmentationThis is how an image will look like after data augmentation based in the giving parameters below. Model Evaluation 5. Use difference structures for the CNNs. Now let s startImage recognition is one of the many applications of Machine Learning it can solve problems for security purposes object detection face detection healthcare entertainment among others. x_1 and y_1 represent the upper left point coordinate of bounding box. This give us some insight about the need to balance the data in next steps. Set the ModelInception V3 model structureThis is the structure of the Inception V3 model developed over the imagenet dataset. Let s play with the ModelI hope you enjoyed this Notebook Please feel free to ask me question you may have or make improvements to the Notebook. These layers will be replaced for the following layers New Top layersLayers to be trained with the new model. Cheers set variables import the data set that include the attribute for each picture replace 1 by 0 List of available attributes plot picture and attributes some attributes Female or Male Recomended partition display counter by partition 0 TRAINING 1 VALIDATION 2 TEST join the partition with the attributes for Train and Validation for Test Generate image generator for data augmentation load one image and reshape plot 10 augmented images of the loaded iamge Train data Train Data Preparation Data Augmentation with generators Validation Data Import InceptionV3 Model Adding custom Layers creating the final model Lock initial layers to do not be trained compile the model https keras. zip All the face images cropped and aligned list_eval_partition. Having an appropriate machine the model can be trained including all the images. csv Image landmarks and their respective coordinates. com stassl displaying inline images in pandas dataframe credits to stassl prediction select random images of the test partition display result. Load the attributes of every pictureFile list_attr_celeba. csv List of the available attribute in the CelebA dataset40 Attributes Example of a picture in CelebA dataset178 x 218 px Distribution of the AttributeAs specified before this Notebook is an imagine recognition project of the Gender. There are 40 attributes. DatasetFor this project we will use the CelebA dataset http mmlab. pngThe top layers including classification are not included. This application has an enormous potential to help our society so it is important to find new uses for this tool improve the current methods and get more accurate and useful insights from it. ", "id": "bmarcos/image-recognition-gender-detection-inceptionv3", "size": "8487", "language": "python", "html_url": "https://www.kaggle.com/code/bmarcos/image-recognition-gender-detection-inceptionv3", "git_url": "https://www.kaggle.com/code/bmarcos/image-recognition-gender-detection-inceptionv3", "script": "Flatten sklearn.metrics keras.preprocessing.image display BytesIO keras.layers keras.callbacks GlobalAveragePooling2D np_utils Dropout Sequential keras.applications.inception_v3 SGD seaborn numpy InceptionV3 array_to_img optimizers PIL img_to_array io ModelCheckpoint f1_score ImageDataGenerator IPython.core.display load_img Image matplotlib.pyplot Dense keras.utils tensorflow pandas keras.optimizers generate_df preprocess_input Model display_result load_reshape_img img_to_display keras gender_prediction keras.models HTML ", "entities": "(('celebrity', 'giving picture'), 'build') (('this', 'time'), 'be') (('Test best Data', 'kernel https www'), 'dictionary') (('Train best model', '95'), 'Model') (('5000 Images', 'data same frame'), 'use') (('which', '178 218 px'), 'represent') (('Images', 'images'), 'cover') (('face images', 'list_eval_partition'), 'zip') (('images', 'data train validation test'), 'modife') (('eye right nose', 'mouth'), 'be') (('data', 'Acknowledgment specific section'), 'collect') (('it', 'better application'), 'be') (('model', 'training validation'), 'need') (('new uses', 'it'), 'have') (('faces', 'project'), 'classify') (('com stassl', 'test partition display result'), 'select') (('model', 'just small picture'), 'be') (('degree project', 'CNNs models https www'), 'explain') (('following layers', 'New Top new model'), 'replace') (('x_1', 'box'), 'represent') (('good example', 'learning https deep arxiv'), 'be') (('project we', 'CelebA dataset http mmlab'), 'datasetfor') (('width', 'box list_landmarks_align_celeba'), 'represent') (('you', 'Notebook'), 'let') (('ConclusionThe', '94'), 'build') (('that', 'position size'), 'learn') (('pngThe top layers', 'classification'), 'include') (('Images', '1 162770 162771 182637 182638 202599 list_bbox_celeba'), 'be') (('algorithm', 'better images'), 'see') (('that', 'better images'), 'see') (('that', 'subject'), 'add') (('detection', 'others'), 'let') (('This', 'next steps'), 'give') (('Nevertheless opportunities', 'images'), 'be') (('testingThe 162771 182637 182638 202599 partition', 'file list_eval_partition'), 'be') (('that', 'partition'), 'create') (('dataset', 'glasses'), 'be') (('Data Augmentation', 'original ones'), 'allow') (('Notebook', 'recognition imagine Gender'), 'List') (('model', 'images'), 'have') (('com celeba ContextA popular component', 'particular suspect'), 'jessicali9530') (('Notebook Image Recognition Gender DetectionThis Notebook', 'Udacity'), 'be') (('model', 'images'), 'train') (('how image', 'giving parameters'), 'let') (('Validation Data custom Layers', 'model final Lock initial layers'), 'set') (('Memory so I', 'images'), 'limitation') (('I', 'flow method'), 'work') (('we', 'validation'), 'GeneratorsWith') (('structureThis', 'imagenet dataset'), 'be') (('Overall202 599 number', 'given40 attribute image5 landmark locations Data binary Files'), 'Content') ", "extra": "['annotation', 'gender', 'test', 'female gender', 'male gender']", "label": "Perfect_files", "potential_description_queries": ["accuracy", "algorithm", "application", "approach", "attribute", "augmentation", "background", "balance", "best", "binary", "bounding", "box", "build", "classification", "close", "code", "compile", "computer", "context", "could", "create", "csv", "current", "custom", "data", "dataframe", "dataset", "degree", "detect", "detected", "detection", "develop", "development", "dictionary", "difference", "display", "every", "execution", "experience", "eye", "face", "file", "final", "find", "fit", "flow", "folder", "following", "frame", "function", "gender", "generate", "generator", "height", "help", "hope", "http", "image", "imagenet", "import", "improve", "improvement", "include", "including", "io", "join", "kaggle", "kernel", "learn", "learning", "left", "let", "load", "logging", "look", "male", "measure", "method", "model", "most", "mouth", "my", "name", "need", "negative", "new", "next", "not", "number", "object", "order", "part", "people", "per", "perform", "performance", "picture", "plot", "point", "position", "positive", "potential", "predict", "prediction", "preprocessing", "processing", "project", "quantity", "question", "random", "reference", "replace", "report", "research", "reshape", "result", "rich", "right", "scope", "select", "set", "situation", "size", "society", "source", "start", "step", "structure", "subject", "subset", "target", "task", "test", "testing", "through", "time", "tool", "train", "training", "transfer", "type", "unique", "up", "upper", "validation", "value", "vision", "while", "width", "work", "zip"], "potential_description_queries_len": 151, "potential_script_queries": ["core", "io", "numpy", "seaborn", "tensorflow"], "potential_script_queries_len": 5, "potential_entities_queries": ["best", "custom", "display", "http", "right", "validation"], "potential_entities_queries_len": 6, "potential_extra_queries": ["male"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 154}