{"name": "topic 9 part 2 time series with facebook prophet ", "full_name": " h2 mlcourse ai Open Machine Learning Course h1 Topic 9 Time series analysis in Python h2 Part 2 Predicting the future with Facebook Prophet h2 Article outline h2 1 Introduction h2 2 The Prophet Forecasting Model h3 Trend h3 Seasonality h3 Holidays and Events h3 Error h3 Prophet Benchmarking h2 3 Practice with Facebook Prophet h3 3 1 Installation in Python h3 3 2 Dataset h3 3 3 Exploratory visual analysis h3 3 4 Making a forecast h3 3 5 Forecast quality evaluation h3 3 6 Visualization h2 4 Box Cox Transformation h2 5 Summary h2 6 References h2 Support course creators ", "stargazers_count": 0, "forks_count": 0, "description": "Third we will use Plotly to make our chart interactive which is great for exploring. However this library is user friendly and easily customizable. data folder if you d like to reproduce the following code Next we leave out all columns except published and url. ErrorThe error term epsilon t represents information that was not reflected in the model. They have somehow turned up in our dataset but they are hardly legitimate ones. To see it let s print out the first 3 rows To fix this we need to aggregate the post counts by bins of a date size. Holidays component h t contributes information about holidays and events. What is especially important these paramaters are quite comprehensible even for non experts in time series analysis which is a field of data science requiring certain skill and experience. org wiki Moving_average and Exponential Smoothing https en. To sum up from visual analysis we can see that our dataset is non stationary with a prominent growing trend. To measure the quality of our forecast we need to split our dataset into the historical part which is the first and biggest slice of our data and the prediction part which will be located at the end of the timeline. Free use is permitted for any non commercial purpose. To utilize this feature the analyst needs to provide a custom list of events. snaive seasonal naive is a model that makes constant predictions taking into account information about seasonality. Prophet may not be suitable for time series with unstable variance at least when the default settings are used. It seems that these two measures should give us a more legible plot. Also Prophet allows analysts to manually set changepoints of the growth rate and capacity values at different points in time. Let s look closer at how the forcasting quality was measured in the article. 5 Forecast quality evaluationLet s evaluate the quality of the algorithm by calculating the error metrics for the last 30 days that we predicted. As we have seen the Prophet library does not make wonders and its predictions out of box are not ideal https en. Prophet BenchmarkingFor a detailed description of the model and algorithms behind Prophet refer to the paper Forecasting at scale https peerj. SeasonalityThe seasonal component s t provides a flexible model of periodic changes due to weekly and yearly seasonality. The second trend model is a simple Piecewise Linear Model with a constant rate of growth. ln y_ i text if lambda 0. Note that we use prediction_size for the third parameter in order to zoom in on the interval being predicted We see that the forecast of weekly changes in the second graph is much closer to the real values now. Six new variables are added monday tuesday wednesday thursday friday saturday which take values 0 or 1 depending on the day of the week. 1 Installation in Python 3. org licenses by nc sa 4. org wiki Exponential_smoothing among others. One of the typical examples would be representing the growth of the audience of an application or a website. Practice with Facebook Prophet 3. 2 DatasetWe will predict the daily number of posts published on Medium https medium. Recall that we held out the values of the last prediction_size days in order to predict them and measure the quality of the model. To get started we ll import the library and mute unimportant diagnostic messages Let s convert our dataframe to the format required by Prophet The authors of the library generally advise to make predictions based on at least several months ideally more than a year of historical data. We will create a time series plot for the whole time range. The demand for a grocery product at a supermarket on a given day. First we import and initialize the Plotly library which allows creating beautiful interactive plots We also define a helper function which will plot our dataframes throughout the article Let s try and plot our dataset as is High frequency data can be rather difficult to analyze. A few words about this transformation. io prophet static prophet_paper_20170113. 4 Making a forecastProphet s API is very similar to the one you can find in sklearn. In its essence this library utilizes the additive regression model https en. And if we reduce the sampling rate of data it is often called downsampling. The high value of MAPE that we got above may be explained by the fact that the model failed to catch on to increasing peak to peak amplitude of weakly seasonality. com facebookincubator prophet on GitHub. Let s sort the dataframe by time and take a look at what we ve got Medium s public release date was August 15 2012. pdf scientific paper explaining the algorithm which lays the foundation of Prophet. For instance analysts may have insights about dates of past releases that prominently influenced some key product indicators. org wiki Mean_absolute_percentage_error as a measure of prediction accuracy. In this section we will apply the Box Cox transformation http onlinestatbook. We predict values with Prophet by passing in the dates for which we want to create a forecast. Second we will show the model performance only for the period that we predicted that is the last 30 days. Here we can pass the parameters of the model into the constructor. The Prophet library has its own built in tools for visualization that enable us to quickly evaluate the result. Usually it is modeled as normally distributed noise. y is a numeric value we want to predict. The first one is the transformed series and the second one is the found value of lambda that is optimal in terms of the maximum log likelihood We create a new Prophet model and repeat the fit predict cycle that we have already done above At this point we need to revert the Box Cox transformation with our inverse function and the known value of lambda Here we will reuse our tools for making the comparison dataframe and calculating the errors So we can definitely state an increase in the quality of the model. We will resample our time index down to 1 day bins 3. In this research Prophet has shown substantially lower forecasting error than the other models. Practice with Prophet 3. Let s see where it will lead us. 5 Forecast quality evaluation 3. For instance in the case of weekly seasonal data for each future Monday we would predict the value from the last Monday and for all future Tuesdays we would use the value from the last Tuesday and so on. Support course creatorsYou can make a monthly Patreon or one time Ko Fi donation sharper plots Initialize plotly converting timezones issue https github. Automated performance estimation of a large number of forecasts including flagging of potential problems for their subsequent inspection by the analyst. 0 https creativecommons. But as you can see from the data above there are at least several rows with much earlier publication dates. io prophet docs installation. boxcox from Scipy which applies the Box Cox transformation. io prophet docs quick_start. Luckily pandas has a built in functionality for this task. Now cut out the part of the data which we made our prediction for. The tomorrow closing price of a tradable financial asset. IntroductionAccording to the article https research. e y_ i text if lambda 0. Further in this article we will use Python. Most of them are quite simple and often are used as a baseline for other models naive is a simplistic forecasting approach where we predict all future values relying solely on the observation at the last available point of time. References Official Prophet repository https github. First we load our dataset download it from here https drive. end cases end equation We will need to implement the inverse of this function in order to be able to restore the original data scale. Along the way we get rid of possible duplicates and missing values in the data Next we need to convert published to the datetime format because by default pandas treats this field as string valued. Displaying data over such a long period of time can give clues about seasonality and conspicuous abnormal deviations. Define the function that averages absolute error values over the predicted part. com preprints 3190 by Sean J. SummaryWe have taken a look at Prophet an open source forecasting library that is specifically targeted at business time series. org wiki Mean_absolute_error in order to have a picture of errors in absolute numbers. The choice will depend on your personal preferences and project requirements. We will use the one parameter Box Cox transformation which is defined by the following expression begin equation boxcox lambda y_ i begin cases frac displaystyle y_ i lambda 1 displaystyle lambda text if lambda neq 0. This material is subject to the terms and conditions of the Creative Commons CC BY NC SA 4. In our case it will return two values. mean uses the averaged value of data as a forecast. The input to the method fit is a DataFrame with two columns ds datestamp must be of type date or datetime. The authors also compared their library with several other methods for time series forecasting. Below we will consider some important properties of these model components. org fpp a very good online book about time series forecasting. org wiki Autoregressive_conditional_heteroskedasticity regressive models https en. arima stands for Autoregressive Integrated Moving Average see Wikipedia https en. com facebook prophet you can also use sub daily time series and make sub daily forecasts as well as employ the new daily seasonality feature. In addition when evaluating a forecasting algorithm it may prove useful to calculate MAE Mean Absolute Error https en. It is still up to the data scientist to explore the forecast results tune model parameters and transform data when necessary. Now we re going to omit the first few years of observations up to 2015. The graph of weekly seasonality leads to the conclusion that usually there are less new posts on Saturdays and Sundays than on the other days of the week. Finally let s plot our previous performance with the latest results side by side. Taylor and Benjamin Letham. com in egor polusmak and Yury Kashnitsky https yorko. For this we will need the observations y_i and the corresponding predicted values hat y _i. It allows us to observe different components of the model separately trend yearly and weekly seasonality. Predicting the future with Facebook ProphetTime series forecasting finds wide application in data analytics. Then we train our model by invoking its fit method on our training dataset Using the helper method Prophet. 1 Installation in PythonFirst you need to install the library. org wiki Exponential_smoothing for more. org wiki Logistic_function g t frac C 1 e k t m where C is the carrying capacity that is the curve s maximum value. In this case the order of the series is important because of the filling. plot that plots all the points from the forecast This chart doesn t look very informative. We will also try it out in the problem of predicting the daily number of posts published on Medium. This is a monotonic data transformation that can be used to stabilize variance. We will name the corresponding new column posts In this practice we are interested in the number of posts a day. html to our original series. We will remove the last month from the dataset in order to use it later as a prediction target Now we need to create a new Prophet object. First we create a model then call the method fit and finally make a forecast. The feature sunday is not added because it would be a linear combination of the other days of the week and this fact would have an adverse effect on the model. Actually C and k are not necessarily constants and may vary over time. Holidays and EventsThe component h t represents predictable abnormal days of the year including those on irregular schedules e. Let s look into the object forecast that the library created for us We can see that this dataframe contains all the information we need except for the historical values. Official Prophet documentation https facebookincubator. This logistic equation allows modelling non linear growth with saturation that is when the growth rate of a value decreases with its growth. According to the authors Prophet should scale well in the following 3 areas Accessibility to a wide audience of analysts possibly without profound expertise in time series. Let s call the model s predict method with our future dataframe as an input In the resulting dataframe you can see many columns characterizing the prediction including trend and seasonality components as well as their confidence intervals. Box Cox Transformation5. 7 and on average our model is wrong by 70. We define MAPE mean big left p_ i right big MAPE is widely used as a measure of prediction accuracy because it expresses error as a percentage and thus can be used in model evaluations on different datasets. This is called a sub daily time series. Besides binning other possible techniques of noise reduction include Moving Average Smoothing https en. The sole ability to take into account abnormal days that are known to the analyst beforehand might make a difference in some cases. Applicability to a wide range of distinct forecasting problems. Hyndman George Athanasopoulos Forecasting principles and practice https www. org wiki No_free_lunch_in_search_and_optimization. com 2 transformations box cox. For example zooming in on a couple of consecutive years shows us time points corresponding to Christmas holidays which greatly influence human behaviors. TrendThe Prophet library implements two possible trend models for g t. One of the most useful functions that Plotly provides is the ability to quickly dive into different periods of timeline in order to better understand the data and find visual clues about possbile trends periodic and irregular effects. k is the growth rate which represents the steepness of the curve. 6 VisualizationLet s create our own visualization of the model built by Prophet. com machine learning world neural networks for algorithmic trading 1 2 correct time series forecasting backtesting 9776bfd9e589. It is easy to see that the inverse is defined as begin equation invboxcox lambda y_ i begin cases e left frac displaystyle ln lambda y_ i 1 displaystyle lambda right text if lambda neq 0. In time series analysis this process is referred to as resampling. Prophet is available for Python and R. We have also done some hands on practice in time series prediction. io prophet a library for time series forecasting released by Facebook and open sourced on February 23 2017. Let s try it out As you can see from the trend graph Prophet did a good job by fitting the accelerated growth of new posts at the end of 2016. Forecasting Website Traffic Using Facebook s Prophet Library http pbpython. plot_components might be much more useful in our case. ly python At first glance the prediction of the mean values by our model seems to be sensible. This library tries to address the following difficulties common to many business time series Seasonal effects caused by human behavior weekly monthly and yearly cycles dips and peaks on public holidays. Taylor Benjamin Letham Forecasting at scale https facebookincubator. Let y_ i be the actual historical value and hat y _ i be the forecast value given by our model. There are quite a few different methods to predict future trends for example ARIMA https en. The forecast itself is stored in the yhat column. We will leave the parameters of the model alone. It is best suited for problems without saturating growth. These are only some of the conceivable predictions of future trends that might be useful The number of servers that an online service will need next year. 4 Making a forecast 3. First there is a method called Prophet. They used Mean Absolute Percentage Error MAPE https en. It is represented in the form of the logistic growth model https en. Moreover Prophet has a number of intuitive and easily interpretable customizations that allow gradually improving the quality of the forecasting model. Refer to the documentation https facebookincubator. We need to join the forecast object with the actual values y from the original dataset df. The former corresonds to the time dimension while the latter uniquely identifies a post by its URL. html Prophet overview with an example of website traffic forecasting. The library can itself choose optimal points of trend changes by fitting the supplied historical data. Using previously defined components its equation will be MAE mean big left e_ i right big A few words about the algorithms that Prophet was compared with. If we also supply the historical dates as in our case then in addition to the prediction we will get an in sample fit for the history. Seasonality s t represents periodic changes. org wiki Autoregressive_integrated_moving_average ARCH https en. Yearly seasonality model in Prophet relies on Fourier series. Second these first years having very low number of posts per day are likely to increase noise in our predictions as the model would be forced to fit this abnormal historical data along with more relevant and indicative data from the recent years. The second function Prophet. But at this moment all our data is divided into irregular time intervals that are less than a day. Box Cox TransformationSo far we have used Prophet with the default settings and the original data. Prophet supports both automatic and manual tuning of their variability. You can also check out the latest version of this notebook in the course repository https github. But despite this we still have some room for improvement. Even with the ability to zoom in provided by Plotly it is hard to infer anything meaningful from this chart apart from the prominent upward and accelerating trend. We will just trim our time series to keep only those rows that fall onto the period from August 15 2012 to June 25 2017 As we are going to predict the number of published posts we will aggregate and count unique posts at each given point in time. org wiki Autoregressive_integrated_moving_average for details. We will try to fix this by applying a transform to our data. Weekly seasonal data is modeled with dummy variables. Then e_ i y_ i hat y _ i is the forecast error and p_ i frac displaystyle e_ i displaystyle y_ i is the relative forecast error. It also demonstrates weekly and yearly seasonality and a number of abnormal days in each year. 3 Exploratory visual analysis 3. org wiki Additive_model y t comprising the following components y t g t s t h t epsilon_ t where Trend g t models non periodic changes. com file d 1G3YjM6mR32iPnQ6O3f6rE9BVbhiTiLyU view usp sharing and place in the. But in this article we will use the defaults. First we will plot the data for a shorter period of time to make the data points easier to distinguish. All in all the Prophet library is worth being a part of your analytical toolbox. Now we can calculate MAPE and MAE and return the resulting dictionary of errors. Time series analysis in Python Part 2. To reduce the noise we will resample the post counts down to weekly bins. We save our downsampled dataframe in a separate variable because further in this practice we will work only with daily series Finally we plot the result This downsampled chart proves to be somewhat better for an analyst s perception. make_future_dataframe we create a dataframe which will contain all dates from the history and also extend into the future for those 30 days that we left out before. For this we will define a helper function that we will reuse later Let s apply this function to our last forecast We are also going to define a helper function that we will use to gauge the quality of our forecasting with MAPE and MAE error measures Let s use our function As a result the relative error of our forecast MAPE is about 22. Let s import the modules that we will need and initialize our environment 3. For another example we can make a prediction of some team s performance and then use it as a baseline first to set goals for the team and then to measure the actual team performance relative to the baseline. By the way the original article is called Forecasting at Scale but it is not about the scale in the usual sense that is addressing computational and infrastructure problems of a large number of working programs. The only definitive conclusion that we can draw here is that the model treated many of the data points as outliers. ai Open Machine Learning Course Authors Egor Polusmak https www. Also we can conclude from the graph above that many of the actual values lie outside the confidence interval. m is an offset parameter. org wiki Autoregressive_model neural networks https medium. Changes in trend due to new products and market events. The Prophet Forecasting Model3. First they won t contribute much into the forecast quality in 2017. In addition if you supply information about holidays and events to your model they will also be shown in this plot. end cases end equation The corresponding function in Python is implemented as follows First we prepare our dataset by setting its index Then we apply the function stats. com prophet forecasting at scale on Facebook Research Prophet was initially developed for the purpose of creating high quality business forecasts. The Prophet Forecasting ModelNow let s take a closer look at how Prophet works. com facebook prophet issues 831 Make a copy Now we calculate the values of e_i and p_i according to the formulas given in the article above. In this article we will look at Prophet https facebook. We will define a custom helper function show_forecast and call it for more on how it works please refer to the comments in the code and the documentation https plot. It will comprise the actual values forecast and confidence intervals. The first one is called Nonlinear Saturating Growth. 3 Exploratory visual analysisAs always it may be helpful and instructive to look at a graphical representation of your data. To do this we will need the formula of Mean Absolute Percentage Error. Luckily in our case we have more than a couple of years of data to fit the model. In Python you can install Prophet using PyPI pip install fbprophet In R you can find the corresponing CRAN package. In the yearly seasonality graph there is a prominent dip on Christmas Day. ets stands for Exponential Smoothing see Wikipedia https en. The authors claim that even with the default settings in many cases their library produces forecasts as accurate as those delivered by experienced analysts. ", "id": "kashnitsky/topic-9-part-2-time-series-with-facebook-prophet", "size": "24011", "language": "python", "html_url": "https://www.kaggle.com/code/kashnitsky/topic-9-part-2-time-series-with-facebook-prophet", "git_url": "https://www.kaggle.com/code/kashnitsky/topic-9-part-2-time-series-with-facebook-prophet", "script": "plotly.offline plotly_df fbprophet iplot graph_objs numpy calculate_forecast_errors show_forecast plotly matplotlib.pyplot stats pandas make_comparison_dataframe inverse_boxcox scipy init_notebook_mode create_go graph_objs as go Prophet statsmodels.api ", "entities": "(('They', 'Mean Absolute Percentage Error MAPE https'), 'use') (('graph', 'week'), 'lead') (('which', 'greatly human behaviors'), 'show') (('that', 'forecasting model'), 'have') (('we', 'date size'), 'see') (('we', 'relative baseline'), 'make') (('input', 'ds type date'), 'be') (('we', 'environment'), 'let') (('authors', 'historical data'), 'start') (('it', 'different datasets'), 'define') (('Now we', 'article'), 'issue') (('data monotonic that', 'variance'), 'be') (('data', 'time'), 'plot') (('we', 'history'), 'supply') (('It', 'year'), 'demonstrate') (('lambda', 'displaystyle lambda 1 text'), 'use') (('prediction', 'model'), 'python') (('that', 'model'), 'represent') (('you', 'library'), 'installation') (('that', 'day'), 'divide') (('MAPE', 'forecast'), 'define') (('monday tuesday wednesday thursday saturday which', 'week'), 'add') (('Weekly seasonal data', 'dummy variables'), 'model') (('t', 'periodic changes'), 'represent') (('seasonal t', 'weekly seasonality'), 'provide') (('we', 'model'), 'have') (('Next we', 'published'), 'folder') (('that', 'possbile trends periodic effects'), 'be') (('t', 'holidays'), 'contribute') (('Now we', 'errors'), 'calculate') (('It', 'actual values'), 'comprise') (('order', 'filling'), 'be') (('We', 'Medium'), 'try') (('authors', 'time series forecasting'), 'compare') (('We', 'time series prediction'), 'do') (('you', 'sklearn'), '4') (('how it', 'code'), 'define') (('we', 'defaults'), 'use') (('analyst', 'events'), 'utilize') (('Prophet', 'time series'), 'scale') (('Prophet', 'scale https peerj'), 'refer') (('_ displaystyle i 1 right text lambda', 'ln lambda'), 'be') (('online service', 'that'), 'be') (('material', 'NC SA'), 'be') (('we', 'time'), 'trim') (('Luckily pandas', 'task'), 'have') (('We', 'day down 1 bins'), 'resample') (('VisualizationLet 6 s', 'Prophet'), 'create') (('we', 'posts'), 'name') (('we', 'Python'), 'use') (('Usually it', 'normally distributed noise'), 'model') (('plot_components', 'much more case'), 'be') (('trend second model', 'growth'), 'be') (('1 time 2 correct series', '9776bfd9e589'), 'forecasting') (('two measures', 'more legible plot'), 'seem') (('growth which', 'curve'), 'be') (('Wikipedia https', 'Exponential Smoothing'), 'see') (('Finally s', 'side'), 'let') (('Below we', 'model components'), 'consider') (('Predicting', 'data analytics'), 'find') (('seasonality Yearly model', 'Fourier series'), 'rely') (('Then we', 'function stats'), 'end') (('latter', 'URL'), 'corresond') (('you', 'CRAN corresponing package'), 'install') (('library', 'supplied historical data'), 'choose') (('that', 'product prominently key indicators'), 'have') (('they', 'also plot'), 'show') (('Prophet', 'other models'), 'show') (('forecast', 'much real values'), 'note') (('growth when rate', 'growth'), 'allow') (('We', 'dataset original df'), 'need') (('many columns', 'trend components'), 'let') (('we', 'improvement'), 'have') (('So we', 'model'), 'be') (('forecasting', 'quality business high forecasts'), 'develop') (('constant predictions', 'seasonality'), 'be') (('One', 'application'), 'represent') (('Initialize', 'timezones issue https plotly github'), 'make') (('graph Prophet', '2016'), 'let') (('It', 'growth'), 'be') (('which', 'Prophet'), 'paper') (('All', 'analytical toolbox'), 'be') (('Displaying', 'seasonality'), 'give') (('choice', 'personal preferences'), 'depend') (('far we', 'default settings'), 'use') (('weekly monthly cycles', 'public holidays'), 'try') (('First we', 'https drive'), 'load') (('It', 'data'), 'be') (('Prophet library', 'box'), 'make') (('Wikipedia https', 'Integrated Moving Autoregressive Average'), 'stand') (('Then we', 'helper method Prophet'), 'train') (('2 DatasetWe', 'Medium https medium'), 'predict') (('we', 'historical values'), 'let') (('which', 'Box Cox transformation'), 'boxcox') (('that', 'that'), 'show') (('they', 'somehow dataset'), 'turn') (('Here we', 'constructor'), 'pass') (('It', 'growth model logistic https'), 'represent') (('Now we', 'Prophet new object'), 'remove') (('default at least when settings', 'unstable variance'), 'be') (('fact', 'model'), 'add') (('First they', '2017'), 'win') (('here model', 'outliers'), 'be') (('you', 'publication at least several much earlier dates'), 'be') (('mean', 'forecast'), 'use') (('that', 'working programs'), 'be') (('Now we', '2015'), 'go') (('Forecasting Website Traffic Using Prophet Library', 'pbpython'), 'http') (('we', 'weekly bins'), 'resample') (('You', 'course repository https github'), 'check') (('we', 'forecast'), 'predict') (('We', 'model'), 'leave') (('we', 'that'), 'evaluate') (('component h t', 'schedules irregular e.'), 'Holidays') (('string', 'field'), 'along') (('We', 'data original scale'), 'end') (('ARIMA https', 'example'), 'be') (('library', 'additive regression model https'), 'utilize') (('frequency High data', 'dataset'), 'import') (('we', 'last Tuesday'), 'predict') (('Prophet', 'that'), 'use') (('t', 'forecast'), 'plot') (('Actually C', 'necessarily time'), 'be') (('it', 'data'), 'call') (('we', 'model'), 'recall') (('forecasting naive simplistic where we', 'time'), 'be') (('downsampled chart', 'somewhat perception'), 'save') (('that', 'business time specifically series'), 'take') (('sub', 'seasonality daily as well new daily feature'), 'prophet') (('forecast', 'yhat column'), 'store') (('analysts', 'time'), 'allow') (('we', 'prediction'), 'cut') (('abnormal days that', 'cases'), 'make') (('hat y actual historical i', 'forecast model'), 'let') (('we', 'that'), 'create') (('library', 'experienced analysts'), 'claim') (('us', 'model'), 'allow') (('i', 'y _'), 'i') (('we', 'release public date'), 'let') (('dataset', 'non prominent growing trend'), 'see') (('We', 'data'), 'try') (('it', 'MAE Mean Absolute Error https'), 'prove') (('First we', 'method then finally forecast'), 'create') (('closer how forcasting quality', 'article'), 'let') (('Free use', 'non commercial purpose'), 'permit') (('model', 'weakly seasonality'), 'explain') (('TrendThe Prophet library', 'g t.'), 'implement') (('y_i corresponding', 'observations'), 'need') (('we', 'Prophet https facebook'), 'look') (('io time series forecasting', 'February'), 'prophet') (('which', 'certain skill'), 'be') (('process', 'time series analysis'), 'refer') (('we', 'Box Cox transformation http onlinestatbook'), 'apply') (('how Prophet', 'closer look'), 'let') (('We', 'time whole range'), 'create') (('always it', 'data'), 'be') (('many', 'confidence interval'), 'conclude') (('that', 'quickly result'), 'have') (('prediction which', 'timeline'), 'measure') (('we', 'Mean Absolute Percentage Error'), 'need') (('model', 'recent years'), 'be') (('Prophet', 'variability'), 'support') (('Trend g t where models', 'y t g t t h t epsilon _ t'), 't') (('that', 'predicted part'), 'define') (('it', 'apart prominent upward trend'), 'be') ", "extra": "['test']", "label": "Perfect_files", "potential_description_queries": ["absolute", "account", "accuracy", "aggregate", "algorithm", "application", "apply", "approach", "article", "average", "baseline", "behavior", "best", "book", "box", "calculate", "call", "case", "chart", "check", "choice", "choose", "closing", "code", "column", "comparison", "conclusion", "confidence", "consider", "contain", "convert", "copy", "correct", "count", "course", "create", "curve", "custom", "cut", "cycle", "data", "dataframe", "dataset", "date", "datetime", "day", "default", "define", "demand", "depend", "description", "dictionary", "difference", "dimension", "distributed", "download", "draw", "dummy", "effect", "enable", "end", "environment", "epsilon", "equation", "error", "essence", "estimation", "evaluate", "evaluation", "even", "explained", "explore", "expression", "extend", "fact", "fbprophet", "feature", "field", "file", "find", "fit", "fitting", "fix", "folder", "following", "forecast", "forecasting", "form", "format", "formula", "found", "frac", "frequency", "function", "future", "graph", "growth", "helper", "high", "history", "http", "human", "implement", "import", "include", "including", "increase", "index", "influence", "initialize", "initially", "input", "instance", "interactive", "interval", "io", "issue", "itself", "job", "join", "key", "latter", "lead", "learning", "least", "leave", "left", "let", "library", "likelihood", "linear", "list", "load", "log", "look", "lower", "manual", "market", "maximum", "mean", "measure", "method", "might", "missing", "model", "modelling", "moment", "month", "most", "naive", "name", "need", "neural", "new", "next", "noise", "non", "not", "notebook", "number", "numeric", "object", "observation", "offset", "open", "order", "out", "overview", "parameter", "part", "past", "pdf", "peak", "per", "percentage", "performance", "period", "picture", "place", "plot", "plotly", "point", "post", "potential", "practice", "predict", "prediction", "prepare", "price", "print", "problem", "product", "project", "provide", "public", "publication", "purpose", "python", "range", "re", "reduce", "regression", "relative", "remove", "repository", "representation", "resample", "research", "restore", "result", "return", "right", "room", "sample", "sampling", "save", "scale", "science", "scientific", "seasonal", "seasonality", "second", "section", "sense", "separate", "service", "set", "several", "side", "similar", "slice", "sort", "source", "split", "state", "string", "sub", "subject", "sum", "target", "team", "term", "text", "those", "time", "train", "training", "transform", "transformation", "trend", "trim", "try", "tune", "tuning", "type", "unique", "up", "user", "value", "variable", "variance", "version", "view", "visualization", "website", "week", "while", "work", "world", "year", "zoom"], "potential_description_queries_len": 271, "potential_script_queries": ["api", "iplot", "numpy", "scipy"], "potential_script_queries_len": 4, "potential_entities_queries": ["distributed", "high", "human", "key", "method", "naive", "plotly", "regression", "right", "second", "text", "transformation"], "potential_entities_queries_len": 12, "potential_extra_queries": ["test"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 274}