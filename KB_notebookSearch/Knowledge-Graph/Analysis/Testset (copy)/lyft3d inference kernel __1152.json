{"name": "lyft3d inference kernel ", "full_name": " h2 Updates h1 Install the Lyft SDK h1 Lyft SDK requires creating a link to input folders h1 Creating a new test class h3 If you try to use original LyftDataset Class you will get missing table error h1 Unzip the Lyft3D BEV test data h3 I recommend creating it once and reusing it Saves computation h1 Find the mean height of all categories h1 Unet Model h1 Loading Guido s trained Unet model h1 Test Set Predictions h1 Transform predicted boxes back into world space h1 Creating Submission File ", "stargazers_count": 0, "forks_count": 0, "description": "75m for all categories Unet ModelWe train a U net fully convolutional neural network we create a network that is less deep and with only half the amount of filters compared to the original U net paper implementation. Reverse index samples with sample_data and annotations. N 1 H W N 2 H W Get probabilities for non background if ii 0 visualize_predictions X prediction apply_softmax False Visualize the boxes in the first sample Visualize their probabilities Note X and Y are flipped This could use some refactoring. del model Note We may be able to train for longer and expect better results the reason this number is low is to keep the runtime short. 3 N 4 N 4 3 box_height 1. uint8 Arbitrary threshold in our system to create a binary image to fit boxes around. 75 Note Each of these boxes describes the ground corners of a 3D box. rotation 2 pred_box3ds i. Transpose the input volume CXY to XYC order which is what matplotlib requires. Let s take the center pixel value as the confidence value Let s remove candidates with very low probability We perform an opening morphological operation to filter tiny detections Note that this may be problematic for classes that are inherently small e. com meaninglesslives lyft3d test dataset. com gzuidhof reference model. We already multiprocess ourselves this would mean every subprocess produces even more threads which would lead to a lot of context switching slowing things down a lot. N 4 2 N 4 2 N 4 2 2 N 4 Add Z dimension 2 N 4 3 N 4 We don t know at where the boxes are in the scene on the z axis up down let s assume all of them are at the same height as the ego vehicle. Store the mapping from token to table index for each table. Bring box to car space We only care about the bottom corners Drop z coord Some hyperparameters we ll need to define for the system We scale down each box so they are more separated when projected into our coarse voxel space. Width and height is arbitrary we don t know what way the vehicles are pointing from our prediction segmentation It doesn t matter for evaluation so no need to worry about that here. Updates Corrected yaw calculation Used category height information Install the Lyft SDK Lyft SDK requires creating a link to input folders Creating a new test class If you try to use original LyftDataset Class you will get missing table error Unzip the Lyft3D BEV test data I recommend creating it once and reusing it. 8 the actual size we need to adjust for that Determine the rotation of the box XYZW WXYZ order of elements yaw np. Find the mean height of all categoriesWe can use the mean height instead of blindly using 1. Decorate adds short cut sample_data with sensor information. arctan2 pred_box3ds i. In this kernel i show how to perform inference on test set using the trained model. 3 target_as_rgb This implementation was copied from https github. We re allocating 20GB of memory otherwise. Initialize LyftDatasetExplorer class Make reverse indexes for common lookups. Loading Guido s trained Unet model Test Set Predictions Transform predicted boxes back into world space Creating Submission File Disable multiprocesing for numpy opencv. You can find the BEV of the test set here https www. To get the center of the box in 3D we ll have to add half the height to it. Note We scaled our targets to be 0. predictions np. Explicitly assign tables to help the IDE determine valid class members. We quantize to uint8 here to conserve memory. We do this to keep training and inference time low. Please check out Guido s excellent kernel here https www. Optional for multi GPU training and inference Only select the first n images We weigh the loss for the 0 class lower to account for some of the big class imbalance. com jvanvugt pytorch unet it is MIT licensed. zeros len test_loader 1 len classes 336 336 dtype np. ", "id": "meaninglesslives/lyft3d-inference-kernel", "size": "1152", "language": "python", "html_url": "https://www.kaggle.com/code/meaninglesslives/lyft3d-inference-kernel", "git_url": "https://www.kaggle.com/code/meaninglesslives/lyft3d-inference-kernel", "script": "Box __init__ lyft_dataset_sdk.lyftdataset multiprocessing UNetConvBlock(nn.Module) Rotation LyftDataset scale_boxes recall_precision draw_boxes transform_matrix lyft_dataset_sdk.eval.detection.mAP_evaluation tqdm_notebook open_preds center_crop Path lyft_dataset_sdk.utils.map_mask move_boxes_to_car_space forward torch.nn numpy BEVImageDataset(torch.utils.data.Dataset) normalize_voxel_intensities __getitem__ pathlib PIL scipy.spatial.transform LyftTestDataset(LyftDataset) LidarPointCloud MapMask create_voxel_pointcloud Quaternion visualize_lidar_of_sample UNet(nn.Module) functools Image matplotlib.pyplot visualize_predictions LyftDatasetExplorer pandas UNetUpBlock(nn.Module) Box3D partial __len__ create_transformation_matrix_to_voxel_space tqdm calc_detection_box car_to_voxel_coords view_points lyft_dataset_sdk.utils.geometry_utils torch.nn.functional get_unet_model Pool Rotation as R lyft_dataset_sdk.utils.data_classes __make_reverse_index__ transform_points datetime ", "entities": "(('Loading Unet model Test Set Predictions trained Transform', 'numpy opencv'), 'predict') (('all', 'ego vehicle'), 'n') (('3 implementation', 'https github'), 'target_as_rgb') (('rotation', 'elements yaw np'), 'size') (('they', 'voxel more when coarse space'), 'bring') (('that', 'paper original U net implementation'), 'train') (('that', 'classes'), 'let') (('we', 'it'), 'have') (('Each', '3D box'), 'note') (('Decorate', 'sensor information'), 'add') (('number', 'runtime'), 'model') (('It', 'so that'), 'be') (('Note This', 'refactoring'), 'n') (('We', 'class big imbalance'), 'select') (('assign Explicitly IDE', 'class valid members'), 'table') (('We', 'here memory'), 'quantize') (('You', 'test'), 'find') (('We', 'this'), 'do') (('matplotlib', 'what'), 'transpose') (('i', 'trained model'), 'show') (('zeros len test_loader 1 len', 'dtype 336 336 np'), 'class') (('Initialize LyftDatasetExplorer class', 'common lookups'), 'make') (('We', 'memory'), 'allocate') (('which', 'lot'), 'multiprocess') (('I', 'once it'), 'correct') (('mean height', 'instead blindly 1'), 'find') ", "extra": "['annotation', 'test']", "label": "Perfect_files", "potential_description_queries": ["account", "adjust", "assign", "background", "binary", "bottom", "box", "calculation", "car", "care", "category", "center", "check", "confidence", "context", "convolutional", "could", "create", "cut", "data", "define", "del", "dimension", "error", "evaluation", "even", "every", "filter", "find", "fit", "ground", "half", "height", "help", "image", "implementation", "index", "inference", "input", "kernel", "lead", "len", "let", "link", "lot", "lower", "mapping", "matplotlib", "mean", "memory", "missing", "model", "need", "network", "neural", "new", "no", "non", "number", "numpy", "opening", "operation", "order", "out", "perform", "pixel", "prediction", "probability", "pytorch", "re", "reason", "recommend", "reference", "remove", "reverse", "runtime", "sample", "scale", "scaled", "scene", "segmentation", "select", "sensor", "set", "short", "size", "space", "system", "table", "test", "threshold", "time", "token", "train", "training", "try", "up", "valid", "value", "volume", "voxel", "world"], "potential_description_queries_len": 102, "potential_script_queries": ["datetime", "detection", "eval", "forward", "multiprocessing", "nn", "partial", "pathlib", "spatial", "tqdm"], "potential_script_queries_len": 10, "potential_entities_queries": ["model"], "potential_entities_queries_len": 1, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 110}