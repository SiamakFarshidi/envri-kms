{"name": "final kernel ", "full_name": " h3 Import Libraries h4 Check the image extentions h3 General Information h3 Data Extraction and Visualization h3 Genaral Overviwe h3 Visualising the breast tissue h3 Binary cancer visualisation h3 Data Processing h3 Resize images to do better in CNN h4 Simple CNN h4 To improve model we will add arguments to images h4 confusion matrix h3 Transfer Learning h4 Vgg16 h3 Vgg16 Confuse matrix h3 Vgg19 ", "stargazers_count": 0, "forks_count": 0, "description": "We change pixels range from 0 255 to 0 1. to plot confusion matrix For Image argumentaton rescaling X_valid rescaling X_Test downloading model for transfer learning preprocessing the input so that it could work with the downloaded model calculating bottleneck features this inshure that we hold the weights of bottom layers downloading model for transfer learning preprocessing the input so that it could work with the downloaded model calculating bottleneck features this inshure that we hold the weights of bottom layers Bar chart to compare different models Number of positive cases Senstivity of models Number of postive cases number of negative cases dataframe to store the results. Depending on the result the Image Arg mode is the best. Now we will split our data into training set and testing set. confusion matrix Transfer LearningWe will now add transfer learning from various models Vgg16 Vgg16 Confuse matrix Vgg19 Now we will plot the confusion matrix Comparision is made between three algorithms with repect to false positives and false negatives. com wp content uploads 2018 01 AI_Mammographie. We have a large dataset almost 280k image and we will work with neural networks for better debugging we will use only a part of data. Resize images to do better in CNNWe would encode our output data which is present as Class1 and Class0 to 1 and 0 Class1 1 Class0 0. read_csv To check filepath to check the name of the directory inside which we have our files a particular folder To find all the pathnames matching a specified pattern will store end 3 letters of all the file names extentions any valid image will have extention in alphabets this line checks for such alphabet extentions we extract only png files adds support for opening manipulating and saving many different image file formats adds progress bar for the loops going through all the images will take up lot of memory so therefore we will check until we get three different dimentions. linear algebra data processing CSV file I O e. We need to now preprocess our image file. Data Extraction and Visualization we need to extract the columns names in which each files belong from its file names. jpg Import Libraries Local Directory Check the image extentionsLoad png imageprint first filepath General Information How many patches do we have in total We have total of 277524 image files How many patients do we have Almost 280 patients we have. We will now add image argumentation to our data so that it may be set for wider range of domainWe will also rescale our image pixels from range of 0 255. Data Processing We will first shuffle are images to remove any patterns if present and then load them. we will check whether the dimentions of all the images are same or not We can see that the dimentions of images are not equal So we would make it all equal to work bettter with our network. function to view an image reads an image displays an image to plot multiple image to open and write csv files Allows the use of display for DataFrames to display image along with their labels we have to show only one image of class0 therefore this variable is to check that we have to show only one image of class1 therefore this variable to check that for subplot position to shuffle the data to hot encode the output labels to hot encode the data For performing undersampling Constructor of the class to perform undersampling resamples the dataset resamples the dataset For Plotting the distribution of classes hot encoding them create iterators for effective looping Plotting the confusion matrix for checking the accuracy of the model Import layers for the model Our model will be Sequential Flattens the matrix into a vector Compiling the model Checkpoint to save the best weights of the model. That s mean I dont have any null value it is goog Genaral OverviweNow we can read the data from output. We have to extract all coordinates of image patches that are stored in the image names Binary cancer visualisationBefore we will take a look at the whole tissue let s keep it a bit simpler by looking at the target structure in the x y space for a handful of patients We can see that we have an unbalanced class and which is a common problem when we have medical data. We will now create our benchmark model. Compare through by showing only one image frome class0 and class1 IDC and IDC Visualising the breast tissue From the above images we can conclude that brighter region is more than the darken region in Class0 and the opposite is true. In the next we will OneHot encode our data to better work with neural networks. We can do two things either split test set further into valid set or split train se into valid set. Accurately identifying and categorizing breast cancer subtypes is an important clinical task and automated methods can be used to save time and reduce error. Load the saved weights from file. Simple CNN Now we will plot the confusion matrix To improve model we will add arguments to images. As considering dealing with cancer the algorithm must give less false negative at its a matter of death and life. Result We can see that tranfer learning and image argumentation both are doing a great job they both have senstivity and specificity o about 0. We also need a validation set inorder to check overfitting. Now we have our three sets of train valid and test. used for computer vision tasks such as reading image from file changing color channels etc for plotting various graph images etc. Predicting IDC in Breast Cancer Histology Images Breast cancer is the most common form of cancer in women and invasive ductal carcinoma IDC is the most common form of breast cancer. ", "id": "yusueframadan/final-kernel", "size": "3515", "language": "python", "html_url": "https://www.kaggle.com/code/yusueframadan/final-kernel", "git_url": "https://www.kaggle.com/code/yusueframadan/final-kernel", "script": "Flatten sklearn.utils sklearn.metrics glob shuffle #to shuffle the data keras.preprocessing.image get_patient_dataframe keras.layers keras.callbacks GlobalAveragePooling2D #Import layers for the model class_output GlobalAveragePooling2D manipulating cv2 #used for computer vision tasks such Dropout Sequential keras.applications.vgg19 ModelCheckpoint  #Checkpoint to save the best weights of the model. RandomUnderSampler #For performing undersampling shuffle listdir Conv2D and saving many different image file formats numpy preprocess_input #preprocessing the input so that it could work with the downloaded model plot_confusion_matrix plot_images get_cancer_dataframe Sequential #Our model will be Sequential PIL view_images ModelCheckpoint sklearn.model_selection confusion_matrix matplotlib.pyplot Dense os keras.utils pandas imblearn.under_sampling keras.applications.vgg16 Image #adds support for opening tqdm VGG19 #downloading model for transfer learning to_categorical #to hot encode the data 0 images confusion_matrix #to plot confusion matrix preprocess_input VGG16 #downloading model for transfer learning MaxPooling2D ImageDataGenerator  #For Image argumentaton glob# To find all the pathnames matching a specified pattern keras.models tqdm #adds progress bar for the loops train_test_split 1 images to_categorical #to hot encode the output labels ", "entities": "(('we', 'Almost 280 patients'), 'check') (('most common form', 'ductal carcinoma breast invasive most common cancer'), 'be') (('we', 'data'), 'have') (('We', 'train split valid set'), 'do') (('we', 'three different dimentions'), 'store') (('which', '1'), 'encode') (('it', '0'), 'add') (('Image Arg mode', 'result'), 'be') (('Now we', 'training'), 'split') (('opposite', 'Class0'), 'compare') (('it', 'bettter network'), 'check') (('common when we', 'medical data'), 'have') (('Now we', 'train'), 'have') (('we', 'better neural networks'), 'encode') (('We', '255 0'), 'change') (('important clinical task', 'error'), 'be') (('We', 'image now file'), 'need') (('confusion matrix Comparision', 'false positives'), 'add') (('algorithm', 'death'), 'give') (('they', 'about 0'), 'result') (('files', 'file names'), 'need') (('Number', 'results'), 'feature') (('We', 'overfitting'), 'need') (('first shuffle', 'then them'), 'Processing') (('goog Genaral we', 'output'), 's') (('model', 'model'), 'read') (('we', 'images'), 'plot') ", "extra": "['patient', 'test']", "label": "Perfect_files", "potential_description_queries": ["accuracy", "algorithm", "argumentaton", "benchmark", "best", "bit", "bottom", "breast", "cancer", "chart", "check", "checking", "color", "compare", "computer", "confusion", "content", "could", "create", "csv", "data", "dataframe", "dataset", "directory", "display", "distribution", "encode", "encoding", "end", "equal", "extract", "file", "find", "folder", "form", "function", "graph", "hot", "image", "improve", "input", "job", "learning", "let", "line", "linear", "load", "look", "looking", "lot", "manipulating", "matching", "matrix", "mean", "medical", "memory", "mode", "model", "most", "multiple", "name", "need", "negative", "neural", "next", "not", "null", "number", "open", "opening", "output", "part", "pattern", "perform", "performing", "plot", "plotting", "png", "position", "positive", "preprocessing", "present", "problem", "processing", "range", "read", "reading", "reduce", "region", "remove", "rescale", "result", "save", "saving", "set", "shuffle", "space", "split", "store", "structure", "subplot", "support", "target", "task", "test", "testing", "through", "time", "tissue", "total", "train", "training", "transfer", "undersampling", "until", "up", "valid", "validation", "value", "variable", "vector", "view", "vision", "work", "write"], "potential_description_queries_len": 125, "potential_script_queries": ["best", "confusion", "cv2", "encode", "find", "glob", "image", "learning", "listdir", "matching", "model", "numpy", "output", "performing", "preprocessing", "saving", "support", "tqdm", "undersampling", "work"], "potential_script_queries_len": 20, "potential_entities_queries": ["matrix", "neural", "valid"], "potential_entities_queries_len": 3, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 129}