{"name": "histopathological cancer detection implementation ", "full_name": " ", "stargazers_count": 0, "forks_count": 0, "description": "com kaggle docker python For example here s several helpful packages to load in linear algebra data processing CSV file I O e. read_csv Input data files are available in the. arange len X_train This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python docker image https github. Let me read the data into a dataframe random_samples np. For example running this by clicking run or pressing Shift Enter will list the files in the input directory Any results you write to the current directory are saved as output. Image location is available adjust size here draw a number of images for each location figure_cols is also the sample size train_ draw_category_images label 4 train_data IMAGE_LOCATION Building a simple Convolutional Neural Network classifier. ", "id": "rpa216/histopathological-cancer-detection-implementation", "size": "103", "language": "python", "html_url": "https://www.kaggle.com/code/rpa216/histopathological-cancer-detection-implementation", "git_url": "https://www.kaggle.com/code/rpa216/histopathological-cancer-detection-implementation", "script": "Flatten sklearn.utils keras.layers tensorflow.keras.layers get_me_data tensorflow.keras.losses division Dropout Sequential MaxPool2D shuffle Conv2D numpy print_function sklearn.model_selection matplotlib.pyplot Activation Dense tensorflow pandas tensorflow.keras BatchNormalization __future__ draw_category_images MaxPooling2D backend binary_crossentropy backend as K keras absolute_import keras.models train_test_split ", "entities": "(('read_csv Input data files', 'the'), 'be') (('draw_category_images', 'Convolutional Neural Network simple classifier'), 'be') (('you', 'output'), 'list') (('me', 'random_samples dataframe np'), 'let') (('It', 'python docker image https kaggle github'), 'x_train') ", "extra": ""}