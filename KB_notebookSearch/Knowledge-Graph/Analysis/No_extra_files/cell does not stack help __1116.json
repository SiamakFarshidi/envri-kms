{"name": "cell does not stack help ", "full_name": " h1 Am I missing something in how image 7930e80e bbc8 11e8 b2bc ac1f6b6435d0 is presented in comparison the image 0b252bcc bbc8 11e8 b2bc ac1f6b6435d0 Revised to 5e22a522 bb99 11e8 b2b9 ac1f6b6435d0 which is also a 3072 image ", "stargazers_count": 0, "forks_count": 0, "description": "The 2nd image is best as is or normalized to 1 but is not quite right normalized to 255 or rescaled to RGB at 255 3 255. Am I missing something in how image 7930e80e bbc8 11e8 b2bc ac1f6b6435d0 is presented in comparison the image 0b252bcc bbc8 11e8 b2bc ac1f6b6435d0 Revised to 5e22a522 bb99 11e8 b2b9 ac1f6b6435d0 which is also a 3072 image. As a suggestion from Satwik https www. One example is below. com p4rallax I looked at the pixel values and have added some normalization and rescaling algorythms for both images. The first image improves with the normalization to 255 rescaling to RGB at 255 3 255 but normalization to 1 or as is are still difficult to decifer. I have been having problems with only a few images that end up crashing my notebooks when I compile with the entire dataset. Any thoughts on why this 3072 size image does not stack correctly and the subsequent one stacks as expected. mt is the mitchondria er is the endoplasmic reticulum nu is the nuclei high is the protein Protein model image Protein model image. I debugged it back to how I am stacking the model in the code but I do not know why it is having this issue. I can continue to by pass these images but this one is the smaller classes. ", "id": "akimball002/cell-does-not-stack-help", "size": "1116", "language": "python", "html_url": "https://www.kaggle.com/code/akimball002/cell-does-not-stack-help", "git_url": "https://www.kaggle.com/code/akimball002/cell-does-not-stack-help", "script": "print_cell normalization numpy matplotlib.pyplot pandas build_image_names get_images ", "entities": "(('when I', 'entire dataset'), 'have') (('com p4rallax I', 'images'), 'look') (('2nd image', '255 3 255'), 'be') (('one', 'images'), 'continue') (('normalization', '1'), 'improve') (('b2b9 11e8 which', 'bb99'), 'miss') (('why it', 'issue'), 'debug') ", "extra": ""}