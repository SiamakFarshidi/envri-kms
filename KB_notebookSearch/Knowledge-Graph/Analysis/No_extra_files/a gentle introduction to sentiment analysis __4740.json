{"name": "a gentle introduction to sentiment analysis ", "full_name": " h1 Introduction h1 The TextBlob library h1 Let s try it on our data h2 Extract sentiments for all these reviews h2 Add this list of sentiments to the original dataframe h1 Correlation with ratings h2 Visualizing the correlation h2 Improving the sentiment analysis ", "stargazers_count": 0, "forks_count": 0, "description": "Polarity ranges from 1 to 1. We note that the sentiments calculated are only weakly correlated with the ratings suggesting that there is a lot of room for improvement. It is less effective when we have several neutral sentences along with ones with high polarity. This is a positive review so the polarity is close to 1. Identifying the sentiment of a review can help us make an attempt at predicting the rating that the user would give to the given product The TextBlob libraryWe will do this analysis using the open source library called TextBlob https textblob. This object is created by passing a simple string. html which is a really easy to use Natural Language Processing library written on top of a powerful but relatively harder to use framework called NLTK https www. Subjectivity ranges from 0 to 1 with 0 for objective factual sentences and 1 for highly opinionated ones. Note that the subjectivity is still high as it is still an opinion and not a factOne can extract the individual components as follows Finally let s look at a neutral sentence with no sentimentThe sentence above is a neutral factual sentence with no sentiment. It can take a while to calculate the sentiment for 160K samples Add this list of sentiments to the original dataframeLet s randomly sample 10 rows from the data and see what we gotNotice that the sentiment values even for reviews with high ratings tend to be low. This happens because the reviews are long. It comes pre loaded in Kaggle kernels. It parses the text to let us extract the sentiment or other useful metrics from the sentence. Since we are dealing with reviews of drugs here we would certainly be interested in understanding the sentiment associated with these reviews and try to see which drugs have positive reviews and which ones have negative reviews. Remove neutral sentences Do sentiment analysis of individual sentences in a review and remove neutral ones. Extract sentiments for all these reviews We ll use tqdm to track our progress. Analyzing these would require more advanceed NLP techniques and is an active research field. The first step is to create a TextBlob object. Note that there are 2 sentences here in the review. We observe that there is indeed a positive but not very strong correlation between the sentiment of the reviews and the ratings given 0. This will give a more accurate sentiment scoreWe would still run into a few road blocks. Then re run the sentiment analysis on the polar sentences. Hence it has 0 polarity and 0 subjectivity. The neutral sentences dillute the overall polarity of the text. IntroductionSentiment Analysis is the identification of the sentiment associated with a sentence phrase or an entire document. Idioms pop culture references. This object is the representation that textblob uses for the given blob of text under the hood. Consider a simple dummy review which could be a highly positive one. Let s look at a negative exampleThe sentiment is 1 now indicating that is a negative review. Using the sentiment method spits out 2 numbers Polarity and Subjectivity. I hope that you find this kernel useful and informative Play around with textblob to get an idea of its capabilities and limitations. A few basic steps that can be taken to improve our sentiment calculation are 1. Our hypothesis would be that reviews with postive reviews would have higher polarity values and vice versa. For our application polarity is more useful than subjectivity. Pre processing Clean up the text. Correlation with ratingsLet s see if the newly calculated sentiments have any correlation with the ratings. Although the correlation is weak it is still a useful feature for us to make predictions from as it isn t close to 0. Visualizing the correlationWe notice a gentle upward slope for median sentiment for each of the rating buckets Improving the sentiment analysisThis was a very simple intro to sentiment analysis. TextBlob let s us do our sentiment analysis really fast without having to write a lot of code. Let s extract the review column for the sentiment analysis. All the best The basic imports create the TextBlob object for this example Polarity Subjectivity Inspect first 5 rows First 10. Do stemming lemmatization. We will ignore subjectivity for the time being as we are looking at reviews and they re all fundamentally subjective Let s try it on our dataThe data has over 160K rows. Let s start by importing TextBlob. Sentiment analysis works best for short sentences with an obvious sentiment. Once the TextBlob object is created extracting the sentiment is a single command. Some of the harder to solve problems where naive sentiment analysis struggles are 1. ", "id": "adarshchavakula/a-gentle-introduction-to-sentiment-analysis", "size": "4740", "language": "python", "html_url": "https://www.kaggle.com/code/adarshchavakula/a-gentle-introduction-to-sentiment-analysis", "git_url": "https://www.kaggle.com/code/adarshchavakula/a-gentle-introduction-to-sentiment-analysis", "script": "tqdm seaborn numpy matplotlib.pyplot pandas TextBlob textblob ", "entities": "(('Analyzing', 'advanceed NLP more techniques'), 'require') (('now that', 'exampleThe negative sentiment'), 'let') (('analysisThis', 'very simple analysis'), 'be') (('kernel', 'capabilities'), 'hope') (('still useful us', 'isn t close 0'), 'be') (('TextBlob object', 'sentiment'), 'be') (('neutral sentences', 'text'), 'dillute') (('all fundamentally subjective s', 'K over 160 rows'), 'ignore') (('us', 'code'), 'let') (('ones', 'negative reviews'), 'be') (('s', 'sentiment analysis'), 'let') (('which', 'simple dummy review'), 'consider') (('We', 'progress'), 'use') (('Finally s', 'above neutral factual sentiment'), 'be') (('Hence it', '0 polarity'), 'have') (('We', '0'), 'observe') (('sentiments', 'improvement'), 'note') (('object', 'simple string'), 'create') (('sentiment analysis where naive struggles', 'problems'), 'some') (('positive polarity', '1'), 'be') (('first step', 'TextBlob object'), 'be') (('best basic imports', 'example'), 'create') (('reviews', 'polarity higher values'), 'be') (('us', 'other useful sentence'), 'parse') (('Using', '2 numbers'), 'spit') (('which', 'relatively framework'), 'html') (('s newly calculated sentiments', 'ratings'), 'see') (('IntroductionSentiment Analysis', 'sentence phrase'), 'be') (('textblob', 'hood'), 'be') (('TextBlob libraryWe', 'source open library'), 'help') (('Sentiment analysis', 'obvious sentiment'), 'work') (('neutral sentences', 'neutral ones'), 'remove') (('This', 'road still few blocks'), 'give') (('less when we', 'high polarity'), 'be') (('application polarity', 'more subjectivity'), 'be') (('Subjectivity', 'highly opinionated ones'), 'range') (('sentiment', 'high ratings'), 'take') ", "extra": ""}