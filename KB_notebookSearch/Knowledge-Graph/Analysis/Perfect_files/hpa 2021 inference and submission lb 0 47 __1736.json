{"name": "hpa 2021 inference and submission lb 0 47 ", "full_name": " h1 Project Overview h1 Cell Segmentation ", "stargazers_count": 0, "forks_count": 0, "description": "py L591 rgb g ryb_g per model above rgb g ryb_g per model above dt for hpa_image to remove the small pseduo nuclei this is to remove the cell borders signal from cell mask. findContours return signature yet again and I have no idea WTH is going on return the actual contours array cover and crop image contour cell to maximum size for model. See get_image_masks and create_cell_images functions for those details. com samusram even faster hpa cell segmentation. com rdizzl3 hpa segmentation masks no internet and associated datasets which are inputs for this work. Noting that the key to the segmentator is setting the scale factor to 0. resize to ratio of desired size Create padding for final square image at desired size Create top cover where white is what we want black otherwise Draw contour white over img blank black all 3 channels Code obtained form competition main page https www. This was combine with my OpenCV code to pull images for my different models. With the cell segmentation processes taking up a significant amount of GPU I used 2 different methods to download my classification models for the competition. linear algebra data processing CSV file I O e. Tuned for segmentation hpa images exclude the green area first this part is to use green channel and extend cell label to green channel benefit is to exclude cells clear on border but without nucleus mt is the mitchondria er is the endoplasmic reticulum nu is the nuclei high is the protein if the length the contours tuple returned by cv2. list_physical_devices GPU if gpus try tf. set_virtual_device_configuration gpus 0 tf. To save overall time and GPU resources my inference only predicted 2 images before submission. read_csv Stop Tensorflow From Eating All The Memory Currently memory growth needs to be the same across GPUs Memory growth must be set before GPUs have been initialized https github. the most important augmentation proved to be a random crop that acts like a zoom inot the features of the images. Cell SegmentationFor the competition I used the cell segmentator and then a modified version of the label_cell function from this notebook. com c hpa single cell image classification overview evaluation check input mask convert input mask to expected COCO API input RLE encode mask compress and base64 encoding For nuclei For full cells post processing Protein model image if modeltype rgb image tf. Both can be found in the keras docuementation https www. findContours is 2 then we are using either OpenCV v2. The initial cell segmentation utilized this notebook. VirtualDeviceConfiguration memory_limit 1024 except RuntimeError as e print e Here are the different view points that a supplied to each image for the model training and the inference prediction. Project OverviewFor this competition the majority of my time was spent on the inference. append image len cells Using weights estimates. org api_docs python tf config experimental set_memory_growth. 25 padding to True which gave the cells the best masking. logical_and with some revision to replace this func. 4 v4 beta or v4 official if the length of the contours tuple is 3 then we are using either OpenCV v3 v4 pre or v4 alpha otherwise OpenCV has changed their cv2. Test time augmentation was important for accurate prediction of the images. com qubvel efficientnet blob 8984e988ecccd9c3a15be2e793991845619a8a26 efficientnet model. ", "id": "akimball002/hpa-2021-inference-and-submission-lb-0-47", "size": "1736", "language": "python", "html_url": "https://www.kaggle.com/code/akimball002/hpa-2021-inference-and-submission-lb-0-47", "git_url": "https://www.kaggle.com/code/akimball002/hpa-2021-inference-and-submission-lb-0-47", "script": "keras.preprocessing.image normalization __fill_holes hpacellseg.cellsegmentator morphology skimage.morphology label_cell closing print_cell image_prediction_string label_nuclei numpy scipy.ndimage get_image_masks grab_contours img_to_array keras.backend typing _get_noise_shape hpacellseg.utils image_predictions_exp skimage matplotlib.pyplot pycocotools FixedDropout(layers.Dropout) measure tensorflow util pandas feature build_image_names disk (binary_erosion tensorflow.keras tqdm _mask filters __wsh create_cell_masks image_predictions layers flatten_list_of_lists data_aug_exp add_neglabel backend create_cell_images _mask as coco_mask segmentation transform weighted_predictions clipimgtosquare ", "entities": "(('this', 'cell mask'), 'py') (('random that', 'images'), 'prove') (('which', 'work'), 'com') (('cell initial segmentation', 'notebook'), 'utilize') (('key', '0'), 'note') (('Cell I', 'notebook'), 'SegmentationFor') (('GPU gpus', 'tf'), 'list_physical_device') (('majority', 'inference'), 'project') (('com', 'hpa cell even faster segmentation'), 'samusram') (('modeltype rgb image', 'Protein model image'), 'convert') (('high tuple', 'cv2'), 'be') (('GPU inference', 'submission'), 'predict') (('GPUs', 'https initialized github'), 'Stop') (('Code', 'page https form competition main www'), 'create') (('then we', 'OpenCV v2'), 'use') (('I', 'competition'), 'use') (('org api_docs', 'config experimental'), 'python') (('Both', 'keras docuementation https www'), 'find') (('WTH', 'model'), 'signature') (('This', 'different models'), 'combine') (('Here', 'model training'), 'memory_limit') (('Test time augmentation', 'images'), 'be') (('which', 'best masking'), 'padding') (('v4 otherwise OpenCV', 'cv2'), 'beta') ", "extra": "['test']"}