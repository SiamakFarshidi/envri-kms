{"name": "multi label segmentation using fastai ", "full_name": " h1 Multi label segmentation using fastai h2 Code utils h2 EDA h3 Broken images h3 Convert masks from to RLE h2 Load images h2 Train h3 Unfreeze and differential learning rate h2 Predictions h3 Get predictions for test images h3 Resize predictions to submission size h3 Write submission file ", "stargazers_count": 0, "forks_count": 0, "description": "ai integrates convenient features for data augmentation and training which should be useful later. 1 3 implies starting at pixel 1 and running a total of 3 pixels 1 2 3. ai t unet how to get 4 channel output 54674 4 adapted from https forums. To achieve this the MultiLabelSegmentationLabelList and MultiLabelImageSegment classes have been created. However multi label segmentation isn t supported yet. The test_images are loaded in the databunch test dataset and utilized at the end of this notebook to make predictions and write submission file. 1 gallery text_labels_and_annotations custom_legends. com iafoss unet34 dice 0 87 can use sigmoid on the input too in this case the threshold would be 0. Consequently there is overlap in the labels i. So it would be nice to use it in this project. This way overlapping label information is preserved. each pixel can belong to several classes. read_csv split Image_Label pivot to have one row per image and masks as columns sanity check Train and test images are 1400x2100 pixels TODO remove use_partial_data use only a subset of data to speedup tests put all masks into a single channel shape CxHxW slice tensor to a single mask channel use powers of two for class codes to keep them distinguishable after sum use same color normalization in image and legend custom legend see https matplotlib. 5 make sure target is float too update a graph of learner stats and metrics after each epoch save model at every metric improvement stop training if metric no longer improve point to writable directory learn learn. Multi label segmentation using fastai It is gravel or sugar Part of this project is to find out if humans even agree on these cloud patterns. The pixels are numbered from top to bottom then left to right 1 is pixel 1 1 2 is pixel 2 1 etc. size color white source https forums. This is only a start but I hope that this will be helpful to others. Fastai https docs. Code utils EDA Broken imagesImages which look incorrect. com kaggle docker python linear algebra data processing CSV file I O e. Convert masks from to RLEFrom evaluation https www. model_dir 20190924 095959_unet_resnet18_stage1_best slice start end syntax the first group s learning rate is start the last is end and the remaining are evenly geometrically spaced TODO use activation instead. For now I focused on adding multi label support to fastai segmentation. Different persons will label clouds differently the same area can be seen has gravel by one person and sugar by another one. A simple Unet with ResNet18 model is trained to verify that everything works correctly. com c understanding_cloud_organization overview evaluation start position and a run length. ai t how to load multiple classes of rle strings from csv severstal steel competition 51445 2 add attributes to copy by new load mask at full resolution shape CxHxW filter out NaNs binarize masks get filename only reduce image size img_size tuple v 16 for v in train_img_dims use multiple of 4 no need for a void class if a pixel isn t in any mask it is not labelled add unlabelled test images set empty RLE string as label to produce empty multi label masks and allow reconstruct and show TODO add data augmentation tfms get_transforms use same stats as pretrained model adapted from https www. text 10 10 f px self. Each RLE encoded mask is loaded into a separate image segment channel. Load images Train Unfreeze and differential learning rate Predictions Get predictions for test images Resize predictions to submission sizeAs per competition rules predicted masks must have 1 4 of original size for submission Write submission file Python 3 environment defined by the kaggle python docker image https github. html debug info ax. ", "id": "alt250/multi-label-segmentation-using-fastai", "size": "1897", "language": "python", "html_url": "https://www.kaggle.com/code/alt250/multi-label-segmentation-using-fastai", "git_url": "https://www.kaggle.com/code/alt250/multi-label-segmentation-using-fastai", "script": "__init__ analyze_pred reconstruct resize_pred_masks fastai.vision open split_img_label fmt_now show fastai.utils.mem numpy write_submission_file get_masks_rle time dice_metric Line2D fastai.utils.show_install rle_to_mask fastai.callbacks.hooks matplotlib.pyplot pandas fastai.callbacks tqdm show_img_fn test_mask_rle show_img_info matplotlib.lines bce_logits_floatify mask_to_rle MultiLabelImageSegment(ImageSegment) MultiLabelSegmentationLabelList(SegmentationLabelList) show_install; show_install() datetime ", "entities": "(('this', 'others'), 'be') (('get_transforms', 'https www'), 'add') (('threshold', 'too case'), 'use') (('which', 'data augmentation'), 'integrate') (('I', 'fastai segmentation'), 'focus') (('54674 4', 'https forums'), 'unet') (('evenly geometrically TODO', 'activation'), 'model_dir') (('test_images', 'submission file'), 'load') (('differently same area', 'one'), 'label') (('achieve', 'MultiLabelSegmentationLabelList'), 'create') (('RLE', 'image segment separate channel'), 'encode') (('3', '3 pixels'), 'implie') (('sum', 'legend custom https matplotlib'), 'split') (('masks', 'python docker image https kaggle github'), 'image') (('So it', 'project'), 'be') (('pixels', 'then right 1'), 'number') (('pixel', 'several classes'), 'belong') (('metric', 'learn'), 'make') (('everything', 'ResNet18 model'), 'train') (('which', 'Broken imagesImages'), 'EDA') (('humans', 'cloud even patterns'), 'label') (('com c understanding_cloud_organization overview evaluation', 'position'), 'start') ", "extra": "['annotation', 'organization', 'test']"}