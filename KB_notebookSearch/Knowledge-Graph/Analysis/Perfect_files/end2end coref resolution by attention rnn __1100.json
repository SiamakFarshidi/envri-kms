{"name": "end2end coref resolution by attention rnn ", "full_name": " h1 Import Data h1 Explore Features for Building Mention Pair Distributed Representation h2 Extract Sentences h2 Create Train Dev and Test Data h3 Create Vocab and Embedding Matrix h1 Define Keras Layers h1 Build and Train Model h2 End to End RNN Attention Model h3 Define Model h3 Build Model h3 Train Model h3 Make Prediction ", "stargazers_count": 0, "forks_count": 0, "description": "com keyit92 coreference resolution by mlp cnn coattention nn. com kaggle docker python For example here s several helpful packages to load in linear algebra data processing CSV file I O e. Extract SentencesSelect the surrounding 100 words around the mention in the sentence. This Kernel implements a modified version of a state of art end to end neural correference resolution model published in 2017 https www. You can compare the result of this model with the result by other non RNN based DL models implemented in another kernel https www. This completition only focus on a specific case of the generic reference resolution problem and we only need pick out the correct mention from two candidates which simplifies the model implementation. org anthology D17 1018. read_csv Input data files are available in the. floatx don t pass the mask to the next layers apply mask after the exp. Import Data Explore Features for Building Mention Pair Distributed Representation Position FeaturesEncode the absolute positions in the sentence and the relative position between the pronoun and the entities. will be re normalized next Cast the mask to floatX to avoid float64 upcasting in theano in some cases especially in the early stages of training the sum may be almost zero and this results in NaN s. A workaround is to add a very small positive number \u03b5 to the sum. sum a axis 1 keepdims True K. max_colwidth 1000 char offset to token offset token offset to sentence offset buckets relative distance buckets absolute position in the sentence longer than 99 of the sentences char offset to token offset mention_word token offset to sentence offset mention sentence absolute position in the sentence clip the sentence if it is longer than max length make sure the mention is in the sentence span df apply will call the first row twice remove the first one generate word index generate pos tag index todo check that this is correct do not pass the mask to the next layers apply mask after the exp. will be re normalized next Cast the mask to floatX to avoid float64 upcasting in theano sequences inputs pos tag mention position in the sentence addtional mention pair features rnn rnn encoding rnn encoding attention aggregated rnn embedding mention rnn embedding mention pair features MLP Layers. For example running this by clicking run or pressing Shift Enter will list the files in the input directory Any results you write to the current directory are saved as output. Create Train Dev and Test Data Create Vocab and Embedding Matrix Define Keras Layers Build and Train Model End to End RNN Attention Model Define Model Build Model Train Model Make Prediction This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python docker image https github. ", "id": "keyit92/end2end-coref-resolution-by-attention-rnn", "size": "1100", "language": "python", "html_url": "https://www.kaggle.com/code/keyit92/end2end-coref-resolution-by-attention-rnn", "git_url": "https://www.kaggle.com/code/keyit92/end2end-coref-resolution-by-attention-rnn", "script": "Tree __init__ DependencyParser create_dist_features extract_sents add_sent_columns keras.layers _dot_product compute_mask build_e2e_birnn_attention_model extrac_positional_features English compute_output_shape bs_ Layer build seaborn numpy models callbacks spacy.lang.en optimizers FeatureSelection1D(Layer) initializers get_config keras.backend merge constraints matplotlib.pyplot text AttentionWeight(Layer) tensorflow call pandas optimizers as ko activations spacy.pipeline keras.engine poses_to_sequences sequence keras.preprocessing regularizers text as ktext callbacks as kc layers _row_to_y bs backend keras SVG sentences_to_sequences ohe_dist IPython.display nltk ", "entities": "(('read_csv Input data files', 'the'), 'be') (('rnn encoding rnn encoding attention rnn embedding mention rnn embedding mention rnn aggregated pair', 'MLP Layers'), 'normalized') (('floatx don t', 'exp'), 'pass') (('workaround', 'sum'), 'be') (('you', 'output'), 'list') (('Kernel', 'https 2017 www'), 'implement') (('this', 'exp'), 'offset') (('You', 'kernel https www'), 'compare') (('which', 'model implementation'), 'focus') (('It', 'python docker image https kaggle github'), 'Dev') ", "extra": "['test']"}