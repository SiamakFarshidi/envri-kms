{"name": "hpa classifier explainability segmentation ", "full_name": " h1 Intro h1 Plan h1 Libraries h1 Data Generators h2 One hot encoding classes h2 Stratified split into train val h2 Generator class h1 PR AUC based Callback h1 Classifier h2 Defining a model h2 Initial tuning of the added fully connected layer h2 Training the whole model h2 Visualizing train and val PR AUC h1 Extracting Integrated gradients h1 Cell segmentation h1 Cell level predictions h1 Submission ", "stargazers_count": 0, "forks_count": 0, "description": "save a model with the best PR AUC in validation 4. I ll build a classifier on top of image level labels multi label classification then use an explainability technique Guided GRADCAM to extract regions responsible for particular class prediction and then assign the segmented cells to particular classes based on the overlap with Grad CAM outputs. to reduce learning rate on PR AUC plateau. to early stop after 5 epochs of no improvement in mean PR AUC 3. Callback instances Classifier Defining a model Initial tuning of the added fully connected layer Training the whole model Visualizing train and val PR AUCI left the model to train longer on my local GPU. Classifier Classifier Defining a model Defining a model Initial tuning of the added fully connected layer Initial tuning of the added fully connected layer Training the whole model Training the whole model Visualizing train and val PR AUC Visualizing train and val PR AUC 5. I also checked out the batched version from this notebook by Darek K\u0142eczek https www. disable_eager_execution please note that locally I ve trained a keras. Cell segmentation Cell segmentation 7. com c hpa single cell image classification data dictionary for fast access to ohe vectors sorting present classes in lexicographical order just to be sure to speed up private set submission if no training is expected to store per each class and also mean PR AUC remove previous checkpoints to save space estimate AUC under precision recall curve for each class early stop after early_stopping_patience 4 epochs of no improvement in mean PR AUC save a model with the best PR AUC in validation reduce learning rate on PR AUC plateau for the 260x260 effnetb0 mt is the mitchondria er is the endoplasmic reticulum nu is the nuclei nothing interesting there check input mask convert input mask to expected COCO API input RLE encode mask compress and base64 encoding for the case when there s just a single incomplete batch nothing interesting there to save the time for the public test set run. to estimate AUC under precision recall curve for each class 2. IntroIn this notebook I d create a simple baseline. The unique combinations will be put into train. Using these two levels we ll estimate the cell level confidence the higher the Integrated Gradients output the higher the confidence. Cell level predictions Cell level predictions 8. efficientnet model but using tensorflow. Extracting Integrated gradients Extracting Integrated gradients 6. Extracting Integrated gradientsUsing the awesome tf explain library. Generator classUsing green filter as the green filter should be used to predict the label and the other filters are used as references. Libraries Libraries 2. Submission Submission Libraries Data Generators One hot encoding classes Stratified split into train valLet s stratify based on combination of labels. com thedrcat hpa baseline cell segmentation. Cell segmentation Cell level predictionsLet s use the following heuristics we ll use the 95th percentile of Integrated Gradients output to estimate value roughly corresponding to the image level confidence. PR AUC based Callback PR AUC based Callback 4. Next we ll focus on Integrated Gradients output on top of the cell region. Data Generators Data Generators One hot encoding classes One hot encoding classes Stratified split into train val Stratified split into train val Generator class Generator class 3. level is the predicted class confidence from our classifier. I then upload the best model and plots from the model training. from the data page https www. com c hpa single cell image classification data Generator instances PR AUC based CallbackThe callback would be used 1. Finally we ll output only cells with confidence values reaching at least 60 of the image level confidence. EfficientNetB0 should lead to the same results from https www. Credits To segment cells offline I ll use this notebook by RDizzl3 https www. As not the whole true positive cell must be lightened up by Integrated Gradients we ll use the 95th percentile of the cell s to compare it with the value corresponding to the global image conf. com rdizzl3 hpa segmentation masks no internet the corresponding datasets. ", "id": "samusram/hpa-classifier-explainability-segmentation", "size": "3358", "language": "python", "html_url": "https://www.kaggle.com/code/samusram/hpa-classifier-explainability-segmentation", "git_url": "https://www.kaggle.com/code/samusram/hpa-classifier-explainability-segmentation", "script": "Flatten sklearn.metrics albumentations Compose display __init__ get_model early_stopping_check keras.layers get_masks keras.callbacks tqdm.auto deepcopy VerticalFlip hpacellseg.cellsegmentator EfficientNetB0 label_cell Adam numpy.random on_epoch_end numba numpy label_nuclei get_labels HorizontalFlip auc __getitem__ is_patience_lost model_checkpoint copy Sequence seed compute_pr_auc keras.backend read_img PrAucCallback(Callback) DataGenenerator(Sequence) get_predictions_string typing IntegratedGradients sklearn.model_selection tensorflow.python.framework GridDistortion on_epoch_start efficientnet.keras hpacellseg.utils encode_binary_mask Image matplotlib.pyplot pycocotools Dense tensorflow keras.utils pandas build_image_names keras.optimizers __len__ ops tqdm Rotate Callback _mask reduce_lr_on_plateau load_model plot_with_dots precision_recall_curve Model cuda vis_masks_test _mask as coco_mask keras.models get_pr_auc_history train_test_split IPython.display tf_explain.core.integrated_gradients ", "entities": "(('Extracting Integrated', 'explain awesome tf library'), 'gradientsuse') (('I', 'model training'), 'upload') (('Data Generators Data encoding encoding Generators One hot One hot classes', 'train val Generator class Generator class'), 'class') (('I', 'Darek K\u0142eczek https www'), 'check') (('Visualizing train', 'val PR train'), 'define') (('locally I', 'keras'), 'note') (('I d', 'simple baseline'), 'IntroIn') (('label multi classification', 'Grad CAM outputs'), 'build') (('we', 'image global conf'), 'use') (('PR AUC', 'Callback PR AUC'), 'base') (('I', 'RDizzl3 https www'), 'use') (('nothing', 'test public set run'), 'dictionary') (('Visualizing PR val AUCI', 'longer local GPU'), 'define') (('Submission Submission Libraries Data encoding One hot classes', 'labels'), 'generator') (('Next we', 'cell region'), 'focus') (('Finally we', 'image level confidence'), 'will') (('unique combinations', 'train'), 'put') (('level', 'class predicted classifier'), 'be') (('Integrated the higher Gradients', 'the higher confidence'), 'estimate') (('other filters', 'references'), 'filter') (('value', 'image level roughly confidence'), 'predictionsLet') (('EfficientNetB0', 'https www'), 'lead') (('internet', 'rdizzl3 hpa segmentation masks'), 'com') ", "extra": "['test']"}