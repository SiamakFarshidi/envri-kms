{"name": "build alexnet to classifies pneumonia ", "full_name": " h3 Summary h1 1 Import libs h1 2 Explore data h3 Inference from charts h1 3 Visualize image h2 Image histogram h1 4 Data augmentation h1 5 Prepare data h1 6 Build AlexNet h2 6 1 AlexNet h2 6 2 Train AlexNet h2 6 3 Plot learning curve h2 6 4 Evaluate ", "stargazers_count": 0, "forks_count": 0, "description": "In train set most of pnemonia case is labeled as unknow null value 3875 3944. Data augmentation Plot images after augmentation 5. It plots the number of pixels for each tonal value. Visualize image Plot random 6 images in train set Image histogram An image histogram is a type of histogram that acts as a graphical representation of the tonal distribution in a digital image. In Label_1_Virus_category those value are different to much. Image histogram of 5 Normal cases 4. All Pnemonia cases is labeled as bacteria virus stress smoking and dont have any unknow null value in Label_1_Virus_category in both train set and test set. Build AlexNet Preprocessing layers Define metrics used for all models 6. Pnemonia cases is much more than Normal cases in both train set and test set. Thus we are going to construct a model which classifies Normal and Pnemonia cases. All Normal cases is labeled as unknow null in Label_1_Virus_category and Label_2_Virus_category. 3 Plot learning curve 6. By looking at the histogram for a specific image a viewer will be able to judge the entire tonal distribution at a glance. In test set all pnemonia case is labels as unknow null value. Summary Exploring data Visualizing image Data augmentation Preparing data Training AlexNet to classifies images Result AUC 97 1. Cause the difference of Pnemonia and Normal cases so that we should use AUC or F1 score to evaluate the goodness of model. 1 AlexNet Define model architecture 6. 4 Evaluate Common lib Utils Sklearn Tensorflow Init variables Split to train test set Check train_df size test_df size metadata_df size Add text to chart fill na Train set Test set Train pnemonia Test pnemonia Train pnemonia Test pnemonia Plot image Plot image histogram Plot image Plot image histogram When export model these preprocessing layers will be saved along with the rest of model Preprocessing layer 1st layer 2nd layer 3rd layer 4th layer 5th layer Flatten 6th layer 7th layer 8th layer output Create folder contains model s files Initialize TensorBoard. Explore data Count number of null values in train and test dataset Count value in Label column Make sure that all normal cases go with unknow value in Label_1_Virus_category and Label_2_Virus_category Count value in Label_1_Virus_category column Count value in Label_2_Virus_category column Inference from charts We have 2 cases that is Pnemonia and Normal case. In Label_2_Virus_category if we remove all unknow value then we just have 69 sample. ", "id": "luukhang/build-alexnet-to-classifies-pneumonia", "size": "2083", "language": "python", "html_url": "https://www.kaggle.com/code/luukhang/build-alexnet-to-classifies-pneumonia", "git_url": "https://www.kaggle.com/code/luukhang/build-alexnet-to-classifies-pneumonia", "script": "Flatten TrueNegatives add_annotate_to_chart tensorflow.keras.metrics tensorflow.keras.optimizers tensorflow.keras.layers VGG16 tensorflow.keras.callbacks tensorflow.keras.preprocessing.image tensorflow.keras.regularizers load_img_path EarlyStopping Dropout FalseNegatives Sequential TruePositives tensorflow.keras.models Adam AUC Conv2D AveragePooling2D seaborn numpy count_plot_null_value array_to_img Input ReduceLROnPlateau count_plot_value_in_column img_to_array Resizing ModelCheckpoint sklearn.model_selection InputLayer ImageDataGenerator load_img matplotlib.pyplot show_multi_img Activation Dense tensorflow l2 pandas create_dir img_path_to_array tensorflow.keras tqdm show_img BatchNormalization FalsePositives tensorflow.keras.applications.vgg16 Model MaxPooling2D Add Rescaling tensorflow.keras.layers.experimental.preprocessing train_test_split ", "entities": "(('It', 'tonal value'), 'plot') (('value', 'much'), 'be') (('Preparing', 'AUC'), 'Result') (('then we', 'just 69 sample'), 'have') (('Build AlexNet Preprocessing layers Define metrics', 'models'), 'use') (('viewer', 'glance'), 'be') (('most', 'unknow null value'), 'set') (('which', 'Normal cases'), 'go') (('output Create folder', 'files Initialize TensorBoard'), 'lib') (('bacteria virus', 'train set'), 'label') (('Pnemonia cases', 'train set'), 'be') (('that', '2 cases'), 'make') (('that', 'digital image'), 'random') (('Normal we', 'model'), 'cause') (('Normal cases', 'unknow null'), 'label') ", "extra": "['test']"}