{"name": "inceptionresnetv2 all 5 classes at once ", "full_name": " h3 iterate through the folders to create a dataframe of the form filepaths labels h3 data sets are totally balanced but rather a large set that will take long to train h3 reduce size of samples in each class to 2500 initially h3 create train test valid generators h3 create function to show some image examples h3 define function to print text in RGB foreground and background colors h3 create the model h3 create a subclass of callbacks to control learning rate and print training results for each epoch h3 instantiate the custom callback and train the model h3 define function to plot the training data h3 define function to generate the confusion matrix and classification report h3 evaluate model on the test set then save the model h3 make predictions on test set and generate confusion matrix and classification report ", "stargazers_count": 0, "forks_count": 0, "description": "iterate through the folders to create a dataframe of the form filepaths labels data sets are totally balanced but rather a large set that will take long to train reduce size of samples in each class to 2500 initially create train test valid generators create function to show some image examples define function to print text in RGB foreground and background colors create the model create a subclass of callbacks to control learning rate and print training results for each epoch instantiate the custom callback and train the model define function to plot the training data define function to generate the confusion matrix and classification report evaluate model on the test set then save the model make predictions on test set and generate confusion matrix and classification report make a combined dataframe scale pixel between 1 and 1 get a sample batch from the generator show maximum of 25 images scale images between 0 and 1 becaue pre processor set them between 1 and 1 prints the text_msg in the foreground color specified by fore_tupple with the background specified by back_tupple text_msg is the text fore_tupple is foregroud color tupple r g b back_tupple is background tupple r g b returns default print color to back to black specifies how many epochs without improvement before learning rate is adjusted specifies training accuracy threshold when lr will be adjusted based on validation loss factor by which to reduce the learning rate get the initiallearning rate and save it in self. lr set highest training accuracy to 0 set lowest validation loss to infinity set a class vaiable so weights can be loaded after training is completed method runs on the end of each epoch get the current learning rate get the validation loss for this epoch get training accuracy if training accuracy is below threshold adjust lr based on training accuracy training accuracy improved in the epoch set new highest training accuracy traing accuracy improved so save the weights set count to 0 since training accuracy improved set stop counter to 0 training accuracy did not improve check if this has happened for patience number of epochs if so adjust learning rate adjust the learning by factor set the learning rate in the optimizer reset the count to 0 return to better point in N space increment patience counter training accuracy is above threshold so adjust learning rate based on validation loss check if the validation loss improved replace lowest validation loss with new validation loss validation loss improved so save the weights reset count since validation loss improved validation loss did not improve adjust the learning rate increment stop counter because lr was adjusted reset counter set the learning rate in the optimizer return to better point in N space increment the patience counter check if learning rate has been adjusted stop_count times with no improvement stop training number of epochs to wait to adjust lr if monitored value does not improve number of epochs to wait before stopping training if monitored value does not improve if train accuracy is threshhold adjust monitor accuracy else monitor validation loss factor to reduce lr by experimental if True and monitored metric does not improve on current epoch set modelweights back to weights of previous epoch if true free weights of the base model used to determine value of last epoch for printing Plot the training and validation data this is the epoch with the lowest validation loss dictionary integer of class number string of class name store new_dict as a text fine in the save_dir list of string of class names labels are integer values a misclassification has occurred list containg how many times a class c had an error stores the class create a confusion matrix. ", "id": "gpiosenka/inceptionresnetv2-all-5-classes-at-once", "size": "831", "language": "python", "html_url": "https://www.kaggle.com/code/gpiosenka/inceptionresnetv2-all-5-classes-at-once", "git_url": "https://www.kaggle.com/code/gpiosenka/inceptionresnetv2-all-5-classes-at-once", "script": "Flatten sklearn.metrics __init__ display tensorflow.keras.metrics tensorflow.keras.optimizers tensorflow.keras.layers tensorflow.keras.preprocessing.image number Dropout Sequential Adamax tensorflow.keras.models Adam print_in_color on_epoch_end Conv2D seaborn numpy LRA(keras.callbacks.Callback) PIL print_info on_epoch_begin sklearn.model_selection ImageDataGenerator confusion_matrix IPython.core.display Image matplotlib.pyplot Activation Dense tensorflow pandas classification_report categorical_crossentropy show_image_samples tensorflow.keras tqdm imshow BatchNormalization load_model regularizers tr_plot Model MaxPooling2D backend backend as K keras scalar train_test_split HTML cv2 ", "entities": "(('class', 'confusion matrix'), 'set') (('when lr', 'self'), 'be') ", "extra": "['test']"}