{"name": "exploratory data analysis dsb 2018 ", "full_name": " ", "stargazers_count": 0, "forks_count": 0, "description": "There is quite a large range in the number of nuclei per image. There is one mask for each annotated nucleus. This will make the data easier to manipulate and plot. Nuclei Sizes Let s take a look at some differently sized nuclei in the training set. I adapted various parts of the following kernels while putting this together https www. Initialize counter. Different strategies should be tried here to see what works best. Conclusion There is a large range of image dimensions in the dataset and not all of the images are square. Introduction This will be a short exploratory analysis with the goal of becoming more familiar with the 2018 Data Science Bowl dataset and identifying some possible hurdles that could have a negative effect on model performance. It s an interesting structure possibly some kind of creature There appears to be a lot going on in this image but there are only two annotated nuclei. The size of nuclei vary a lot throughout the images in the training set and is likely to make detection more challenging. Also please don t hesitate to point out any mistakes I might have made there are probably a lot of them. This issue will need to be addressed before feeding the images to our model. As you can see above the nucleus mask completely disappears when the image is scaled down to 128x128 pixels. tqdm is used to display progress as reading all the images can take about 1 2 minutes. Wow This nucleus is either very small or very far away This makes me concerned about scaling down some of the larger images as some of these small nuclei could become undetectable or a least much more difficult to detect. Sum and divide by 255 to get the number of pixels for the nucleus. Most of the images look like they are 256x256 so the squashing stretching might not be an issue. There are 198 annotated nuclei in this image. Create Image Masks Metadata Dataframe Let s create another data frame for the masks metadata. I have only scratched the surface of this dataset and there is much more to explore. In the image on the right the nuclei appear to overlap each other. The smallest image was 256x256 and the largest was 1040x1388 pixels. Any suggestions for improvements would be very helpful. After creating the data frame we can take a look at its summary stats along with the first five and last five rows to make sure it looks ok and get familiar with it. There is a wide range of different nuclei sizes and shapes. Whereas the nuclei in the image overlap the masks do not appear to do so. Loop over the mask ids read the images and gather metadata from them. A few more things I would like to look into are the distribution of color in the images identifying different nuclei groups clusters and taking a look at the test set. The distribution of nuclei masks per image appears to be skewed to the right. Scaling the smaller images up might be a better option than scaling the larger images down as this would also result in a loss of information. Plot some of the metadata distributions The image dimensions do not appear to be equally distributed and have a somewhat bimodal distribution. Append to masks data list that will be used to create a pandas dataframe. Increment nucleus count. Loop over the training images. Create dataframe for images Create dataframe for masks Increment col index and reset each time it gets to 4 to start a new row Increment row index every 4 items. Contents Importing and processing image data Looking at the image metadata summary statistics Plotting image width height and area distributions Plotting number of nuclei per image distribution Plotting images with the most and fewest nuclei Plotting the smallest and largest nuclei Plotting a sample of images Conclusion Create Images Metadata Dataframe Create a pandas data frame from the list of image metadata that was created in the loop above. These lists will be used to store the image metadata that will then be used to create pandas dataframes. Let s see what the masks look like when stacked on top of each other. This is done after the masks loop because we want to store the number of nuclei per image in the img_data list. com jerrythomas exploratory analysis https www. com keegil keras u net starter lb 0 277 Get train and test IDs sys. Build image info list that will be used to create dataframe. The smallest nucleus was only a few pixels in size and was found in one of the larger images 1000x1000 resizing this image caused the tiny nucleus to disappear so resizing images should be approached with great caution. flush These lists will be used to store the images. The images could be resized to squares but this will cause images to be squashed either vertically or horizontally and would result in a loss of information. ", "id": "jackvial/exploratory-data-analysis-dsb-2018", "size": "3895", "language": "python", "html_url": "https://www.kaggle.com/code/jackvial/exploratory-data-analysis-dsb-2018", "git_url": "https://www.kaggle.com/code/jackvial/exploratory-data-analysis-dsb-2018", "script": "itertools imread skimage.transform resize seaborn numpy matplotlib.pyplot label pandas concatenate_images imread_collection chain tqdm skimage.morphology imshow skimage.io ", "entities": "(('that', 'loop'), 'create') (('last five it', 'it'), 'take') (('so squashing stretching', 'images'), 'look') (('tqdm', '1 about 2 minutes'), 'use') (('detection', 'training set'), 'vary') (('resizing so images', 'great caution'), 'be') (('that', 'pandas dataframe'), 'append') (('images', 'information'), 'resize') (('this', 'information'), 'be') (('that', 'model performance'), 'introduction') (('issue', 'model'), 'need') (('I', 'test set'), 'be') (('masks', 'other'), 'let') (('we', 'img_data list'), 'do') (('time it', 'row Increment row new index'), 'create') (('I', 'dataset'), 'scratch') (('I', 'probably them'), 'hesitate') (('lists', 'images'), 'flush') (('suggestions', 'improvements'), 'be') (('ids', 'them'), 'read') (('s', 'masks metadata'), 'let') (('nuclei', 'other'), 'appear') (('completely when image', '128x128 pixels'), 'disappear') (('Build image info that', 'dataframe'), 'list') (('I', 'https together www'), 'adapt') (('image dimensions', 'bimodal equally somewhat distribution'), 'plot') (('all', 'images'), 'conclusion') (('overlap', 'masks'), 'appear') (('that', 'pandas then dataframes'), 'use') (('s', 'training set'), 'let') (('some', 'small nuclei'), 'be') (('It', 'image'), 's') (('distribution', 'right'), 'appear') ", "extra": "['test']"}