{"name": "example wind analysis in python ", "full_name": " h1 Example Wind Resource Assessment Using Python h2 Packages h2 Get Wind Data h2 Site Data Exploratory Analysis h3 Data Structure h2 Anemoi h2 Shear analysis h2 Reference Data Exploratory Analysis h2 Long term analysis h3 MCP h2 Frequency distribution analysis ", "stargazers_count": 0, "forks_count": 0, "description": "The demostration mast only has a single orientation but if we had included the NW and SE facing anemometers the shear would have been calculated for each of these sensor combinations as well. This can also be left blank or skipped with a double underscore. Anemoi is built upon these popular modules but with met mast data and wind resource assessment in mind. First we ll resample our mast data to daily. Example Wind Resource Assessment Using PythonCory Jog 2018 06 06A Python adaptation of Stephen Lightfoote s original post in R https github. As of June 2018 the primary focus has been on manipulating mast data and calculating annual shear. If you turn them off you can see the monthly anomalies become much tighter. Alternatively we could apply our correlations to the monthly mean reference data but this would de prioritize measure site data and isn t recommended. Along with average daily wind speeds from ten nearby reference stations. A bit more complex would be to assume the shear between a sensor pair and apply that alpha value time series to our 59 m sensor data. For demonstration purposes we ll take the middle road and assume the shear profile between a single sensor combination on a 10 minute basis. All that to say there is very little value to this data outside of being a good example of a real data in a typical wind resource assessment workflow. Signal signal aggregation type valid options include AVG SD MIN MAX COUNT GUSTSensor name examples Anemometer installed at 59 m with a 350 degree orientation SPD_59_N_AVG All columns from an anemometer installed at 59 m with a 350 degree orientation SPD_59_N_AVG SPD_59_N_SD SPD_59_N_MIN SPD_59_N_MAX Wind vane installed at 57. These data have been cleaned and reconstructed so the recovery rate is very good for each sensor. The long term predictions represent the predicted long term mean wind speed at our mast at measurement height from each valid reference station Reference Station 1 8. The goal here is to illustrate how aspects of a typical wind resource assessment from meteorological data can be accomplished using open source tools. Anemoi was inspired by Rob Story s Climatic library https github. We again have multiple methods we could employ. com coryjog anemoi blob master LICENSE and free for anyone to use. Anemoi automatically stores the metadata and takes advantage of panda s MultiIndex functionality to organize the sensor data This library is still under active development so please be patient. Namely a long term hub_height wind speed frequency distribution scaled to our hub height mean wind speed. If you would like to help with development please let me know and we can work together. While these data have been collected from an actual installed met mast the sensor heights have been changed and the measured data have been scaled by an arbitrary factor. An analyst can turn on and off the sensor combinations using the legend. Long term analysis MCPWe are now ready to correlate our site to our reference stations and estimate our long term mean wind speed at our measurement height. This has been done to disguise the absolute wind speeds and directions at the real site. We could then apply the shear for every 10 minute record that fell within a goodness of fit threshold and for every record outside our limits we could apply a lookup table of alpha values binned by direction season and time of day. of 7 runs 10 loops each timeit 7. First are the annual profiles similar And then are there any concerning trends in the data that would indicate inconsistencies at the reference stations We can check this by normalizing the monthly mean wind speeds by the long term mean for each month. All of these are possible within Python but the last one isn t yet included in Anemoi. For this site we have two possible options to chose the representative annual shear. You can also see this by mousing over the normalized monthly rolling averages for 2014 and 2015. We ll do this by applying the monthly correlations to our data and then splicing with our measured data so that for any given day we take the measured data over the synthesized data. Maybe even better yet we could do both and explore the sensetivity between the two Reference Data Exploratory AnalysisNow we look at some of the data characteristics of our reference station data in order to ensure they are valid options for MCP. Orthogonal distance regression is used by default but least squares and the robust linear model are also available. One is to take the average of all the sensor combinations. tab files the typical intput to wind flow models in a single environment. Now our first analysis quetsion is what does our wind and energy rose look like at this site A simple function to calculate the energy and wind roses has already been included in Anemoi. One even more complex option would be to fit a log law model to our data on a 10 minute basis using all our sensors. You can also see more of his insperational work on his blog http www. Type type of sensor valid options include SPD DIR T P RH and VBAT2. We ll then apply our alpha value s to our long term mean wind speed to get our long term hub height mean wind speed at our mast locations. Now we can cycle through our reference stations to get the correlation results while leaving out Referene Stations 9 and 10 because of the suspected inconsistency discussed above. It requires you pass it wind speed and direction data and define which column corresponds to which sensor. Documentation installation instructions and working examples on Binder can be found here https github. mast_annual method you can pass an an. Now we have our long term hub height mean wind speeds. We prefer to use Plotly s interactive charting https plot. com srlightfoote AWEA_WRA_Working_Group blob master Example_Wind_Resource_Assessment_Using_R. The correlary is that typical wind resource assessment is no where near being considered big data. We re making good progress. This is helpful information to know and can be passed along to the finaincal modeling team as a stress case or potential upside. The simplest methodology would be to assume our frequency distribution shape doens t change with height and scale our measurement height data to our long term hub height mean winds speed. We can see the percent adjustment each station predicts by normalizing by the measured mean wind speed. Frequency distribution analysisFinally we ve reached the last step in our typical assessment where we need to define the shape of our wind speed distribution. org resource assessment. 9 ms 793 \u00b5s per loop mean std. This is where a majority of the needed compute comes from and really this tiny relative to modern compute capabilities. It is open sourced under the MIT License https github. Hopefully this demostrates how an analyst could use a notebook to go from quality controlled data to. com wrobstory climatic which he developed while at Vestas. This is included in anemoi. com srlightfoote example wind analysis in r. This is a highly subjective test but it would appear reference stations 9 and 10 display inconsistent behavior. For this example we ll assume the top level anemomter combination. Data StructureMeasured 10 minute data from multiple heights at a site met mast. We ll then scale this to our long term hub height mean wind speed and produce a. These are anonymous data for demostration purposes. One top of that the location of the mast has been widtheld. We can now output this as a. Correlations data synthesis and frequency distribution functionality are planned by the end of 2018. 5 m with a 180 degree orientation DIR_57. MetMast object from the pandas. 5_S_AVG or since orientation isn t that important for vanes DIR_57. With this environment you get all the benefits of an open source scripting language such as auditability transparency scalability repeatability and disbributability with very little of the typical overhead needed to make sure an analysis can be transfered from one person or organization to another. Alright finally we have our desired output. Using representative data we ll walk through some of the typical steps taken to import visualize and analize meteorological data with the goal of estimating the long term wind regime at a given hub height. Site Data Exploratory AnalysisNow to the meat of the Kernel which is to illustrate how to analyze and visualize typical steps within a wind resource assessment where the end goal is to characterise the long term wind regime at a given hub height. All of our reference station predict and upwards adjustment which means our measured period was below the long term average. AnemoiAnemoi is a wind specific analysis package in Python. Colors for plotting timeit 24. This kernel can also serve as a introduction for analysts in this case utilizing Python. Right now anemoi uses the IEC site calibration method of comparing the standard deviation of the wind speed ratios but this breaksdown when the slope is very far from unity. 6 difference in our wind speeds depending on the shear methodology we choose. As an aside this takes about seven seconds to loop through the 96 monthly correaltions which is about 40 of the overall time needed to run the entire notebook. tab file and use it to initialize our wind flow model. It also assumes a specific sensor naming convention with the following form type_height_orientation_signal. Next what is the mean of monthly means momm wind speed at the top measurement height Shear analysisAnemoi is more developed in its shear analysis functionality because this module being the easiest to construct is being used to demostrate and launch the project. Finally if we apply our alpha values to our long term mean wind speed at measurement height we calculate our long term hub height mean wind speed at the mast location. Height sensor height in meters decimals are allowed 3. This is also a follow up to the AWEA Wind Resource Working Group s webinar on the open source ecosystem http www. of 7 runs 1 loop each. All of them are below 1. PackagesFirst load the Python libraries used to perform a typical wind analysis. You ll probably notice the uncertainty calculation hasn t been fully tested. There are many correlation methods available for simplicity we ll perform a daily correlation binned by month between our site and each reference station. The other is to take the top sensor combination because it appears there is a risk of the shear relaxing with height and since we re extrapolating up to 120 m our final results will depend on our shear analysis. This example uses a combination of vanilla data science libraries numpy pandas matplotlib scikit learn but also introduces a wind specific analysis library Anemoi https github. This can also help inform the uncertainty analysis which isn t covered in this notebook. COMB or SEL can be used to denote combined and selectively averaged signals. Here is an example of a daily correlation binned by month between our site and Reference Station 1. Get Wind DataNext we ll import some sample data from a single meterological mast installed at a site along with daily wind speed data from nearby reference stations. There seems to be about a 1. Specifically we ll perform MCP to characterize the long term mean wind speed shear analysis to extrapolate to hub height and define the wind speed frequency distribution s shape. 6 s 110 ms per loop mean std. It assumes a datetime index with sensor data in the columns. ly python to analize the shear between sensor combinations. For our purposes we ll say 120 m. tab file as our input to our wind flow model. There are a bunch of ways we could combine these predictions but for the sake of simplicity and for demonstration purposes we ll just take the simple mean of all the predictions. Again we can use the legend to turn on and off the normalized monthly rolling average traces. Orientation cardinal direction the sensor is installed valid options include N NE E SE S SW W NW. We can rejoice this makes things much more simple for us Now that we have the measure and correlate steps complete we need to apply our correaltions to our reference data to predict our site wind speeds. 5_AVG Thermometer installed at 3 m with a 0 degree orientation T_3_N_AVG or T_3_AVGFor this demonstation mast we already have the combined average wind speeds and direction sensors as column labels so it is very straightforward to create an anemoi. You can see the R equivalent here https www. Anemoi is built upon a specific DataFrame format. MetMast object and anemoi will return the alpha matrix between each anemometer grouped by orientation. We ll then concatnate our site and reference data to pass to anemoi s correlation methods. ", "id": "coryjog/example-wind-analysis-in-python", "size": "12978", "language": "python", "html_url": "https://www.kaggle.com/code/coryjog/example-wind-analysis-in-python", "git_url": "https://www.kaggle.com/code/coryjog/example-wind-analysis-in-python", "script": "sklearn scipy gamma rose_axis_settings plotly.tools seaborn numpy matplotlib.pyplot plotly.offline plotly.graph_objs scipy.special matplotlib pandas scipy.optimize plotly.plotly anemoi ", "entities": "(('correlate we', 'site wind speeds'), 'rejoice') (('Type type', 'SPD DIR T P RH'), 'include') (('which', 'entire notebook'), 'take') (('long term', 'measurement height'), 'be') (('hub_height wind speed frequency Namely long term distribution', 'wind height speed'), 'mean') (('This', 'stress case'), 'be') (('height', 'a.'), 'scale') (('finally we', 'desired output'), 'have') (('You', 'R https equivalent here www'), 'see') (('library', 'still active development'), 'store') (('Anemoi', 'Rob library https Climatic github'), 'inspire') (('It', 'following form'), 'assume') (('Documentation installation instructions', 'https here github'), 'find') (('we', 'hub given height'), 'use') (('it', 'very anemoi'), 'instal') (('we', 'site'), 'be') (('measured period', 'term long average'), 'predict') (('he', 'Vestas'), 'climatic') (('shear', 'sensor combinations'), 'have') (('end where goal', 'hub given height'), 'AnalysisNow') (('when slope', 'very far unity'), 'use') (('matplotlib scikit', 'analysis also wind specific library'), 'use') (('PackagesFirst', 'wind typical analysis'), 'load') (('2018 primary focus', 'annual shear'), 'be') (('location', 'mast'), 'be') (('recovery rate', 'very sensor'), 'clean') (('First we', 'mast data'), 'resample') (('they', 'valid MCP'), 'do') (('One even more complex option', 'sensors'), 'be') (('where majority', 'compute really tiny modern capabilities'), 'be') (('Anemoi', 'DataFrame specific format'), 'build') (('how analyst', 'quality controlled data'), 'demostrate') (('analysts', 'Python'), 'serve') (('Height sensor height', 'meters decimals'), 'allow') (('we', 'representative annual shear'), 'have') (('we', 'minute 10 basis'), 'take') (('we', 'again multiple methods'), 'have') (('direction column', 'sensor'), 'require') (('term long predictions', 'Reference 1 8'), 'represent') (('We', 'charting https interactive plot'), 'prefer') (('This', 'real site'), 'do') (('height', 'mast location'), 'calculate') (('this', 'measure site data'), 'apply') (('We', 'month'), 'be') (('valid options', 'N NE E SE S SW W NW'), 'direction') (('monthly anomalies', 'them'), 'see') (('We', 'correlation methods'), 'concatnate') (('tab', 'single environment'), 'file') (('we', 'predictions'), 'be') (('where we', 'wind speed distribution'), 'reach') (('These', 'demostration anonymous purposes'), 'be') (('station', 'wind measured mean speed'), 'see') (('minute Data StructureMeasured 10 data', 'site'), 'meet') (('we', 'level anemomter top combination'), 'assume') (('Correlations data synthesis', '2018'), 'plan') (('measured data', 'arbitrary factor'), 'meet') (('Now we', '9 suspected inconsistency'), 'cycle') (('Anemoi', 'mind'), 'build') (('COMB', 'combined selectively signals'), 'use') (('analyst', 'legend'), 'turn') (('height', 'mast locations'), 'apply') (('This', 'also double underscore'), 'leave') (('You', '2014'), 'see') (('All', 'isn last one yet Anemoi'), 'be') (('MetMast object', 'orientation'), 'return') (('also more', 'www'), 'see') (('degree orientation Wind 350 SPD_59_N_MIN SPD_59_N_MAX vane', '57'), 'include') (('we', 'shear methodology'), 'difference') (('isn t', 'notebook'), 'help') (('that', 'wind resource assessment typical workflow'), 'say') (('DataNext we', 'reference nearby stations'), 'get') (('term wind long speed', 'wind speed frequency shape'), 'perform') (('analysis', 'another'), 'get') (('we', 'synthesized data'), 'do') (('AnemoiAnemoi', 'analysis wind specific Python'), 'be') (('This', 'source open ecosystem'), 'be') (('height', 'wind speeds'), 'have') (('One', 'sensor combinations'), 'be') (('Here example', 'site'), 'be') (('we', 'day'), 'apply') (('Again we', 'normalized monthly rolling average traces'), 'use') (('It', 'MIT License https github'), 'be') (('least squares', 'default'), 'use') (('winds', 'speed'), 'be') (('here how aspects', 'source open tools'), 'be') (('simple function', 'already Anemoi'), 'be') (('module', 'project'), 'be') (('we', 'development'), 'let') (('final results', 'shear analysis'), 'be') (('It', 'columns'), 'assume') ", "extra": "['organization', 'patient', 'test']"}