{"name": "tensorboard visualisation of fashion mnist ", "full_name": " h1 Tensorboard Visualisation of Fashion Items h3 What is an Embedding h3 Workflow h4 To do a basic embedding visualisation we need to follow the below workflow steps h4 Creating the embedding variable with all the images defined above under x test h2 How to run h2 Visualizing Embeddings h3 Projections h4 PCA Principal Component Analysis h4 t SNE T distributed stochastic neighbor embedding h4 Exploration h1 If you like this kernel greatly appreciate an UPVOTE ", "stargazers_count": 0, "forks_count": 0, "description": "Embeddings map objects to vectors applications can use similarity in vector space for instance Euclidean distance or the angle between vectors as a robust and flexible measure of object similarity. After a search the points matching the query are selected. The nearest neighbor points are also highlighted in the projection. Instead it s the overall patterns of location and distance between vectors that machine learning takes advantage of. The algorithm is non linear and adapts to the underlying data performing different transformations on different regions. A second feature of t SNE is a tuneable parameter perplexity which says loosely how to balance attention between local and global aspects of your data. append label int y_test index sprite_image i cols i 1 cols j rows j 1 rows x_test index. You define the horizontal axis for instance by giving text patterns for Left and Right. Tensorboard Visualisation of Fashion Items This Kernel is about Data Visualisation of high dimensional data to a lower dimension using Tensorboard with t SNE and PCA dimensionality reduction techniques and exploration of data points with multiple parameter tuning. The Embedding Projector has three panels Data panel on the top left where you can choose the run the embedding variable and data columns to color and label points by. Projections panel on the bottom left where you can choose the type of projection. png Custom A linear projection onto horizontal and vertical axes that you specify using labels in the data. The Embedding Projector finds all points whose label matches the Left pattern and computes the centroid of that set similarly for Right. The perplexity value has a complex effect on the resulting pictures. This tool can read embeddings from your model and render them in two or three dimensions. extend 28 28 Create the embedding Tensor from Xprojector. shape 0 sprite_image np. Getting the most from t SNE may mean analyzing multiple plots with different perplexities. Inspector panel on the right side where you can search for particular points and see a list of nearest neighbors. image_path sprite_image cmap gray plt. Epsilon is another parameter used to measure the learning rate The t SNE algorithm naturally expands dense clusters and contracts sparse ones evening out cluster sizes. tensor_name embedding_var. reshape 28 28 1 1 index 1 Create the metadata labels filewith open embedding. Source https distill. They train best on dense vectors where all values contribute to define an object. png ExplorationYou can explore visually by zooming rotating and panning using natural click and drag gestures. You should see this after navigating to the Projector Tab as shown below Visualizing EmbeddingsVisualising embeddings is a powerful technique It helps you understand what your algorithm learned and if this is what you expected it to learn. The parameter is in a sense a guess about the number of close neighbors each point has. Implementations can give unexpected behavior otherwise. Workflow To do a basic embedding visualisation we need to follow the below workflow steps Read the Fashion MNIST data and create an X image and Y label batch Create a Summary Writer Configure the projector Create the embedding Tensor from X Run the TF session and create a model check point Create the sprite image Create the metadata labels file Read the Fashion MNIST test data and create an X image and Y label batchFirst we will load the fashion mnist test data into a pandas dataframe and subsequently convert into a numpy array with datatype as float32Lets consider around 2500 images as part of the embeddingNow we will split our data into x_test for storing images and y_test for storing labels. Recognizing these clumps as random noise is an important part of reading t SNE plots. One common use is to find nearest neighbors. pub 2016 misread tsne https i. PCA Principal Component Analysis A linear deterministic algorithm principal component analysis that tries to capture as much of the data variability in as few dimensions as possible. FileWriter r C FashionMNIST logs Creating the embedding variable with all the images defined above under x_test embedding_var tf. To do so you can select points in multiple ways After clicking on a point its nearest neighbors are also selected. The individual dimensions in these vectors typically have no inherent meaning. The Embedding Projector provides three ways to reduce the dimensionality of a data set. Low perplexity levels often show cloud of points generated randomly which has no statistically interesting clusters clumps. ones cols sprite_dim rows sprite_dim index 0labels for i in range sprite_dim for j in range sprite_dim labels. Topological information off a t SNE plot can be read with views at multiple perplexities. gif t SNE T distributed stochastic neighbor embedding A nonlinear nondeterministic algorithm T distributed stochastic neighbor embedding that tries to preserve local neighborhoods in the data often at the expense of distorting global structure. Distances between well separated clusters in a t SNE plot may mean nothing. Import Libraries. ckpt Create the sprite imagerows 28cols 28label T shirt top Trouser Pullover Dress Coat Sandal Shirt Sneaker Bag Ankle boot sprite_dim int np. Enabling selection clicking on a point and dragging defines a selection sphere. If you like this kernel greatly appreciate an UPVOTE. png How to runWe saved our MNIST fashion images time to visualise it Follow the steps below Step 1 Go to command prompt and type the following C Users Pavan tensorboard logdir C FashionMNIST logs Step 2 Now open a browser and navigate to http 127. Variable x_test name fmnist_embedding Configure the projectorThis is the important part of embedding visualisation. 1 6006 note this can change depending on your computer setup. Hovering your mouse over a point will show any metadata for that point. format index label plt. It is sometimes useful to restrict the view to a subset of points and perform projections only on those points. You can choose whether to compute two or three dimensional projections. imshow sprite_image cmap gray plt. Session as sesh sesh. Since all images are ranging from 0 255 we will need to rescale all of them by dividing with 255 so that it reflects between 0 and 1. What is an Embedding Embedding is a way to map discrete objects images words etc. Clicking on a point causes the right pane to list the nearest neighbors along with distances to the current point. write Index tLabel n for index label in enumerate labels meta. The vertical axis is likewise computed from the centroids for points matching the Up and Down text patterns. ProjectionsA projection is a method for taking these high dimensional vections and project them into a lower dimensional space. global_variables_initializer saver tf. To store all the events in a log directory for tensorboard view we need to mention the path as below Create a Summary Writersummary_writer tf. ProjectorConfig embedding config. PCA tends to highlight large scale structure in the data but can distort local neighborhoods. The Embedding Projector computes the top 10 principal components from which you can choose two or three to view. metadata_path w as meta meta. join logdir metadata. visualize_embeddings summary_writer config Run the TF session and create a model check pointwith tf. Let us look more closer by zooming the picture as below https i. Rather density equalization happens by design and is a predictable feature of t SNE. Classifiers and neural networks more generally work on vectors of real numbers. For the algorithm to operate properly the perplexity really should be smaller than the number of points. The line passing through these two centroids defines the horizontal axis. show The above figure represents the grayscale fashion products representation in lower dimension. To be clear this is a different effect than the run of the mill fact that any dimensionality reduction technique will distort distances. You can also inspect nearest neighbor subsets. to high dimensional vectors. TensorBoard includes the Embedding Projector a tool that lets you interactively visualize embeddings. Its typically values are between 5 and 50. Here we specify what variable we want for the project what the metadata path is the names and classes and where to save the sprites. Embeddings are important for input to machine learning. ", "id": "pavansanagapati/tensorboard-visualisation-of-fashion-mnist", "size": "9483", "language": "python", "html_url": "https://www.kaggle.com/code/pavansanagapati/tensorboard-visualisation-of-fashion-mnist", "git_url": "https://www.kaggle.com/code/pavansanagapati/tensorboard-visualisation-of-fashion-mnist", "script": "IPython.core.display tensorflow.contrib.tensorboard.plugins projector input_data numpy Image matplotlib.pyplot tensorflow pandas tensorflow.examples.tutorials.mnist IPython.display HTML ", "entities": "(('perplexity value', 'resulting pictures'), 'have') (('vertical axis', 'text Up patterns'), 'compute') (('top where you', 'color points'), 'have') (('you', 'greatly UPVOTE'), 'appreciate') (('we', 'Summary Writersummary_writer'), 'store') (('label', 'similarly Right'), 'find') (('nearest neighbors', 'point'), 'select') (('parameter', 'close neighbors'), 'be') (('t SNE algorithm', 'cluster sizes'), 'be') (('vectors applications', 'object similarity'), 'map') (('Distances', 'nothing'), 'mean') (('ckpt', 'sprite'), 'create') (('ProjectionsA projection', 'lower dimensional space'), 'be') (('parameter tuneable which', 'data'), 'be') (('You', 'neighbor also nearest subsets'), 'inspect') (('One common use', 'nearest neighbors'), 'be') (('randomly which', 'clusters statistically interesting clumps'), 'show') (('density Rather equalization', 't predictable SNE'), 'happen') (('where values', 'object'), 'train') (('neighbor nearest points', 'also projection'), 'highlight') (('You', 'Left'), 'define') (('we', 'labels'), 'do') (('algorithm', 'points'), 'be') (('line', 'horizontal axis'), 'define') (('dimensionality reduction technique', 'distances'), 'be') (('Classifiers', 'real numbers'), 'work') (('typically values', '5'), 'be') (('algorithm', 'different regions'), 'be') (('You', 'two dimensional projections'), 'choose') (('Kernel', 'parameter multiple tuning'), 'visualisation') (('right pane', 'current point'), 'cause') (('Getting', 'different perplexities'), 'mean') (('individual dimensions', 'typically inherent meaning'), 'have') (('you', 'two'), 'compute') (('where you', 'projection'), 'leave') (('you', 'interactively embeddings'), 'include') (('this', 'computer setup'), 'note') (('us', 'https i.'), 'let') (('metadata path', 'where sprites'), 'specify') (('Embeddings', 'machine learning'), 'be') (('Embedding Embedding', 'words'), 'be') (('Topological information', 'multiple perplexities'), 'read') (('Hovering', 'point'), 'show') (('steps', '127'), 'png') (('Recognizing', 'SNE important t plots'), 'be') (('it', 'what'), 'see') (('PCA Principal Component algorithm component linear deterministic principal that', 'as few dimensions'), 'Analysis') (('fmnist_embedding Variable projectorThis', 'embedding important visualisation'), 'name') (('Embedding Projector', 'data set'), 'provide') (('visualize_embeddings summary_writer config', 'model check pointwith'), 'Run') (('Enabling', 'point'), 'define') (('j', 'j 1 rows x_test index'), 'int') (('above figure', 'lower dimension'), 'show') (('machine learning', 'advantage'), 's') (('It', 'only points'), 'be') (('that', 'global structure'), 'distribute') (('points', 'query'), 'select') (('tool', 'two dimensions'), 'read') (('PCA', 'local neighborhoods'), 'tend') (('Implementations', 'unexpected behavior'), 'give') (('it', '0'), 'need') (('where you', 'nearest neighbors'), 'panel') (('sprite_dim', 'range sprite_dim labels'), 'col') (('you', 'data'), 'projection') (('ExplorationYou', 'visually natural click'), 'explore') ", "extra": "['test', 'bag']"}