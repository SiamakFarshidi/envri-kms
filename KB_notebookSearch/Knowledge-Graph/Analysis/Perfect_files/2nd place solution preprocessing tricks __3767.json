{"name": "2nd place solution preprocessing tricks ", "full_name": " h1 Loading data and labeling batches h1 Calculating mean signal values for each number of opened channels h1 Extracting and analysing noise h1 Healing batch 7 h1 Creating new data Synthesis h2 Simulating unknown test group h2 More group 3 h2 But what happened with the noise h1 Augmented dataset h1 Inverting synthesis Sealing opened channels Channel reduction h1 Conclusion ", "stargazers_count": 0, "forks_count": 0, "description": "Noise is the only natural part of the data so it should be treated with caution. Inverting synthesis. Noise has a 50 Hz component which takes origin probably from electronic devices used for measurements in the laboratory. There is an operation inverse to composition. Sealing opened channels. The data has been successfully produced. Healing batch 7With extracted noise corrupted noise from 7th batch can be easily replaced by healthy noise from any of group 2 segments. SynthesisEvery single ion channel can be desribed as hidden Markov process. It is a brick of ion switching data. Predicted mean values of channels 6 10 will be of use in the section dedicated to data synthesis. Channel reductionAnd the last spell. This signal seems to be a superposition of several low open probability channels group 0. I found it in the last two days of the competition. I am not a native English speaker so if you found a mistake please let me know and I will correct it immediately. All one need to do is just sum up the labels from different segments and do the same trick with the noise. Note it is not my full solution just a preprocessing. In this way synthetic data is similar to the original data. Augmented datasetThe output files of this kernel are two. In one week I will disclose my repo on GitHub with full code so everybody can reproduce the results. I have no idea if some of these methods are of use in electrophysiology. Simulating unknown test groupLet us try to make a signal which is close in its properties to unknown signal group 5 from the test data. In this kernel I explain my preprocessing strategy for this competition. com c liverpool ion switching discussion 153991 862688. The post with all the details is here https www. It corresponds to a case when we have imaginary fictive channels acting in the opposite direction. Having understood the property of superposition we can produce more data using only existing training dataset. It is a powerful augmentation which can drastically diversify dataset what is essential for NN based models I used in the competition. But we need to consider the nature of the noise when doing any data augmentation. More group 3By the analogous reasoning group 3 is a superposition of two segments of group 4. ConclusionI hope you enjoyed this kernel. I decided not to remove 50 Hz component as it didn t affect NN based models CV score. Indeed the nature of the noise rest untouched when using superposition synthesis. There is much more data than it seems at first glance. It is the most complicated data in the competition so it is extremely important to augment it properly. Let us analyse it with Fourier transform. It allowed me to diversify the initial dataset without using any external data. Indeed now the distributions look very similar but classes 3 and 4 are still not represented. It is better then nothing though. But what happened with the noise I want to make sure that Fourier image of the noise has not changed after synthesis. Loading data and labeling batches Calculating mean signal values for each number of opened channelsHere i don t use corrupted data in train batch 7. But they could definitely help researchers who work with synthetic data as it reveals the way of how such kind of data can be leaked. The signal from many channels acting together is a superposition of such bricks. Let us create more group 3. Extracting and analysing noiseWith precalculated means we are able to extract noise from every segment of data. After studing the question of code sharing it is not recommended to share in the last week I decided not to share. csv with augmented dataset. ", "id": "stdereka/2nd-place-solution-preprocessing-tricks", "size": "3767", "language": "python", "html_url": "https://www.kaggle.com/code/stdereka/2nd-place-solution-preprocessing-tricks", "git_url": "https://www.kaggle.com/code/stdereka/2nd-place-solution-preprocessing-tricks", "script": "label_batches_and_groups itertools combinatorial_synthesis seaborn numpy matplotlib.pyplot append_dataset sklearn.linear_model combinations rescale_noise pandas distplot LinearRegression reduce_channels compose ", "entities": "(('me', 'external data'), 'allow') (('one', 'noise'), 'sum') (('it', 'caution'), 'be') (('much more it', 'first glance'), 'be') (('corrupted', 'group 2 segments'), 'replace') (('ConclusionI you', 'kernel'), 'hope') (('Indeed nature', 'superposition when synthesis'), 'untouched') (('it', 'didn models CV NN based score'), 'decide') (('Fourier image', 'synthesis'), 'happen') (('6 10', 'data synthesis'), 'be') (('I', 'competition'), 'explain') (('everybody', 'results'), 'disclose') (('reasoning analogous group', 'group'), '3by') (('i', 'train batch'), 'load') (('Indeed now distributions', 'very 3'), 'look') (('signal', 'probability channels several low open group'), 'seem') (('it', 'extremely it'), 'be') (('SynthesisEvery ion single channel', 'Markov hidden process'), 'desribe') (('which', 'test 5 data'), 'try') (('which', 'laboratory'), 'have') (('us', 'Fourier transform'), 'let') (('we', 'data when augmentation'), 'need') (('datasetThe output Augmented files', 'kernel'), 'be') (('how such kind', 'data'), 'help') (('I', 'it'), 'be') (('post', 'details'), 'be') (('we', 'data'), 'extract') (('some', 'electrophysiology'), 'have') (('I', 'competition'), 'find') (('when we', 'opposite direction'), 'correspond') (('we', 'training only existing dataset'), 'produce') (('I', 'last week'), 'recommend') (('signal', 'together such bricks'), 'be') (('synthetic data', 'original data'), 'be') (('I', 'competition'), 'be') ", "extra": "['test']"}