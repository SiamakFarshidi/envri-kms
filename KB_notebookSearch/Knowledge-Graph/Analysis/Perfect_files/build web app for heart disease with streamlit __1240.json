{"name": "build web app for heart disease with streamlit ", "full_name": " h3 Number of males and females whose heart data is stored in the dataset h2 Building a Correlation Matrix h2 Creating Features and Target variable h2 Splitting the data into train and test sets h2 Create a function for evaluating metrics h2 Fitting and Comparing different Models h2 Tuning KNN h1 Tuning Random Forest h1 Tuning XGBoost manually h1 Hyper parameter tuning SVC using GridSearchCV h1 Hyper parameter tuning KNN using GridSearchCV h1 Trying StackingCV Classifier h1 Looking at the evaluation metrics for our best model h1 Let s save our model using pickle h1 Import streamlit pyngrok and ngrok modules h1 Write a file for creating web app h1 Your web app is ready To deploy the web app on Heroku follow the following blog h2 https www geeksforgeeks org deploy your machine learning web app streamlit on heroku h1 The link to the final deployed web app is attached below h2 https healthy heart app herokuapp com h1 GitHub link ", "stargazers_count": 0, "forks_count": 0, "description": "org deploy your machine learning web app streamlit on heroku The link to the final deployed web app is attached below https healthy heart app. com GitHub link https github. Let us evaluate the model now. Number of males and females whose heart data is stored in the dataset Count of the number of males and females who have heart disease Building a Correlation Matrix Creating Features and Target variable Splitting the data into train and test sets Create a function for evaluating metrics Fitting and Comparing different Models Tuning KNN Tuning Random Forest Tuning XGBoost manually Hyper parameter tuning SVC using GridSearchCV Hyper parameter tuning KNN using GridSearchCV Trying StackingCV Classifier Looking at the evaluation metrics for our best model As we can see the StackingCV Classifier gives us an accuracy of 92. Let s save our model using pickle Import streamlit pyngrok and ngrok modules Write a file for creating web app Your web app is ready To deploy the web app on Heroku follow the following blog https www. com amlanmohanty1 Heart Disease Classification 1 to 20 Setup algorithm Loop through different neighbors values set neighbors value Fit the algorithm defining parameter range fitting the model for grid search convert each item to int type Load the saved model Pre processing user input front end elements of the web page display the front end aspect following lines create boxes in which user can enter data required to make prediction. ", "id": "amlanmohanty1/build-web-app-for-heart-disease-with-streamlit", "size": "1240", "language": "python", "html_url": "https://www.kaggle.com/code/amlanmohanty1/build-web-app-for-heart-disease-with-streamlit", "git_url": "https://www.kaggle.com/code/amlanmohanty1/build-web-app-for-heart-disease-with-streamlit", "script": "sklearn.metrics ngrok StackingCVClassifier KNeighborsClassifier recall_score precision_score MinMaxScaler preprocess seaborn numpy XGBClassifier pickle sklearn.ensemble streamlit sklearn.model_selection f1_score confusion_matrix RandomForestClassifier pyngrok matplotlib.pyplot evaluation pandas StandardScaler LogisticRegression accuracy_score mlxtend.classifier GridSearchCV sklearn.neighbors roc_auc_score sklearn.linear_model sklearn.preprocessing SVC sklearn.svm xgboost train_test_split ", "entities": "(('user', 'prediction'), 'com') (('StackingCV Classifier', '92'), 'store') (('link', 'heart https healthy app'), 'deploy') (('web app', 'blog https following www'), 'let') ", "extra": "['disease', 'test']"}