{"name": "build datasets 1 ", "full_name": " h1 Now create augmented trainset using shifted original noise h1 Now create trainset using custom FSM h1 Create Artificial Public Testset h1 Create Real Public Test ", "stargazers_count": 0, "forks_count": 0, "description": "zip index False compression zip Public Test Group sum 0 3A or maybe 4A 1 3B 2 5B 3 3A or maybe 4A 4 B 5 10B group 0 0. run for i in range 500000 tmp4 np. groupby group noise. run for i in range 500000 tmp2 np. group mapnoise i noise. group 3 open_channels tmp0 tmp1 tmp2 print. std Public Test Group sum 0 3A or maybe 4A 1 3B 2 5B 3 3A or maybe 4A 4 B 5 10B group 0 0. run for i in range 500000 train. copy if i 7 noise np. shape 0 500_000 train noise train signal train open_channels train. seed N 171 191 print. group 4 open_channels tmp0 print. run for i in range 500000 tmp7 np. run for i in range 500000 tmp1 tmp5 tmp6 tmp7 tmp8 tmp9 train. concatenate noise 1 noise Augment with inverse negative noise noise np. group i open_channels. run for i in range 500000 tmp6 np. run for i in range 500000 tmp0 tmp0 tmp1 tmp2 tmp3 tmp4 tmp5 np. run for i in range 500000 tmp3 np. copy oc train. group i signal oc noise py np. Now create augmented trainset using shifted original noise Now create trainset using custom FSM Create Artificial Public Testset Create Real Public Test linear algebra data processing CSV file I O e. read_csv train_clean_dropfreq. fsm StateMachineA tmp0 np. 333575 for N in range 1 print N np. fsm StateMachineB tmp0 np. group 0 open_channels tmp0 tmp1 tmp2 print. zip dtype time str signal float open_channels int compression zip train group np. group 2 open_channels tmp0 tmp1 tmp2 tmp3 tmp4 print. group 1 open_channels tmp0 tmp1 tmp2 print. group 5 0 print f1_score train. concatenate noise 142000 noise 177000 Pick just the good part of noise for group 7 noise np. group 5 open_channels tmp0 tmp1 mapnoise 0 3 8 0 2 4 for i in range 6 noise train. round 0 10 average macro train time signal open_channels. to_csv train PublicLB fsmAB artificial str N. run for i in range 500000 tmp8 np. choice noise 500000 replace False train. 267836 Train Group sum 0 A 1 A 2 B 3 3B 4 10B 5 5B 6 B 7 3B 8 5B 9 10B group 0 0. read_csv matplotlib notebook Filter just the good part of noise for group 7 Augment with inverse negative noise Next State Next State Now add original noise back to open_channels Filter just the good part of noise for group 7 Augment with inverse negative noise train pd. run for i in range 500000 tmp9 np. run for i in range 500000 tmp1 np. ", "id": "titericz/build-datasets-1", "size": "159", "language": "python", "html_url": "https://www.kaggle.com/code/titericz/build-datasets-1", "git_url": "https://www.kaggle.com/code/titericz/build-datasets-1", "script": "sklearn.metrics __init__ f1_score run numpy matplotlib.pyplot pandas StateMachineB StateMachineA ", "entities": "(('Next Next State', 'noise train inverse negative pd'), 'Filter') (('Train Group', '0'), '267836') (('std Public Test Group', '5 maybe 1 3B 2 5B 3 maybe 4 B 10B group'), 'sum') (('Public Test Group', '5 maybe 1 3B 2 5B 3 maybe 4 B 10B group'), 'zip') (('open_channels tmp0 group 5 tmp1', 'noise range 6 train'), 'mapnoise') ", "extra": "['test']"}