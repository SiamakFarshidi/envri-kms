{"name": "eddie s transfer learning notebook ", "full_name": " h1 Introduction of the investigation h2 Purposes h3 In this project I will be using the technique of transfer learning to implement a neural network for lung cancer image classfication h3 The data I will mainly be using is an image set with a total of 15000 images h3 I hope I can achieve the highest possible accuracy rate of classfication h3 I chose to use this image set because lung cancer is currently one of the most vital diseases in society and patients are more likely to be cured if the disease is spotted earlier h1 Setting up the environment h3 Import all the libraries that will be used during this investigation h3 Set up the file directory h3 Provide a general view of how the images we are going to use to train the model looks like h4 Get the validation and training data ready make sure the training data and validation data is generated with the same configuration h1 The Principle of Transfer Learning h3 Transfer learning is a machine learning method where a model developed for a certain task is reused as the starting point for other tasks h3 In the field of Deep Learning this technique is usually the method of which pre trained models are used as the starting point on computer vision and natural language processing tasks h3 By using the method of Transfer Learning we can save the total training time for the model a better performance of neural networks in most cases and requires less data h1 Choosing the model and training the model h3 In this project I will be using three different pre trained neural network to train the model and finding out which network fits the prediction best h3 The three neural networks I will be using are h3 1 VGG 16 2 InceptionV3 3 ResNet50 h3 Training model with VGG 16 h3 VGG 16 is a convolution neural set architecture It is considered as one of the most excellent computer vision model so far The unique thing about VGG 16 is that it only focus on having convolution layers of 3 3 filter with a stride 1 and always uses same padding and maxpool layer of 2 2 filter of stride 2 The 16 in VGG 16 refers to it has 16 layes that have weights h3 Fine Tuning is enabled in the fitting process This is a process which can take weights of a pre trained neural network and use it as initialization of a new model being trained on data from the same domain It can help speed up the training and overcome small dataset size h3 Plot the performance of the model the loss and the accuracy rate as the model is being trained h3 Load the best weights to the model h3 Record all the information about the actual classes of each images and check is the model produces the correct predictions h3 Calculate the accuracy rate of this model h3 We are using the accuracy score function here from sklearn This is a function that can help us check the accuracy rate of our predictions made by the model h3 Training model with InceptionV3 h3 InceptionV3 is a convolutional neural network architecture for assisting in image analysis and object detection It is the third edition of Google s Inception convolutional neural network h3 Compile the model with the same configuration as above h3 We use the adam optimizer here as it is straightforward to implement computationally efficient and only requires a little amount of memories h3 Set up the early stop and checkpoint to record the best weights during the training and to prevent over fitting and under fitting h4 Plot the performance of the model as it is being trained h3 Training model with ResNet 50 h3 ResNet 50 is a model that consists of 5 stages each with a convolution and identity block This model can help tackle the vanishing gradient problem using identity mapping Less extra paremeters are needed for training a large model compare to other pre trained models h1 Conclusion h3 After using three differnent pre trained model and compare the accuracy rate we can see that the ResNet 50 model has the highest accuracy rate for lung cancer classification with an accuracy rate of 99 h3 The final prediction accuracy rate for each model follows h3 VGG16 95 h3 InceptionV3 72 h3 ResNet 50 99 h3 In the process of doing this project and implementing those neural networks that I was not familiar with I have had some big challenges along the way One problem that I had was that the neural network configuration is not compatitable with the actual data which consequently causes the failure of fitting the model I finally solved this problem by changing the configuration of the model h3 There is still some areas that can be improved for example the accuracy rate for InceptionV3 I am not sure what is causing this low accuracy rate but I believe I will be able to figure it out ultimately ", "stargazers_count": 0, "forks_count": 0, "description": "The three neural networks I will be using are 1 VGG 16 2 InceptionV3 3 ResNet50 Training model with VGG 16 VGG 16 is a convolution neural set architecture. I finally solved this problem by changing the configuration of the model. I am not sure what is causing this low accuracy rate but I believe I will be able to figure it out ultimately. This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python Docker image https github. It can help speed up the training and overcome small dataset size. input directory For example running this by clicking run or pressing Shift Enter will list all files under the input directory You can write up to 20GB to the current directory kaggle working that gets preserved as output when you create a version using Save Run All You can also write temporary files to kaggle temp but they won t be saved outside of the current session Have a general view of how data looks like VGG 16 We add a dropout here to prevent overfitting ModelCheckpoint callback save best weights EarlyStopping initialize the best trained weights InceptionV3 This is to ensure the base won t be trained again We add a dropout here to prevent overfitting Fit the model with the same configuration as above ResNet50 This is to ensure the base won t be trained again We add a dropout here to prevent overfitting complile the model fit the model to the data with the same configuration plot the performance of this model Evaluate the result of the prediction. I hope I can achieve the highest possible accuracy rate of classfication I chose to use this image set because lung cancer is currently one of the most vital diseases in society and patients are more likely to be cured if the disease is spotted earlier. com kaggle docker python For example here s several helpful packages to load linear algebra data processing CSV file I O e. Plot the performance of the model the loss and the accuracy rate as the model is being trained Load the best weights to the model. By using the method of Transfer Learning we can save the total training time for the model a better performance of neural networks in most cases and requires less data. The final prediction accuracy rate for each model follows VGG16 95 InceptionV3 72 ResNet 50 99 In the process of doing this project and implementing those neural networks that I was not familiar with I have had some big challenges along the way. This model can help tackle the vanishing gradient problem using identity mapping. Less extra paremeters are needed for training a large model compare to other pre trained models. Fine Tuning is enabled in the fitting process. In the field of Deep Learning this technique is usually the method of which pre trained models are used as the starting point on computer vision and natural language processing tasks. This is a function that can help us check the accuracy rate of our predictions made by the model Training model with InceptionV3 InceptionV3 is a convolutional neural network architecture for assisting in image analysis and object detection. This is a process which can take weights of a pre trained neural network and use it as initialization of a new model being trained on data from the same domain. The unique thing about VGG 16 is that it only focus on having convolution layers of 3 3 filter with a stride 1 and always uses same padding and maxpool layer of 2 2 filter of stride 2. Introduction of the investigation Purposes In this project I will be using the technique of transfer learning to implement a neural network for lung cancer image classfication The data I will mainly be using is an image set with a total of 15000 images. It is considered as one of the most excellent computer vision model so far. Choosing the model and training the model In this project I will be using three different pre trained neural network to train the model and finding out which network fits the prediction best. Conclusion After using three differnent pre trained model and compare the accuracy rate we can see that the ResNet 50 model has the highest accuracy rate for lung cancer classification with an accuracy rate of 99. The 16 in VGG 16 refers to it has 16 layes that have weights. read_csv Input data files are available in the read only. One problem that I had was that the neural network configuration is not compatitable with the actual data which consequently causes the failure of fitting the model. It is the third edition of Google s Inception convolutional neural network Compile the model with the same configuration as above We use the adam optimizer here as it is straightforward to implement computationally efficient and only requires a little amount of memories Set up the early stop and checkpoint to record the best weights during the training and to prevent over fitting and under fitting Plot the performance of the model as it is being trained Training model with ResNet 50 ResNet 50 is a model that consists of 5 stages each with a convolution and identity block. Record all the information about the actual classes of each images and check is the model produces the correct predictions Calculate the accuracy rate of this model We are using the accuracy_score function here from sklearn. Setting up the environment Import all the libraries that will be used during this investigation Set up the file directory Provide a general view of how the images we are going to use to train the model looks like Get the validation and training data ready make sure the training data and validation data is generated with the same configuration The Principle of Transfer Learning Transfer learning is a machine learning method where a model developed for a certain task is reused as the starting point for other tasks. There is still some areas that can be improved for example the accuracy rate for InceptionV3. ", "id": "eddiegao/eddie-s-transfer-learning-notebook", "size": "4772", "language": "python", "html_url": "https://www.kaggle.com/code/eddiegao/eddie-s-transfer-learning-notebook", "git_url": "https://www.kaggle.com/code/eddiegao/eddie-s-transfer-learning-notebook", "script": "Flatten sklearn.metrics learntools.computer_vision.ex2 keras.callbacks tensorflow.keras.layers GlobalAveragePooling2D VGG16 tensorflow.keras.preprocessing.image EarlyStopping Dropout Sequential tensorflow.keras.models Adam PlotLossesCallback numpy tensorflow.keras.applications InceptionV3 models create_model optimizers ModelCheckpoint ImageDataGenerator matplotlib.pyplot binder Dense tensorflow ResNet50 pandas keras.applications.vgg16 keras.optimizers activations accuracy_score livelossplot.inputs.keras preprocess_input Model losses learntools.core keras tensorflow.keras.applications.resnet50 ", "entities": "(('Less extra paremeters', 'other pre trained models'), 'need') (('machine learning where model', 'other tasks'), 'import') (('We', 'here sklearn'), 'be') (('that', 'weights'), 'refer') (('I', 'way'), 'follow') (('that', 'each convolution block'), 'be') (('trained models', 'computer vision'), 'be') (('I', '15000 images'), 'introduction') (('we', 'less data'), 'save') (('us', 'detection'), 'be') (('It', 'computer vision most excellent model'), 'consider') (('accuracy model', 'model'), 'plot') (('It', 'dataset small size'), 'help') (('16 it', 'stride'), 'be') (('ResNet50 Training 1 16 2 3 model', 'VGG 16 VGG'), 'be') (('model', 'identity mapping'), 'help') (('which', 'same domain'), 'be') (('which', 'model'), 'be') (('model', 'prediction'), 'list') (('read_csv Input data files', 'read'), 'be') (('I', 'it'), 'be') (('still that', 'InceptionV3'), 'be') (('network', 'prediction'), 'choose') (('It', 'kaggle python Docker image https github'), 'come') (('ResNet 50 model', '99'), 'train') (('I', 'model'), 'solve') (('more disease', 'society'), 'hope') (('Fine Tuning', 'fitting process'), 'enable') ", "extra": "['biopsy of the greater curvature', 'disease', 'patient', 'lung', 'lung cancer']"}