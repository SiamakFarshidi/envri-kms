{"name": "panda concat tile pooling starter 0 79 lb ", "full_name": " h1 Description h1 Data h1 Model h1 Training ", "stargazers_count": 0, "forks_count": 0, "description": "So effective locating the areas of concern and zooming them in would be the key to reach high LB score. Since any spatial information is eliminated by the pooling layer the Concat Tile pooling approach is nearly identical to passing an entire image through the convolutional part excluding predictions for nearly empty regions which do not contribute to the final prediction and shuffle the remaining outputs into a square map of smaller size. Instead of passing an entire image as an input N tiles are selected from each image based on the number of tissue pixels see this kernel https www. ai and pure Pytorch code would be much simpler. I hope you would enjoy my kernel and please also check my submission kernel implementing the tile based approach. As a backbone I use Semi Weakly Supervised ImageNet pretrained ResNeXt50 model https github. png DataUse stratified KFold split. The outputs of the convolutional part is concatenated in a large single map for each image preceding pooling and FC head see image below. Training remove this cell if run locally number of tiles per image EXIF warning from TiffPlugin invert image for zero padding collate function to combine multiple images into one tensor x bs N x 3 x 128 x 128 x bs N x C x 4 x 4 concatenate the output for tiles into a single map x bs x C x N 4 x 4 x bs x n. Check this kernel https www. Therefore the mean value is computed as 1 val. com facebookresearch semi supervised ImageNet1K models which worked for me quite well in a number of previous competitions. In this kernel I propose an alternative approach based on Concatenate Tile pooling. The task of this competition is classification of images with cancer tissue. In my first trial I got 0. Below I provide just a basic kernel only illustrating this approach. However for this particular data such an approach is not very efficient because the aspect ratio and size of provided images are not consistent and vary in a wide range. DescriptionWelcome to Prostate cANcer graDe Assessment PANDA Challenge. The main challenge of this task is dealing with images of extremely high resolution and large areas of empty space. Moreover the input consists of large empty areas leading to inefficient use of GPU memory and GPU time. Since I use zero padding and background corresponds to 255 I invert images as 255 img when load them. It is specific for fast. In this competition I found a number of public kernels performing straightforward rescaling the input images to square. com iafoss panda 16x128x128 tiles data and passed independently through the convolutional part. 76 LB score top 2 at the moment and I believe it could be easily boosted to 0. com iafoss panda 16x128x128 tiles for image stats. As a result the input images are deformed to large extend in a not consistent manner uppon rescaling that limits the ability of the model to learn. The code below in the hidden cell creates ImageItemList capable of loading multiple tiles of an image. ModelThe code below implements Concat Tile pooling idea. com iafoss panda 16x128x128 tiles for description of data preparation and the corresponding dataset https www. ", "id": "iafoss/panda-concat-tile-pooling-starter-0-79-lb", "size": "2953", "language": "python", "html_url": "https://www.kaggle.com/code/iafoss/panda-concat-tile-pooling-starter-0-79-lb", "git_url": "https://www.kaggle.com/code/iafoss/panda-concat-tile-pooling-starter-0-79-lb", "script": "sklearn.metrics __init__ MImageItemList(ImageList) reconstruct show_xys cohen_kappa_score fastai.vision open_image csvlogger __repr__ forward MImage(ItemBase) to_one sklearn.model_selection confusion_matrix seed_everything KFold get_data Model(nn.Module) MImage_collate fastai.callbacks apply_tfms __len__ mish_activation SaveModelCallback get radam StratifiedKFold ", "entities": "(('I', 'square'), 'find') (('So locating', 'LB high score'), 'be') (('Moreover input', 'GPU memory'), 'consist') (('it', 'easily 0'), 'top') (('I', 'Semi ResNeXt50 model https Weakly Supervised ImageNet pretrained github'), 'use') (('main challenge', 'large empty space'), 'deal') (('which', 'smaller size'), 'be') (('bs', 'C'), 'remove') (('I', 'when them'), 'use') (('that', 'model'), 'deform') (('Therefore mean value', '1 val'), 'compute') (('I', 'Concatenate Tile pooling'), 'propose') (('Below I', 'only approach'), 'provide') (('N tiles', 'kernel https www'), 'of') (('you', 'tile based approach'), 'hope') (('code', 'image'), 'create') (('which', 'previous competitions'), 'supervise') (('outputs', 'pooling'), 'concatenate') (('aspect very ratio', 'wide range'), 'be') (('task', 'cancer tissue'), 'be') ", "extra": "[]"}