{"name": "deep dive in image preprocessing using opencv ", "full_name": " h1 Deep Dive in Image Pre processing Methods h3 Table of content h2 Learn Image Processing h3 What is Colorspace h3 What are the types of Colorspace h3 RGB COLOR SPACE h4 RGB Color Space h3 Converting RGB ColorSpace in HSL color Space h4 HSL Color Space h3 RGB to HSV Colorspace Convertion h4 HSV Color Space h2 Basic Geometric Transformations h3 Resizing h3 Using Fractions Like what is the percentage by which you want to resize the image I wanna resize the image by 50 percent from both height and width h3 Image Rotation h3 Image Croping h1 Thresholding h1 Applications h1 Methods h1 OpenCV Implimentation h1 Bluring and Smoothing h1 Intro h1 How it works h3 And this the result of blurring h3 This is how the normal image look like after being sherpen h4 Concept h2 cv2 filter2D h3 Making Kernels h3 How it works h4 Type of Filters h4 Arguments h2 cv2 blur h2 cv2 GaussianBlur h2 Median Blur h2 Color Histograms h2 How to create the normal Histogram h2 How to create a histogram for all color channels h2 how to create histogram for a masked portion an image h2 how to perform histogram equalization h3 Line Detection h3 References ", "stargazers_count": 0, "forks_count": 0, "description": "Blurring and smoothing is one of the important toolkits of your image processing toolbox. Arguments As arguments we are gonna pass 1. Color Histograms In the color histogram we visualize the distribution of pixel values in R G and B color channels. Fig1 Different type of ThresholdingBluring and SmoothingIntro This thing needs no explanation the title explains everything. Thus we create a desired binary image from a normal image. filter2D which will take our filter and apply that on the top of the image as I explained above that how a blurring and smoothing generally works. How to create a histogram for all color channels 3. Methods The general method of creating a thresholded image is like that we take an image then make that a grayscale image so that we can get the range of pixel values from 0 to 255 in the image if the pixel values are greater than the desired value generally it is called threshold value we replace those by 1 and pixels those are lesser than that desired value get replaced by 0 zero. And if the noise type is salt paper type then you will find using Median blurring very useful. So after we apply the Histogram equalizer that cumulative changes to linear step function. calcHist and passing different color channels as the input and rest of the things will be the same. Currently the minimum pixel value is 52 and the highest is 255. We can create an Gaussian kernel using cv2. com hrmello intro to image processing colorspaces3. As you can see the top of the cylinder is full of white and the bottom part is full black. blur what happens is that it takes the average of all the pixes of an image that belongs to the under of the filter and replace that value with the center pixel and keep doing that by sliding itself again and again. So what to use Mainly people use Gaussian Blurring for the first time if it doesn t work then they go for other methods mainly I try to follow this pattern. Rotated by 180 degree Croped Image Finding middle value of the distribution of the pixel value Function for Loading the image Function for displaying the image Creating a custom kernel as a filter for our bluring perpous TO GET FLOTING VALUES IF WE USE THAT FOR MULTIPLYING THE OTHER IMAGE THEN PIXEL VALUE WILL BE DECREASED OF OTHER IMAGE Loading image again Gaussian blur bluring the image but not removing noise from this picture. YUV Luminance blue luminance red luminance 5. Thresholding Normal Thresholding Adaptive Thresholding4. Zeroth first and second component of the tuple represents the amount of Red Green and Blue respectively. how to perform histogram equalization Histogram Equalization is a method of contrast adjustment based on the image s histogram. OpenCV Implimentation For implementing thresholding we use the builtin function called cv2. We need to use a grayscale image in order to apply thresholding on a normal image. But we can use Otsu s Binarization which does not take any threshold value to create one it just only needs the min and max pixel values. After you apply histogram equalization you will find the the min pixel value now got transformed to zero and the max got converted to 255. But the main problem in doing that is there are so many methods available in OpenCV for performing blurring and smoothing like Gaussion Blurring Median Bluring Bilateral Blurring Gamma Currection Using Builtin Kernels cv2. you can also use it for blurring too. As a result of the blurring you can see that the image has got so much blurred. How to create a normal Histogram 2. how to create histogram for a masked portion an image Say you have an image and you want the color histogram of a specific ROI region of Interest so to extract that ROI you have to cheate a mask and then you will do cv2. HSL Hue Saturation Lightness 3. And the real mathematics behind the Histogram equalization is just like that. HSV Hue Saturation Value 4. Concept So I am going to use a picture of a blue wall and then i will put some text on the top of that which will make use understand the intensity of the algos or how efficient they are. you can use it for Salt paper noise removing2. Type of Filters There are two types of filters 1. Fig1 RGB Color Space Converting RGB ColorSpace in HSL color Space HSL Color Space The general meaning of HSL is Hue Saturation and Lightness. desired depth we are gonna use 1 and this is the value you are gonna use often for which means keeping the input and output depth the same. So if want to check it out ckick Here Learn Image Processing What is Colorspace Color is a continuous phenomenon it means there is an infinite number of colors. By changing these parameters we can generate different colors. figure figsize 10 8 shape reduced by 50 you also can pass value like 0 1 1 etc. the actual hue we are looking for. Applications There are so many applications in computer vision one of the general appliactions are Segmentation Mask creation Edge Detection Line Detection etc. There are different ways of creating a thresholded image like Binary Inverted Binary Truncated To Zero To Zero Inverted Otsu s BinarizationLast one is pretty effective the Otsu s Binarization. we need to use this when we need to analyze the color distribution of an image. And I hope you guys know the concept behind histograms. calcHist now there are different arguments we need to pass in that function to get the distribution 1st arg the source image in the form of a list 2nd arg the number of chennel we need 3rd arg I am using any mask or not 4th arg upper limit of the pixel 5th arg range og the pixel How to create a histogram for all color channels We will be doing as the normal histograms mentioned above are made by using cv2. RGB Red Green Blue 2. blur Using user defined Kernels cv2. In technical terms a color model or color space is a specification of a 3 D coordinate system and a subspace within that system where each color is represented by a single point. FONT_HERSHEY_COMPLEX as my font type which has a kind of gap inside a letter wich is going to be blured if we use blurring on them. HPF High Pass Filter. HoughLinesP for doing that along with creating a mask through which we detect the edges using canny edge detector and then apply that o p in that Hough line prediction function. In this method the filter which is used is a Gaussian Filter which convolves around the image and do the multiplication and summation task as explained above. how to create a histogram for a masked portion an image 4. And this is the formula Fig3 Defining the Gaussian function based on the size of sigma standard deviation where x is the distance from the origin in the horizontal axis y is the distance from the origin in the vertical axis and \u03c3 is the standard deviation of the Gaussian distribution. But I am going to write about only the frequent ones RGB HSV and HSL. This is how a Gaussian kernel looks like. Analysis of the output 1. Saturation is how many hue you end up having and lightness is how dark or how bright the color is. After you get that you just have to follow the above process to get a color histogram and don t forget to pass mask the_mask_you_have_created. src input image2. This topic will be having three sub topics 1. Notice that we don t literally flatten out the histogram we only just focus on the cumulative linear. Deep Dive in Image Pre processing Methods Fig0 Photo by Jeremy Bishop on Unsplash Table of content 1. But there are way more different methods to create a threshold image but the basic intuition is the same as above. Some time for finding features or to remove noise we sometimes need to perform blurring and smoothing. You can visualize HSL in the form of a cylinder as shown in fig 2 a. People sometimes call this Average Blurring. GaussianBlur Gaussian blur is another type of blurring technique which helps to reduce Gaussian noise and create blur. com sanikamal image segmentation using color spacesIf there is any query please let me know. In this image the pixel values are are between 0 255 but we will not find any pixel values which are exactly 0 or 255 it does not have any image which is pure white or pure black. Median BlurSo how Median Blur is different from the other ones Actually in the median blur it takes the average of all pixels which are under the filter and then replace the central pixel with that value. Hue is the dominant color as perceived by as an observer Saturation is the amount of white light mixed with a hue and Value is the chromic notion of intensity lower the Value the color gets more similar to black and higher the value the color gets more similar to the color itself. blur In the case of cv2. It is not removing noise. Adaptive thresholding also does the same kind of thing just there are some more parameters for playing around implimented in the below cells using cv2. Kernel kernel that we want to use. filter2D Making Kernels How it works We use the function cv2. LPF Low Pass Filter and 2. READING THREE DIFFERENT IMAGES SHOWING THE IMAGE Notice we are only passing 2 in the number of color channel which reffers that here we are only interested about RED color channel as in the maskind image we only have green color not red so as output we will not have any high picks in the histogram Performing same thing without mask trying to plot histogram for only green color channel After applying histogram equalization. Check out the below image to understand different methods of thresholding. This is the kernel for blurring Fig1 Filter for blurring And this the result of blurring Fig2 After applying blurring Here is the website website which has a kind of visualizasion to understand how blurring and smoothing worksAs I said above that there different kernels for different perpous this is the kernel for shearpening the image Fig3 Filter for smoothing This is how the normal image look like after being sherpen Fig4 image after smoothing We will be using a customized which is consist of a bule brick wall image and a red text putted in itSo lets jump to the code so much of theory. Line Detection Now we will try to detect lines. And for Red and the Green chennel these two values are aproximately 80 210 and 140 210 respectively. getGaussianKernel. For the human image Output of it is kind of blurry. Fig1 Visualize a Gaussian FilterFig2 Methemetical form of Gaussian FilterThe pixel values are normally distributed at the middle pixel value is the highest and at the edges it is the lowest. CMYK Cyan Magenta Yellow Key RGB COLOR SPACE RGB Color Space RGB color space is one of the well known color space represented by Red Green and Blue coordinates of the 3 D coordinate system. medianBlur we pass the source image and kernel size kernel size must be odd and positive. https opencv python tutroals. But the human eye and perception are limited. Each component can take a value between 0 and 255 where the tuple 0 0 0 represents black and 255 255 255 represents white. But one the other hand is true that nothing is sure which one will help you to get your job done you have to keep trying different methods until you find your desired image except the in every method there are multiple parameters to tune which might give you better results. This helps us to understand which pixel values are more in number for each color channel. so we will simply use cv2. threshold which returns the threshold value and the thresholded image in the form of a tuple. Basic Geometric Transformations Image Translation Image Resizing Image Rotating Image cropping3. So to identify those colors we need a medium or representation of those colors and this representation of color is called color space. For the Blue Brick Image By looking at the output it is quite clear that it removes the edges and the gap inside each letter is also blended which makes clear that the o p image is a blurred image. It is also a cylindrical color model where the radius of that cylinder implies Saturation Vertical axis implies the Value and the angle represents the Hue. But in other methods we need to pass 1st arg as the gray image itself the 2nd arg as the threshold value usually the mean value of pixel values then 3rd arg as the max pixel value and as the last arg we pass the method using which we are going to do the thresholding. Fig3 HSV Color Space Basic Geometric Transformations Image Translation Image Resizing Image Rotating Image cropping Resizing Using Fractions Like what is the percentage by which you want to resize the image I wanna resize the image by 50 percent from both height and width Image Rotation Image Croping ThresholdingIf I try to explain thresholding in the simplest manner that will be it is a method of creating a binary image from a normal image. As you can see in the 2nd image with balloons. So notice again how the min and max values are equalized between 0 and 255 we also see less shade of gray. Fig2 HSL Color Space RGB to HSV Colorspace Convertion HSV Color Space The name HSV is coming from the three coordinates of the color model which are Hue Saturation and Value. As arguments we pass the image then we pass the kernel size and at the last we pass the standard deviation in the X direction and the standard deviation in the Y direction if the only std for X is given the std for Y is taken as equal as the std for X if it is not given or zero it is computed from the kernel size and kernel size should be positive and odd. In terms of creating a desired thresholded image we will be needing a threshold value and finding that is a trial and error process. Bluring and Smoothing Gaussian Blurring Median Blurring Using Builtin Kernels cv2. how to perform histogram equalizer How to create the normal Histogram To create a normal Histogram we need to use cv2. All around the cylinder will be different colors Like green yellow red etc. Color Histograms How to create a normal Histogram How to create a histogram for all color channels How to create a histogram for a masked portion an image How to perform histogram equalizer 6. But HPFs are the opposite of LPFs the help to find edges in an image. I also have discussed about different object detection techniques like Template Matching Corner Detection Harris Corner Detection Shi Tomasi Corner Detection Edge detection Contour Detection Furier Transform Face Detection with OpenCV Haar Cascade. If we apply the histogram equalization then it will reduce the color depth. FUNCTION TO LOAD DATA Resizing the image we are storing the data in the form of a list we are also storing the label in the form of a list Loading Sunflower Data THIS IS HOW TO CONVERT BGR COLOR SPACE TO RGB COLOR SPACE making R channel zero making G channel zero Finally having blue version of that image For Red color Channel For Green color channel HUE ZERO SATURATION ZERO LIGHTNESS ZERO plt. bitwise_and for getting that ROI. Line DetectionI will be discussing different Image preprocessing techniques that we can apply in different images. LPFs helps to blur an image by removing high frequency elements like noise edges. view fig 3 to 5 Fig3 before applying histogram equalizationFig4 After applying histogram equalizationFig5 Main difference We mainly use histogram equalization when we need to increase the contrast of the image. What are the types of Colorspace There are mainly five major color models out there. How it works So generally there will be a kernel kernels are nothing but array of numbers for perfoeming different kind of operations and we will be multyplying them with the normal image and taking the the sum of that and consider that as a pixel value. In more technical terms RGB describes a color as a tuple of three components. view fig1 to 2 Fig1 before applying histogram equalizationFig2 After applying histogram equalizationAgain now we have a image on the left hand side and it s coresponding histogram in red on the right the black line is nothing but the cumulative of the pixel values. Color Space RGB Color Space HSV color space HSL color space2. These are some fundamental theories that should be in mind forever CV aspirant. B there are also some filters that do blurring without removing edges of an image. This filter removes edges from an image for blurring purposes. Here you can see the blue channel is having two picks around the 150 and the 230 pixel values which means that the number of pixels which are in majority belongs to the pixel values near to 150 and 230. ", "id": "soumya9977/deep-dive-in-image-preprocessing-using-opencv", "size": "19652", "language": "python", "html_url": "https://www.kaggle.com/code/soumya9977/deep-dive-in-image-preprocessing-using-opencv", "git_url": "https://www.kaggle.com/code/soumya9977/deep-dive-in-image-preprocessing-using-opencv", "script": "load_img numpy matplotlib.pyplot make_train_data disp_img tqdm assign_label ", "entities": "(('\u03c3', 'standard Gaussian distribution'), 'be') (('which', 'so much theory'), 'be') (('it', 'pixel just only min values'), 'use') (('We', 'cv2'), 'create') (('topic', 'sub three topics'), 'have') (('it', 'edges'), 'visualize') (('that', 'itself'), 'be') (('you', 'input'), 'go') (('where color', 'single point'), 'be') (('value', '0 zero'), 'method') (('Deep Dive', 'content'), 'Pre') (('I', 'OpenCV Haar Cascade'), 'discuss') (('salt paper then you', 'Median'), 'find') (('basic intuition', 'threshold way more different image'), 'be') (('Color Histograms', 'histogram How equalizer'), 'create') (('general meaning', 'HSL'), 'Converting') (('we', 'thresholding'), 'need') (('then you', 'cv2'), 'create') (('which', 'tuple'), 'threshold') (('fundamental that', 'mind'), 'be') (('real mathematics', 'just that'), 'be') (('We', 'normal image'), 'need') (('max', '255'), 'find') (('representation', 'color'), 'call') (('RGB', 'three components'), 'describe') (('which', 'color model'), 'RGB') (('it', 'normal image'), 'crop') (('we', 'sometimes blurring'), 'need') (('continuous it', 'infinite colors'), 'so') (('we', 'source image'), 'pass') (('we', 'line prediction Hough function'), 'HoughLinesP') (('Green two values', 'Red'), 'be') (('Zeroth first component', 'Red Green'), 'represent') (('calcHist', 'things'), 'be') (('You', 'fig'), 'visualize') (('which', 'near 150'), 'see') (('color', 'more color'), 'be') (('mainly I', 'pattern'), 'go') (('filter', 'blurring purposes'), 'remove') (('how blurring', 'that'), 'filter2d') (('we', 'pixel value'), 'work') (('Thus we', 'normal image'), 'create') (('LPFs', 'noise edges'), 'help') (('image', 'blurring'), 'see') (('multiple which', 'better results'), 'be') (('G channel', 'Green color channel HUE ZERO'), 'function') (('when we', 'image'), 'need') (('is', 'letter'), 'be') (('pixel values', 'color channel'), 'help') (('you', '1 0 1 etc'), 'figsize') (('People', 'Average sometimes Blurring'), 'call') (('types', 'Colorspace'), 'be') (('main problem', 'Builtin Kernels cv2'), 'be') (('title', 'everything'), 'type') (('black line', 'pixel values'), 'view') (('color histogram', 'don mask'), 'get') (('which', 'blur'), 'be') (('CMYK Cyan Yellow RGB COLOR RGB Color Space RGB color space', 'D Blue 3 coordinate system'), 'Magenta') (('mask', 'histogram equalization'), 'read') (('how perform', 'histogram'), 'be') (('which', 'image'), 'be') (('Line Now we', 'lines'), 'detection') (('which', 'value'), 'Median') (('when we', 'image'), 'fig') (('you', 'Salt paper noise removing2'), 'use') (('how they', 'algos'), 'Concept') (('we', 'cv2'), 'perform') (('me', 'image com sanikamal color'), 'segmentation') (('Gaussian which', 'multiplication task'), 'be') (('PIXEL THEN VALUE', 'picture'), 'rotate') (('OpenCV we', 'builtin function'), 'implimentation') (('we', 'gray'), 'notice') (('HPFs', 'image'), 'be') (('we', 'them'), 'font_hershey_complex') (('we', 'only just cumulative linear'), 'flatten') (('that', 'threshold value'), 'in') (('We', 'cv2'), 'make') (('Inverted BinarizationLast one', 'pretty Binarization'), 'be') (('you guys', 'histograms'), 'hope') (('Segmentation Mask creation Edge Detection Line Detection', 'general appliactions'), 'application') (('Gaussian kernel', 'how'), 'be') (('255 0 255 255', '0'), 'take') (('we', 'different colors'), 'generate') (('Adaptive thresholding', 'cv2'), 'do') (('we', '1'), 'argument') (('then it', 'color depth'), 'reduce') (('B also that', 'image'), 'be') (('we', 'R G'), 'Histograms') (('Value', 'Hue'), 'be') (('it', 'kernel kernel size size'), 'pass') (('bottom part', 'white'), 'be') (('you', 'balloons'), 'see') (('normal histograms', 'above cv2'), 'be') (('we', 'different images'), 'discuss') (('image human Output', 'it'), 'be') (('I', 'only frequent ones'), 'go') (('Blurring', 'image processing toolbox'), 'be') (('So we', 'step function'), 'apply') ", "extra": "[]"}