{"name": "rsna str 3d stacking 3d plot segmentation ", "full_name": " h1 DICOM Processing and Segmentation in Python h2 Import Packages h3 Setting paths h2 Helper function h2 Save the loaded images in npy format h3 Displaying Images h3 Critiquing the Histogram h2 Displaying an Image Stack h2 Resampling h2 Segmentation h3 Single Slice Example At Each Step h3 A few observations h3 Apply Masks to All Slices h3 Acknowledgements h3 In the meantime check out my other ongoing works in this same competition ", "stargazers_count": 0, "forks_count": 0, "description": "Apply mask onto the original image to erase voxels outside of the lung fields. org wiki Hounsfield_scale The transformation is linear. Acknowledgements Guido Zuidhof https www. png In the meantime check out my other ongoing works in this same competition RSNA STR Pulmonary Embolism Dummy Sub https www. com redwankarimsony rsna str 3d stacking 3d plot segmentation edit run 42517982 RSNA STR DICOM GIF npy https www. Helper functionHere we make two helper functions. ResamplingAlthough we have each individual slices it is not immediately clear how thick each slice is. After the commit even the interactive 3d plot takes a huge time 12 mins with my 4Mbps internet to load. It takes less time but it is non interactive. SegmentationIf you are interested in chest CTs because you re interested in picking up lung cancers you re not alone. SliceThickness scan 0. Determine current pixel spacing spacing map float scan 0. The below code will Standardize the pixel value by subtracting the mean and dividing by the standard deviation Identify the proper threshold by creating 2 KMeans clusters comparing centered on soft tissue bone vs lung air. The voxel values in the images are raw. There is only a small bit of bone seen as a tiny sliver of height between 700 3000 This observation means that we will need to do significant preprocessing if we want to process lesions in the lung tissue because only a tiny bit of the voxels represent lung. Finally we will create segmentation masks that remove all voxel except for the lungs. That means you can t rotate and twist different axis for better view. If you want to see an static image of the 3D mesh plot use the function plt_3d. com redwankarimsony rsna str dicom gif npy RSNA STR Pulmonary Embolism EDA https www. Import Packages Setting pathsThen let s specify a specific DICOM study we can take a closer look. 0 mm slices and each voxel represents 0. If you need a refresher here s a quick list of a few useful ones sourced from Wikipedia. get_pixels_hu converts raw values into Houndsfeld units https en. colormap rgb 255 105 180 rgb 255 255 51 rgb 0 191 255 Fancy indexing verts faces to generate a collection of triangles ax. Displaying an Image StackWe don t have a lot of screen real estate so we ll be skipping every 3 slices to get a representative look at the study. Because air really only goes to 1000 so there must be some sort of artifact. Let s take a look at the actual images. The lung lesion is properly preserved in the ROI and it appears to work wel from lung bases all the way to the apices. com redwankarimsony ct scans dicom files windowing explained RSNA STR PE Gradient Sigmoid Windowing https www. Apply Masks to All SlicesThe single slice example seemed to work pretty well. com png middle 265 2655834_work in progress icon. Because a CT slice is typically reconstructed at 512 x 512 voxels each slice represents approximately 370 mm of data in length and width. Machine learning algorithms work a lot better when you can narrowly define what it is looking at. com redwankarimsony rsna str pulmonary embolism dummy sub CT Scans DICOM files Windowing Explained https www. com redwankarimsony rsna str pe gradient sigmoid windowing RSNA STR 3D Stacking 3D Plot Segmentation https www. Loop over the image files and store everything into a list. Single Slice Example At Each StepWe want to make sure the algorithm doesn t accidentally exclude the region of interest due to its soft tissue nature. Different labels are displayed in different colors After just the lungs are left we do another large dilation in order to fill in and out the lung mask one last dilation 10 10. load_scan will load all DICOM images from a folder into a list for manipulation. Tune the threshold in the following code block in order to get your desired part segmented. Downsides of using this mask appropach is you can miss hilar perihilar disease fairly easily. 7 350 previously default value plotly_3d v f Standardize the pixel values Find the average pixel value near the lungs to renormalize washed out images To improve threshold finding I m moving the underflow and overflow on the pixel spectrum Using Kmeans to separate foreground soft tissue bone and background lung air threshold the image First erode away the finer elements then dilate to include some of the pixels surrounding the lung. However the magic that occurs behind the scenes is no easy feat so let s explore some of that magic. Caution You can only see the interactive 3D plot after you commit the notebook in the kaggle notebook viewer. com hengloose a comprehensive starter guide to visualizing and analyzing dicom images in python 7a8430fcb7ed for his master class explanation on segmentation and 3d plotting. Therefore so long as you have a slope and an intercept you can rescale a voxel value to HU. I you really want to see an interactive 3D mesh plot just use the function plotly_3d and comment out plt_3d. Save the loaded images in npy format Displaying ImagesThe first thing we should do is to check to see whether the Houndsfeld Units are properly scaled and represented. Using Erosion and Dilation which has the net effect of removing tiny features like pulmonary vessels or noise Identify each distinct region as separate image labels think the magic wand in Photoshop Using bounding boxes for each image label to identify which ones represent lung and which ones represent every thing else Create the masks for lung fields. Howard Chen https www. Here in the following part I just have showed a 3D plot of the segmented bone just by using morphological analysis. Substance HU Air 1000 Lung 500 Fat 100 to 50 Water 0 Blood 30 to 70 Muscle 10 to 40 Liver 40 to 60 Bone 700 cancellous bone to 3000 cortical bone Let s now create a histogram of all the voxel data in the study. Fortunately this is in the DICOM header. In this quest we will be starting from raw DICOM images. Let s now apply the mask to all the slices in this CT and show a few examples. We will extract voxel data from DICOM into numpy arrays and then perform some low level operations to normalize and resample the data made possible using information in the DICOM headers. com gzuidhof for his excellent work on DICOM image processing. DICOM Processing and Segmentation in PythonDICOM is a pain in the neck. com redwankarimsony rsna str pulmonary embolism eda reload_ext signature matplotlib inline Print out the first 5 file names to verify we re in the right folder. Convert to int16 from sometimes int16 should be possible as values should always be low enough 32k Set outside of scan pixels to 1 The intercept is usually 1024 so air is approximately 0 Convert to Hounsfield units HU This is a good time to save the new data set to disk so we don t have to reprocess the stack every time. Both the rescale intercept and rescale slope are stored in the DICOM header at the time of image acquisition these values are scanner dependent so you will need external information. We don t want to accidentally clip the lung. Python has all the tools from pre packaged imaging process packages handling gigabytes of data at once to byte level operations on a single voxel. Critiquing the HistogramThe histogram suggests the following There is lots of air the reason why there are lot of values close to 1000 HU There is some lung denoted by the presence of values near 500 HU There s an abundance of soft tissue mostly muscle liver etc but there s also some fat. One way to do this is by creating different models for different parts of a chest CT. com author howard for his excellent implementation of segmentation Franklin Heng https medium. In order to display the CT in 3D isometric form which we will do below and also to compare between different scans it would be useful to ensure that each slice is resampled in 1x1x1 mm pixels and slices. For reference Substance HU Air 1000 Lung 500 Fat 100 to 50 Water 0 Blood 30 to 70 Muscle 10 to 40 Liver 40 to 60 Bone 700 cancellous bone to 3000 cortical bone Now if we have some values less than 1000 HU then we have something strange. So let s test this out on a single slice. As clinical radiologists we expect post processing even taking them for granted. For instance a convolutional network for lungs would perform better than a general purpose network for the whole chest. It also happens to be very helpful. Looks like things check out. Here we ll use the patient ID 6897fa9de148 from that dataset. Let s take a look at a chest CT stack from the first patient in the train. Therefore it is often useful to pre process the image data by auto detecting the boundaries surrounding a volume of interest. A few observationsIf we were to apply a machine learning algorithm to the image stack the algorithm would have a much easier time to identify a primary lung lesion. This would be a good time to save the processed data. PixelSpacing Make the colormap single color since the axes are positional not intensity. Processing raw DICOM with Python is a little like excavating a dinosaur you ll want to have a jackhammer to dig but also a pickaxe and even a toothbrush for the right situations. csv file given which has some slices that have Pulmonary Embolism PE. The remainder of the Quest is dedicated to visualizing the data in 1D by histogram 2D and 3D. HU s are useful because it is standardized across all CT scans regardless of the absolute number of photons the scanner detector captured. Using the metadata from the DICOM we can figure out the size of each voxel as the slice thickness. ", "id": "redwankarimsony/rsna-str-3d-stacking-3d-plot-segmentation", "size": "8828", "language": "python", "html_url": "https://www.kaggle.com/code/redwankarimsony/rsna-str-3d-stacking-3d-plot-segmentation", "git_url": "https://www.kaggle.com/code/redwankarimsony/rsna-str-3d-stacking-3d-plot-segmentation", "script": "glob skimage.transform resample plt_3d plotly.offline sklearn.cluster KMeans plot morphology iplot numpy download_plotlyjs plotly.graph_objs plotly skimage matplotlib.pyplot measure plotly_3d pandas resize get_pixels_hu make_lungmask tqdm __version__ sample_stack make_mesh init_notebook_mode air_removal_mask mpl_toolkits.mplot3d.art3d load_scan Poly3DCollection plotly.figure_factory ", "entities": "(('we', 'study'), 'display') (('get_pixels_hu', 'units Houndsfeld https'), 'convert') (('you', 'hilar perihilar disease'), 'be') (('remainder', 'histogram 2D'), 'dedicate') (('only tiny bit', 'lung'), 'be') (('str 3d', 'RSNA STR DICOM GIF npy https 42517982 www'), 'run') (('we', 'one last dilation'), 'display') (('we', 'DICOM raw images'), 'start') (('that', 'lungs'), 'create') (('air', 'so artifact'), 'go') (('slice', 'mm pixels'), 'be') (('We', 'accidentally lung'), 'don') (('so we', 'don stack'), 'be') (('So s', 'single slice'), 'let') (('com redwankarimsony str embolism dummy sub CT pulmonary Scans', 'Windowing Explained https www'), 'rsna') (('you', 'also even right situations'), 'be') (('scanner detector', 'photons'), 'be') (('ones', 'lung fields'), 'think') (('algorithm', 'lung primary lesion'), 'be') (('mesh really interactive 3D plot', 'plt_3d'), 'want') (('com redwankarimsony ct scans', 'RSNA STR PE Gradient Sigmoid Windowing https www'), 'dicom') (('I', 'just morphological analysis'), 'show') (('then we', 'something'), 'have') (('axes', 'colormap single color'), 'make') (('that', 'Pulmonary Embolism PE'), 'file') (('DICOM Processing', 'neck'), 'be') (('auto boundaries', 'interest'), 'be') (('we', 'closer look'), 'Setting') (('static image', 'function'), 'want') (('we', 'right folder'), 'Print') (('load_scan', 'manipulation'), 'load') (('com redwankarimsony rsna str dicom gif', 'RSNA Embolism EDA https STR Pulmonary www'), 'npy') (('it', 'way apices'), 'preserve') (('scanner you', 'external information'), 'intercept') (('s', 'study'), 'Lung') (('you', 'HU'), 'long') (('This', 'good processed data'), 'be') (('One way', 'chest CT'), 'be') (('convolutional network', 'whole chest'), 'perform') (('slice', 'length'), 'represent') (('255 Fancy indexing 255 105 180 255 51 rgb 0 191 255 verts', 'triangles ax'), 'rgb') (('it', 'less time'), 'take') (('Python', 'single voxel'), 'have') (('you', 'Wikipedia'), 's') (('we', 'slice thickness'), 'figure') (('s', 'train'), 'let') (('algorithm doesn', 'tissue soft nature'), 'Example') (('s', 'a few examples'), 'let') (('immediately how slice', 'individual slices'), 'have') (('Helper functionHere we', 'helper two functions'), 'make') (('com author', 'segmentation Franklin Heng https medium'), 'howard') (('Houndsfeld Units', 'npy format'), 'be') (('you', 'better view'), 'mean') (('desired part', 'order'), 'tune') (('below code', 'lung air'), 'standardize') (('First away finer elements', 'lung'), 'plotly_3d') (('4Mbps internet', '12 mins'), 'take') (('following', 'soft tissue'), 'suggest') (('post processing', 'even them'), 'expect') (('easy so s', 'magic'), 'be') (('We', 'DICOM headers'), 'extract') (('Here we', 'dataset'), 'use') (('com png', 'progress icon'), 'middle') (('you', 'lung cancers'), 'be') (('it', 'narrowly what'), 'work') (('you', 'notebook kaggle viewer'), 'caution') ", "extra": "['disease', 'patient', 'test', 'lung', 'lung cancer']"}