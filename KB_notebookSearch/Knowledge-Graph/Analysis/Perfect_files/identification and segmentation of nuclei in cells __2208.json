{"name": "identification and segmentation of nuclei in cells ", "full_name": " ", "stargazers_count": 0, "forks_count": 0, "description": "com keegil keras u net starter lb 0 277 notebook and https www. the predicted segmentation mask for X_train is most similar to the provided solution Y_test. Below is an implementation of an OpenCV image segmentation task using the same images of nuclei in cells. Likewise a growing body of literature suggests that there is some connection between the shape of the nucleus and human disease states such as cancer and aging. com kmader nuclei overview to submission notebook and https www. 2009 Link 3 https www. gov pubmed 26940517 Step 1 Import Libraries Step 2 Explore Data Image segmentation can easily be performed via the use of the Python library OpenCV but we want to use deep learning to develop an even more accurate result. Identification and Segmentation of Nuclei From Images of Cells A Deep Learning Approach The nucleus is an organelle present within all eukaryotic cells including human cells. Abberant nuclear shape can be used to identify cancer cells e. pap smear tests and the diagnosis of cervical cancer. Remember to enable GPU Otsu s thresholding after Gaussian filtering Plot Here Set some parameters Get train and test IDs Get and resize train images and masks Get and resize test images try to add loss to see the loss learning curve summarize history for loss Define IoU metric RLE encoding for submission use dilations to get a slightly larger field of view the final processing Threshold predictions Perform a sanity check on some random training samples Perform a sanity check on some random validation samples Build U Net model Fit model Submit Results for OpenCV Approach Submit Results for OpenCV Approach Submit Results for Deep Learning Approaches Create list of upsampled test masks Create submission DataFrame. Methods for assessing nuclear size and shape typically involve identifying the nucleus via traditional image segmentation approaches. For more information about the relationship between nuclear shape and human disease please refer to the following resources Link 1 https www. Step 3 Load Data Step 4 Visualize Training Data Step 5 Define Helper Functions Step 6 Evaluate Convolutional Network Step 7 Display Result and Compare to Training Data Step 8 Evaluate Convolutional Network with U Net Architecture Step 9 Display Result and Compare to Training Data The results using the U Net convolutional network are most accurate i. Step 10 Save and Submit Results Credit Many functions are adaptations from https www. gov pubmed 15343274 Link 2 Webster M. com gaborvecsei basic pure computer vision segmentation lb 0 229. As such the quantitative assessment of nuclear size and shape has important biomedical applications. Here we demonstrate a deep learning approach for the identification and segmentation of nuclei from images of cells. ", "id": "paultimothymooney/identification-and-segmentation-of-nuclei-in-cells", "size": "2208", "language": "python", "html_url": "https://www.kaggle.com/code/paultimothymooney/identification-and-segmentation-of-nuclei-in-cells", "git_url": "https://www.kaggle.com/code/paultimothymooney/identification-and-segmentation-of-nuclei-in-cells", "script": "Flatten EarlyStopping Dropout plot_learning_curve itertools dice_coef_loss os.path ReduceLROnPlateau sklearn.model_selection keras.layers.convolutional Activation dice_coef Callback load_model plotKerasLearningCurve threshold backend as K train_test_split skimage.io UNET keras.preprocessing.image MetricsCheckpoint(Callback) keras.layers.core mean_iou chain on_epoch_end callbacks numpy Input ModelCheckpoint join ImageDataGenerator label tensorflow keras.utils pandas resize imshow BatchNormalization rle_encoding Model keras.models skimage.transform keras.callbacks skimage.morphology imread Conv2D Conv2DTranspose apply_morphology openCVdemo saveResults concatenate MaxPooling2D backend keras.layers.pooling keras.utils.vis_utils __init__ keras.layers plotPredictions Sequential models initializers imread_collection matplotlib.pyplot Dense Lambda tqdm to_categorical plot_model plotTrainData SIMPLE UpSampling2D prob_to_rles layers keras concatenate_images keras.layers.merge ", "entities": "(('Likewise growing body', 'such cancer'), 'suggest') (('Abberant nuclear shape', 'cancer cells e.'), 'use') (('segmentation predicted mask', 'most provided solution'), 'be') (('results', 'U Net convolutional network'), 'Result') (('Here we', 'cells'), 'demonstrate') (('we', 'even more accurate result'), 'pubmed') (('nucleus', 'human cells'), 'identification') (('quantitative assessment', 'important biomedical applications'), 'have') (('Threshold final processing predictions', 'test masks Create submission upsampled DataFrame'), 'remember') (('Results Step 10 Save Many functions', 'https www'), 'Credit') (('Methods', 'image segmentation traditional approaches'), 'involve') ", "extra": "['biopsy of the greater curvature', 'disease', 'test', 'cervical cancer', 'diagnosis']"}