{"name": "fast ai v3 lesson 1 ", "full_name": " h1 Lesson 1 What s your pet h2 Looking at the data h2 Training resnet34 h2 Results h2 Unfreezing fine tuning and learning rates h2 Training resnet50 h2 Other data formats ", "stargazers_count": 0, "forks_count": 0, "description": "Furthermore when we plot the confusion matrix we can see that the distribution is heavily skewed the model makes the same mistakes over and over again but it rarely confuses other categories. We will use a convolutional neural network http cs231n. The fastai library provides many useful functions that enable us to quickly and easily build neural networks and train our models. In this case the mistakes look reasonable none of the mistakes seems obviously naive. Lesson 1 What s your petIn this lesson we will build our first image classifier from scratch and see if we can achieve world class results. Unfreezing fine tuning and learning ratesSince our model is working as we expect it to we will unfreeze our model and train some more. uk vgg publications 2012 parkhi12a parkhi12a. uk vgg data pets by O. from_name_re gets the labels from the filenames using a regular expression https docs. For the moment you need to know that we are building a model which will take images as input and will output the predicted probability for each of the categories in this case it will have 37 outputs. If this happens click Kernel Restart uncomment the 2nd line below to use a smaller batch size you ll learn all about what this means during the course and try again. We will first see which were the categories that the model most confused with one another. Looking at the dataWe are going to use the Oxford IIIT Pet Dataset http www. Other data formats bs 16 uncomment this line if you run out of memory even after clicking Kernel Restart. The first thing we do when we approach a problem is to take a look at the data. To help it along let s us use larger images too since that way the network can see more detail. We are going to work with the fastai V1 library http www. ai course For more information you can visit https www. We import all the necessary packages. That s a pretty accurate model Training resnet50Now we will train in the same way as before but with one caveat instead of using resnet34 as our backbone we will use resnet50 resnet34 is a 34 layer residual network while resnet50 has 50 layers. Fortunately the fastai library has a handy function made exactly for this ImageDataBunch. Basically resnet50 usually performs better because it is a deeper network with more parameters. Let s see if we can achieve a higher performance here. If you like this Kernel enough to fork it please remember to upvote as well This is the first notebook from version 3 of the fast. 21 using a complex model that was specific to pet detection with separate Image Head and Body models for the pet photos. We _always_ need to understand very well what the problem is and what the data looks like before we can figure out how to solve it. Taking a look at the data means understanding how the data directories are structured what the labels are and what some sample images look like. We will train for 4 epochs 4 cycles through all our data. This is an indicator that our classifier is working correctly. It s astonishing that it s possible to recognize pet breeds so accurately Let s see if full fine tuning helps If it doesn t you can always go back to your previous model. It will be explained later in the course and you can learn the details in the resnet paper https arxiv. Training resnet34Now we will start training our model. ResultsLet s see what results we have got. We reduce the batch size a bit since otherwise this larger network will require more GPU memory. io convolutional networks backbone and a fully connected head with a single hidden layer as a classifier. 0 https hackernoon. Let s dive in Every notebook starts with the following three lines they ensure that any edits to libraries you make are reloaded here automatically and also that any charts or images displayed are shown in this notebook. We will try to see if what the model predicted was reasonable or not. Our model will need to learn to differentiate between these 37 distinct categories. pdf which features 12 cat breeds and 25 dogs breeds. Don t know what these things mean Not to worry we will dive deeper in the coming lessons. If you re using a computer with an unusually small GPU you may get an out of memory error when running this notebook. We will need to extract them to be able to classify the images into the correct categories. This suggests that it just finds it difficult to distinguish some specific categories between each other this is normal behaviour. The main difference between the handling of image classification datasets is the way labels are stored. ai 2018 10 02 fastai ai which sits on top of Pytorch 1. According to their paper the best accuracy they could get in 2012 was 59. com pytorch 1 0 468332ba5163. In this particular dataset labels are stored in the filenames themselves. Let s see how accurate we can be using deep learning We are going to use the untar_data function to which we must pass a URL as an argument and which will download and extract the data. ", "id": "hortonhearsafoo/fast-ai-v3-lesson-1", "size": "5145", "language": "python", "html_url": "https://www.kaggle.com/code/hortonhearsafoo/fast-ai-v3-lesson-1", "git_url": "https://www.kaggle.com/code/hortonhearsafoo/fast-ai-v3-lesson-1", "script": "fastai.vision fastai ", "entities": "(('fastai Fortunately library', 'exactly ImageDataBunch'), 'have') (('bit otherwise larger network', 'GPU more memory'), 'reduce') (('we', 'higher performance'), 'let') (('you', 'when notebook'), 'get') (('we', 'deeper coming lessons'), 'know') (('they', '2012'), 'be') (('We', 'correct categories'), 'need') (('this', 'other'), 'suggest') (('labels', 'image classification datasets'), 'be') (('we', 'more'), 'work') (('model', '37 distinct categories'), 'need') (('which', 'data'), 'let') (('Looking', 'www'), 'go') (('network', 'more detail'), 'let') (('model', 'most one'), 'see') (('predicted', 'what'), 'try') (('sample images', 'what'), 'mean') (('we', 'results'), 'see') (('that', 'models'), 'provide') (('it', '37 outputs'), 'need') (('that', 'Body pet photos'), '21') (('usually better it', 'deeper more parameters'), 'perform') (('We', 'data'), 'train') (('you', 'Kernel even Restart'), 'bs') (('resnet34Now we', 'model'), 'start') (('displayed', 'notebook'), 'let') (('when we', 'data'), 'be') (('you', 'https www'), 'ai') (('this', 'course'), 'click') (('We', 'www'), 'go') (('resnet50 layer 34 residual resnet50', '50 layers'), 's') (('which', 'cat 12 breeds'), 'pdf') (('as well This', '3 fast'), 'remember') (('we', 'how it'), '_') (('from_name_re', 'expression https regular docs'), 'get') (('mistakes', 'reasonable mistakes'), 'look') (('fastai 2018 10 02 which', 'Pytorch'), 'ai') (('over it', 'rarely other categories'), 'see') (('you', 'always back previous model'), 'astonish') (('dataset particular labels', 'filenames'), 'store') (('you', 'resnet paper https arxiv'), 'explain') (('we', 'world class results'), 'Lesson') (('We', 'neural convolutional network'), 'use') ", "extra": "[]"}