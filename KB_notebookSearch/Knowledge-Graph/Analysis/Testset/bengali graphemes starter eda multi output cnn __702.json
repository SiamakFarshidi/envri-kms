{"name": "bengali graphemes starter eda multi output cnn ", "full_name": " h2 Exploratory Data Analysis h3 Number of unique values h3 Most used top 10 Grapheme Roots in training set h3 Least used 10 Grapheme Roots in training set h3 Top 5 Vowel Diacritic in taining data h3 Top 5 Consonant Diacritic in training data h2 Basic Model h3 Training loop ", "stargazers_count": 0, "forks_count": 0, "description": "This won t perform any augmentations Fit the model Delete to reduce memory usage model predictions placeholder row_id place holder. com kaggle docker python For example here s several helpful packages to load in linear algebra data processing CSV file I O e. Number of unique values Most used top 10 Grapheme Roots in training set Least used 10 Grapheme Roots in training set Top 5 Vowel Diacritic in taining data Top 5 Consonant Diacritic in training dataLet s apply some image processing credits this kernel https www. read_csv Input data files are available in the. Basic ModelLet s visualize the 3 tailed 3 output CNN by plotting it. com shawon10 bangla graphemes image processing deep cnn while resizing the images which will center crop the region of interest from the original images. Exploratory Data AnalysisExploratory data analysis EDA is an approach to analyzing data sets to summarize their main characteristics often with visual methods. Set a learning rate annealer. For example running this by clicking run or pressing Shift Enter will list all files under the input directory Any results you write to the current directory are saved as output. Learning rate will be half after 3 epochs if accuracy is not increased Visualize few samples of current training dataset CNN takes images in shape batch_size h w channels so reshape the images Divide the data into training and validation set Data augmentation for creating more training data set input mean to 0 over the dataset set each sample mean to 0 divide inputs by std of the dataset divide each input by its std apply ZCA whitening randomly rotate images in the range degrees 0 to 180 Randomly zoom image randomly shift images horizontally fraction of total width randomly shift images vertically fraction of total height randomly flip images randomly flip images This will just calculate parameters required to augment the given data. Training loop This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python docker image https github. ", "id": "kaushal2896/bengali-graphemes-starter-eda-multi-output-cnn", "size": "702", "language": "python", "html_url": "https://www.kaggle.com/code/kaushal2896/bengali-graphemes-starter-eda-multi-output-cnn", "git_url": "https://www.kaggle.com/code/kaushal2896/bengali-graphemes-starter-eda-multi-output-cnn", "script": "Flatten sklearn.metrics keras.preprocessing.image glob PIL.Image keras.layers keras.callbacks plot_acc tqdm.auto image_from_char train_test_split pyplot as plt MultiOutputDataGenerator(keras.preprocessing.image.ImageDataGenerator) Dropout MaxPool2D Adam clone_model map Conv2D pyplot numpy seaborn Input ReduceLROnPlateau get_dummies flow get_n sklearn.model_selection ImageDataGenerator confusion_matrix Dense tensorflow keras.utils pandas keras.optimizers resize tqdm BatchNormalization plot_model plot_loss Model matplotlib keras keras.models matplotlib.image ", "entities": "(('Number', 'image processing credits'), 'use') (('read_csv Input data files', 'the'), 'be') (('This', 'given data'), 'be') (('Exploratory Data AnalysisExploratory data analysis EDA', 'often visual methods'), 'be') (('you', 'output'), 'list') (('which', 'original images'), 'com') (('It', 'python docker image https kaggle github'), 'loop') (('Delete', 'memory usage model predictions placeholder'), 'win') (('3', 'it'), 'visualize') ", "extra": "", "label": "No_extra_files", "potential_description_queries": ["accuracy", "apply", "approach", "augment", "augmentation", "batch_size", "calculate", "center", "cnn", "crop", "current", "data", "dataset", "directory", "environment", "file", "flip", "half", "height", "image", "input", "interest", "kaggle", "kernel", "learning", "linear", "list", "load", "loop", "main", "mean", "memory", "model", "not", "output", "perform", "place", "plotting", "processing", "python", "range", "reduce", "region", "reshape", "rotate", "run", "running", "sample", "set", "several", "shape", "shift", "std", "summarize", "total", "training", "under", "unique", "usage", "validation", "visualize", "while", "width", "write", "zoom"], "potential_description_queries_len": 65, "potential_script_queries": ["flow", "glob", "map", "matplotlib", "numpy", "plt", "preprocessing", "pyplot", "resize", "seaborn", "tensorflow", "tqdm"], "potential_script_queries_len": 12, "potential_entities_queries": ["image", "model", "usage"], "potential_entities_queries_len": 3, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 76}