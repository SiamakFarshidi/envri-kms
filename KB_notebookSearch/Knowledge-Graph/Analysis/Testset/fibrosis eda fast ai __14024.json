{"name": "fibrosis eda fast ai ", "full_name": " h1 Pulmonary Fibrosis EDA h2 Another image competition goes by and this is rather interesting I will be interested to see how well people can create their own solutions or apply solutions from Pneumothorax Segmentation competition or if you really want to go down memory lane perhaps Data Science Bowl 2017 h2 What to expect in this kernel h2 Changelogs h1 Domain Knowledge h1 Train files h1 Train CSV exploration h1 Fast ai yay 3 h1 Preprocessing credits to Guido Zuidhof h1 Afterword a better preprocessing h2 Proposed aug Roman s hair augs h1 Building a baseline model h4 Explanation of model architecture h1 Metric learning h1 Todo h2 Thank you to Jeremy Howard ", "stargazers_count": 0, "forks_count": 0, "description": "And toy with the data again Now that it is possible for us to visualize the distribution it s actually possible for us to view it as a correlation matrix with Plot. However checking the filling in the lungs could perhaps serve us better. However I decided to use his preprocessed CT Scans in conjunction with his data loader for demo purposes. All this does is reduce the image to a smaller one without the unnecessary area at the bottom of the image. 14 Here are some key points Normal lung becoming scar tissue stifles oxygen diffusion. Preprocessing credits to Guido Zuidhof The functions and 3d plotting are from Guido s notebook https www. This gets the Hounsfield Units a measurement to which the CT scanners are delicately calibrated to and Guido calls it a measure of radiodensitySo for those of you unenlightened on the subject of radiodensity I looked it up quickly and to quote Wikipedia Radiodensity or radiopacity is opacity to the radio wave and X ray portion of the electromagnetic spectrum that is the relative inability of those kinds of electromagnetic radiation to pass through a particular material. It fixes up our files for a neat data loader in case we ever want to use it in our modeling pipelines. Now let s examine a couple of images at a glance All the images look fairly uniform how about taking into account randomness So some images are uniform but others are not. He s using Ben Graham s technique which won a first place in the diabetic retinopathy competition and if you want to look deeper in the preprocessing methods refer to the following link https www. Now here are the transforms random sized crop random flipping convert to tensor and normalization. Rather odd distribution over here too. Now we can turn to the methods of Neuron Engineer whose preprocessing methods have been enumerated on many times previously by other notebooks including mine on SIIM ISIC. We also can visualize convolution filters This is now our fully preprocessed image in full 3d glory. We might need to even this out so in that case I ll be taking the aid of Roman s microscope augmentation again another idea from SIIM ISIC competition over here https www. org wikipedia commons thumb 8 81 Pulmon_fibrosis. percentage of each per male and female. Changelogs Versions 1 6 Added structural baseline with fastai Versions 7 13 Messed with Turbo cmap Versions 14 47 Messed with DICOM viz and turbo cmap Versions 47 decided to add some more augs added the hair augs for future reference added and removed a Plotly lung visualization Version 51 Added these changelogs Version 52 Domain knowledge Domain Knowledge Pulmonary fibrosis is basically the scarring of the lungs to keep it as simple as possible. This is a very naive form of preprocessing as it primarily only segments a part of the lungs and leaves the rest up for grabs. The turbo colormap which I have copy pasted at the top of this notebook is shockingly bright but it exposes the amount of empty space that we have in the image. Now however we have normalized the images and found a pretty good colormap to use. This lung image looks very similar to the Data Science Bowl 2017 and it also looks like we have quite a bit of metadata coming with each DICOM file. Metric learning Todo start training more detailed EDA on image featuresAgain cheerio for now I ll be back with more fastai for you later. ai demo Simple image feats EDA Image based EDAand more to come. ai it becomes a lot easier for us to try and handle the data. So what this does is basically get the dicom files sort the files and get slice thickness and make it a file property or modify the SliceThickness attribute if the attribute exists. The background ought to be black instead of a weird psychedelic Neon Genesis Evangelion style but it works well. com gzuidhof full preprocessing tutorial and I ve tried to add clarity wherevr possible to whatever Guido has done here. We can work with something called systematic windowing which was previously used by radiologists with regards to the brain see the excellent notebook by Jemery Howard here https www. The second problem however is to see how we can improve on Roman s work. PNG Source Wikipedia This is a prime example of a lung affected with pulmonary fibrosis. Thank you to Jeremy Howard. org wikipedia commons thumb d d0 Medical_X Ray_imaging_WFH07_nevit. com jhoward don t see like a radiologist fastai and we can easily view the details of the lungs with systematic windowing. Could there be any underlying factor Train filesWith DICOM files we can retrieve the information as a numpy array with the DICOM attribute ds. A warning is due it is shockingly bright. Train CSV explorationLet s look at the CSV metadata now. Trying to decipher this I was able to gather that this emphysematous bulla is always an indicator of pulmonary fibrosis. Now we can isolate the lungs from the empty space. What we can do is visualize the DICOM files with a simple glob. This basically reads in a DICOM file fixes up its pixel representation attribute as I have displayed earlier with the previous one and it then returns a Tensor image. Now we re going to define a Model class so that we re able to train this CNN based model on our input images. Afterword a better preprocessing So yes we do need to preprocess a load of images considering the discrepancies between most of our train images especially with regards to the border which is either circular or nonexistent in most cases. However now we can convert a DICOM to a data frmae. This crops out the above neatly to leave just the lungs remaining right where we want them. So this is the complete merger of both Roman s and Ben s augmentations you can use this slightly blurred image for your modeling purposes and since it s been microscoped it would work pretty nicely. Well windowing works particularly well for computers because us humans require a lot more than simple black white and grey so we can try some sort of better windowing in a rainbow colormap. This function however has a rather unique purpose which is to display our DICOM files but with a twist it first displays the normal image and then it displays our windowed image scroll up to check what is windowing or go to the RSNA comp and look at a couple of notebooks. and now to shamelessly use an idea from Jeremy again and select the areas bright enough in the picture segment it Now create a simple mask for our image which albeit looks weird without the main image will serve certain purposes for us when it comes to modeling. jpg 120px Medical_X Ray_imaging_WFH07_nevit. Now we can view the distributions of image statistics one by one Not such a comfortable distribution to be working with. There s a huge difference between male and female over here in that the majority of males affected are former smokers and the majority of females affected have never smoked. e whether the person is a former smoker whether the person never smoked or whether the person currently smokes for perspective. ly of course I am bored of Seaborn p. I will be interested to see how well people can create their own solutions or apply solutions from Pneumothorax Segmentation competition or if you really want to go down memory lane perhaps Data Science Bowl 2017. So that takes care of our first problem. In layman s terms it s the ability of a certain kind of material to prevent radio waves or X rays to pass through them. So with these multiple types of pulmonary fibrosis it would be difficult to accurately find some underlying factors from the provided data that can easily summarize pulmonary fibrosis from a CT scan. So it seems like we have a rather lackadaisical distribution of Age in the data which is interesting to consider. The above basically just fixes up the pixel representation attribute of the DICOM file for us to use. jpg So the bulla is a noise all over the lungs. com ratthachat aptos eye preprocessing in diabetic retinopathyNow here we can use both Ben Graham s and Roman s techniques in conjunction with each other by performing the microscope augmentation technique and then adding a gaussian blur from Ben s work. Depthwise convolutions would be better suited for TensorFlow rather than PyTorch because of the way they are optimized in PyTorch rather than TF however I m solely writing this in PyTorch for learning purposes. As we can see here we have a lot of patients subdirectories with 100 counts being the norm for most of the patients. This also belongs to Jeremy Howard https www. Now however I won t write in detail about most of the common conventions there are forum posts on the subject but rather I ll write about what you should look for in your images that can provide an indicator. It s as effective a disease as it is due to the fact the wound healing is random and it s aberrant. Let s check the difference to see whether this method is actually feasible. However once again I learnt never to take an assumption for granted by reading through even more Misdiagnosis is common because while overall pulmonary fibrosis is not rare each individual type of pulmonary fibrosis is uncommon and the evaluation of patients with these diseases is complex and requires a multidisciplinary approach. The replacement of normal lung with scar tissue causes irreversible decrease in oxygen diffusion capacity and the resulting stiffness or decreased compliance makes pulmonary fibrosis a restrictive lung disease. I initially wanted to use Carlos Souza s excellent End to end model notebook s data generator https www. Normally adding a Gaussian blur would be much more difficult if not for fast. The pointwise convolution does away wit the groups and then processes the depthwise convolution to return an output. ai and the magic of its medical imaging module. Simple CNN based model This will be using a simple convolutional neural network based model w the assistance of PyTorch and I will also attempt clumsily to demonstrate each layer in detail using the torchsummary package. com twinkle0705 your starter notebook for osic we have the circular nonexistent border discrepancy. PNG 310px Pulmon_fibrosis. It is remarkable that we can extract this information from a DICOM. Explanation of model architectureFirst of all I already said that depthwise pointwise convolutions will be the main event in our model so as such allow me to present to you the formula for a simple convolution out N_i C_ out_j bias C_ out_j sum_ k 0 C_ in 1 weight C_ out_j k star input N_i k Now a depthwise convolution takes the groups parameter and it declares the output shape as the input shape multiplied by kernels per layer and defines it as the same as the input shape. Here s a more detailed lung with this bulla https upload. How about the duration HMMMMM. This will help our model to potentially generalize well what with the diversity we re adding to our trianing data and what not. ai yay 3 Now with Fast. Now that you have got over your eyes going kaboom let us proceed to a more shall I say medical view of things with the courtesy of fast. Beautiful Now we can attempt to segment the lungs. We also have a few patients breaching the 200s and making their way to the 400s or 500s. com c siim isic melanoma classification discussion 159476. We can invert the colors by adding a before it. This thresholds the image adds the connected components and within the filled segmented lungs attempts to create some bronchiole like structure. As you can see in the following image from the notebook Your Starter Notebook for OSIC https www. It seems like this method is a dead end for now. com jhoward cleaning the data for rapid prototyping fastai. What to expect in this kernel Fast. com carlossouza end to end model ct scans tabular for the data preprocessing and generation part. This is the Wikipedia description for the formation of the scar tissue that the scarring causes Pulmonary fibrosis involves gradual exchange of normal lung parenchyma with fibrotic tissue. Wikipedia describes it as HRCT of lung showing extensive fibrosis possibly from usual interstitial pneumonitis. As we have seen it is possible to toy with DICOM files. Pulmonary Fibrosis EDAAnother image competition goes by and this is rather interesting. We can try a gaussian blur to smooth out the bad parts here. However we must be careful with loss of information as not even a robot would be willing to waste its valuable time examining miniscule patches on digital DICOM images. 13 Pulmonary fibrosis is perpetuated by aberrant wound healing rather than chronic inflammation. The majority of people here are ex smokers approximately a third of people and as such we can explore further based on gender i. How about the target distribution in the data FVC So as of now let s take a look at smoking status of each affected person i. There is also a large emphysematous bulla. Proposed aug Roman s hair augs Building a baseline modelHere are some objectives of our baseline model that we will add to it Some basic transforms We can use some simple torchvision transforms w our model such as ToTensor and torchvision normalization. glob for the train and test set. So again we can treat this with Roman s microscope augmentation as in the SIIM ISIC competition the same thing existed. pixel_array from the file which is relatively simple to use. Now to move on to preprocessing. Here we can see the distinctions. The above is basically just our earlier image in Tensor format for a neural network to utilize. ", "id": "nxrprime/fibrosis-eda-fast-ai", "size": "14024", "language": "python", "html_url": "https://www.kaggle.com/code/nxrprime/fibrosis-eda-fast-ai", "git_url": "https://www.kaggle.com/code/nxrprime/fibrosis-eda-fast-ai", "script": "__init__ lllloss plotly.offline fastai2.medical.imaging fastai2.basics pydicom.dataset pyplot as plt distrib_summ largest_label_volume conv morphology Path random_split MetricOptimizer dicom_to_image forward torch.nn seaborn numpy pyplot mean plotly.graph_objs __getitem__ Microscope pathlib plotly.express RGBToPyCmap FileMetaDataset plotly.tools Model(nn.Module) skimage matplotlib.pyplot dcm_tfm FileDataset measure plot_3d pandas segment_lung_mask Dataset plotly.io show_dcm_info pad_square fix_pxrepr crop_mask get_pixels_hu AdvancedHairAugmentation __len__ fit torch.nn.functional CTTensorsDataset(torch.utils.data.Dataset) depthwise_separable_conv(nn.Module) matplotlib mpl_toolkits.mplot3d.art3d load_scan __call__ Poly3DCollection pydicom ", "entities": "(('we', 'trianing data'), 'help') (('right where we', 'them'), 'crop') (('So now s', 'person affected i.'), 'about') (('this', 'image'), 'reduce') (('you', 'Starter OSIC https www'), 'see') (('However I', 'demo purposes'), 'decide') (('resulting decreased pulmonary fibrosis', 'lung restrictive disease'), 'cause') (('We', '400s'), 'have') (('evaluation', 'multidisciplinary approach'), 'learn') (('Now we', 'one one'), 'view') (('others', 'account fairly how randomness'), 'let') (('DICOM underlying factor filesWith we', 'DICOM attribute ds'), 'be') (('pointwise convolution', 'output'), 'do') (('I', 'https www'), 'need') (('very naive it', 'grabs'), 'be') (('you', 'link https following www'), 'use') (('Here more detailed lung', 'bulla https upload'), 's') (('preprocessing methods', 'SIIM ISIC'), 'turn') (('However now we', 'data frmae'), 'convert') (('it', 'Tensor then image'), 'read') (('This', '3d now fully preprocessed full glory'), 'visualize') (('now I', 'you'), 'learn') (('we', 'image'), 'be') (('we', 'rainbow of better colormap'), 'work') (('it', 'DICOM files'), 'be') (('We', 'it'), 'invert') (('we', 'modeling pipelines'), 'fix') (('us', 'DICOM file'), 'fix') (('we', 'border circular nonexistent discrepancy'), 'twinkle0705') (('Train CSV explorationLet', 'CSV metadata'), 'look') (('Normally adding', 'Gaussian blur'), 'be') (('neural network', 'Tensor basically just earlier format'), 'be') (('emphysematous bulla', 'always pulmonary fibrosis'), 'be') (('over here majority', 'former females'), 'smoke') (('it', 'input shape'), 'Explanation') (('when it', 'us'), 'use') (('here we', 'work'), 'eye') (('even robot', 'DICOM digital images'), 'be') (('we', 'systematic windowing'), 'see') (('which', 'most cases'), 'preprocessing') (('do', 'simple glob'), 'be') (('it', 'modeling purposes'), 'be') (('Pulmonary fibrosis', 'fibrotic tissue'), 'be') (('however how we', 'work'), 'be') (('flipping Now here transforms random sized crop random convert', 'tensor'), 'be') (('Domain knowledge Domain Knowledge Pulmonary Version 52 fibrosis', 'it'), 'version') (('we', 'DICOM'), 'be') (('which', 'data'), 'seem') (('I', 'courtesy'), 'let') (('com jhoward', 'prototyping rapid fastai'), 'clean') (('functions', 'notebook https www'), 'preprocessing') (('actually us', 'Plot'), 'toy') (('Beautiful Now we', 'lungs'), 'attempt') (('lot us', 'data'), 'ai') (('This', 'Jeremy Howard https also www'), 'belong') (('So bulla', 'all lungs'), 'jpg') (('method', 'difference'), 'let') (('as such we', 'gender further i.'), 'be') (('it', 'fact'), 's') (('I', 'torchsummary package'), 'model') (('Now we', 'empty space'), 'isolate') (('image', 'structure'), 'threshold') (('Wikipedia', 'possibly usual interstitial pneumonitis'), 'describe') (('that', 'particular material'), 'get') (('that', 'CT scan'), 'be') (('I', 'model data generator https www'), 'want') (('We', 'torchvision such ToTensor normalization'), 'aug') (('that', 'indicator'), 'be') (('person', 'currently perspective'), 'e') (('bit', 'DICOM file'), 'look') (('we', 'input images'), 'go') (('same thing', 'SIIM ISIC competition'), 'exist') (('Guido', 'possible whatever'), 'preprocessing') (('data', 'end model'), 'end') (('Now however we', 'pretty good colormap'), 'normalize') (('which', 'file'), 'pixel_array') (('However checking', 'perhaps us'), 'serve') (('PNG Source This', 'pulmonary fibrosis'), 'Wikipedia') (('We', 'bad parts'), 'try') (('Here key Normal lung', 'scar oxygen diffusion'), '14') (('systematic which', 'https here www'), 'work') (('Pulmonary 13 fibrosis', 'rather chronic inflammation'), 'perpetuate') (('attribute', 'file SliceThickness attribute'), 'get') (('100 counts', 'patients'), 'have') (('what', 'notebooks'), 'have') (('based EDAand', 'image feats EDA Simple Image'), 'demo') (('you', 'memory really lane'), 'be') (('it', 'X them'), 's') (('rather however I', 'purposes'), 'suit') ", "extra": "['disease', 'gender', 'patient', 'test', 'diagnosis', 'lung']", "label": "Perfect_files", "potential_description_queries": ["account", "apply", "area", "array", "attribute", "aug", "augmentation", "background", "baseline", "basic", "bit", "border", "bottom", "brain", "care", "case", "check", "checking", "circular", "clarity", "classification", "cleaning", "comp", "competition", "convert", "convolution", "convolutional", "copy", "correlation", "could", "course", "create", "crop", "ct", "data", "define", "description", "detail", "dicom", "difference", "disease", "display", "distribution", "diversity", "duration", "empty", "end", "evaluation", "even", "event", "ex", "explore", "extract", "eye", "fact", "factor", "fastai", "file", "find", "following", "form", "format", "formula", "found", "function", "future", "gaussian", "gender", "generation", "generator", "glob", "handle", "help", "idea", "image", "improve", "including", "individual", "initially", "input", "kernel", "key", "knowledge", "layer", "learning", "leave", "let", "link", "load", "loader", "look", "lot", "lung", "magic", "main", "majority", "male", "mask", "matrix", "measure", "measurement", "medical", "melanoma", "memory", "metadata", "method", "microscope", "might", "model", "most", "move", "multiple", "naive", "need", "network", "neural", "noise", "norm", "normal", "normalized", "not", "notebook", "numpy", "opacity", "out", "output", "overall", "parameter", "part", "people", "per", "percentage", "performing", "person", "picture", "pixel", "place", "plotting", "preprocessing", "present", "prevent", "problem", "property", "provide", "purpose", "quote", "radiodensity", "random", "rare", "re", "reading", "reduce", "reference", "relative", "replacement", "representation", "rest", "return", "right", "second", "segment", "select", "shape", "similar", "slice", "smooth", "something", "sort", "space", "spectrum", "start", "style", "subject", "summarize", "tabular", "target", "technique", "tensor", "test", "those", "through", "thumb", "time", "tissue", "torchsummary", "torchvision", "train", "training", "try", "turn", "tutorial", "type", "uniform", "unique", "up", "view", "visualization", "visualize", "viz", "warning", "wave", "weight", "while", "work", "write"], "potential_description_queries_len": 205, "potential_script_queries": ["conv", "fit", "forward", "matplotlib", "mean", "medical", "morphology", "mplot3d", "nn", "pathlib", "plt", "pydicom", "pyplot", "seaborn", "skimage"], "potential_script_queries_len": 15, "potential_entities_queries": ["circular", "data", "following", "key", "naive"], "potential_entities_queries_len": 5, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 217}