{"name": "snmf stain seperation ", "full_name": " h1 Stain Seperation ", "stargazers_count": 0, "forks_count": 0, "description": "Stain SeperationThis is an implementation of stain seperation algorithm as described in STRUCTURE PRESERVED COLOR NORMALIZATION FOR HISTOLOGICAL IMAGES IEEE International Symposium on Biomedical Imaging 2015. Remove white pixel from stain color map. In my experience it did not improve the score much. htmlIt only works for RGB images with pixel intensity between 0 255. fr doc python html doc_spams003. Please note that to use the this code you have to install SPAMS python package from http spams devel. Still I hope you can make use of it. Otherwise change beer_lambert_transform function to use approperiate value. I used it to seperate stains into different channels and train my network based these new images. ", "id": "mrtzmilani/snmf-stain-seperation", "size": "705", "language": "python", "html_url": "https://www.kaggle.com/code/mrtzmilani/snmf-stain-seperation", "git_url": "https://www.kaggle.com/code/mrtzmilani/snmf-stain-seperation", "script": "stain_seperator skimage numpy trainDL color lasso est_w_h beer_lambert_transform spams ", "entities": "(('it', 'score'), 'improve') (('I', 'new images'), 'use') (('you', 'spams http devel'), 'note') (('Stain SeperationThis', 'Biomedical Imaging'), 'be') (('htmlIt', '0'), 'work') ", "extra": "", "label": "No_extra_files", "potential_description_queries": ["algorithm", "code", "color", "doc", "experience", "function", "hope", "http", "implementation", "improve", "intensity", "my", "network", "new", "not", "package", "pixel", "python", "score", "stain", "train"], "potential_description_queries_len": 21, "potential_script_queries": ["numpy", "skimage"], "potential_script_queries_len": 2, "potential_entities_queries": [], "potential_entities_queries_len": 0, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 22}