{"name": "rfcx hear and see the species with w b ", "full_name": " h2 Updates h2 Goal h2 References h2 Try It Out Now h2 How To Create a Tabular Tool Like This ", "stargazers_count": 0, "forks_count": 0, "description": "com github wandb examples blob master colabs dsviz W 26B_Dataset_and_Predictions_Viz_Demo. Table by Weight and Bias https wandb. Updates 05 Jun 2021 Table are logged into a run with bigger subset of datasets 31 May 2021 Table are logged into an artifact with small subset of datasets Goal Rainforest Connection Species Audio Detection competition https www. com c rfcx species audio detection overview contains thousands of audio clips with both species labels and their localized regions. ai guides data vis for its full functionalities. Table object into your run WANDB CONFIG define your prefered project and run name upload subset of data to artifact instead of all data avoid memory crash DATA CONFIG AUDIO PLOTTING CONFIG get audio waveplot get melspectrogram with localized box other metadata prevent figure being displayed in notebook read env var set in kernel this line is so noisy. filter by species_id 12 as shown https imgur. How To Create a Tabular Tool Like This Run the code below to reproduce the tabular tool using W B but before that there are a few steps you need to complete 1. png I Here I just highlighted key features that I think are useful. You could refer to the documentation https docs. ai site This notebook serves the followin purposes Offers an off the shelf tabular tool to explore the datasets Walk you through how to create an awesome tool like this using W B References W B Dataset and Predictions Viz Demo https colab. Create an environment variable wandb_api in this kernel for the API key. Apply a W B account and get your W B API key from User Settings https i. ai alexlauwh RFCX EDA v2 workspace user alexlauwh https wandb. group by species_id as shown https imgur. To do this navigate to the panel below by Add ons Secrets https imgur. com ayuraj for introducing W B to me and for all the amazing notebooks you have created Try It Out Now The tool is freely hosted in W B and you can check it out here https wandb. Utilising the recently released feature wandb. Create a project and a run in your account2. png aggregate samples for high level analysis e. ipynb Visualize Audio Data in W B https wandb. ai stacey cshanty reports Visualize Audio Data in W B Vmlldzo1NDMxMDk Additionally I would like to take this chance to thank ayuraj https www. png The code will do the following 1. png In addition to the above functions you can also filter sample by simple criteria e. ai alexlauwh RFCX EDA v2 workspace user alexlauwh The interface offers the following basic functions Hear the localized audio for each species include true positive false positive and each songtype Inspect its associated melspectrogram Identify the time frequency range from the melspectrogram associated to the speciesBelow is a snapshot of the interface https imgur. ", "id": "alexlwh/rfcx-hear-and-see-the-species-with-w-b", "size": "2829", "language": "python", "html_url": "https://www.kaggle.com/code/alexlwh/rfcx-hear-and-see-the-species-with-w-b", "git_url": "https://www.kaggle.com/code/alexlwh/rfcx-hear-and-see-the-species-with-w-b", "script": "__init__ UserSecretsClient Path matplotlib.patches numpy __getitem__ pathlib PIL fig_to_wandb_image typing Tuple render_waveplot Image matplotlib.pyplot RowGenerator pandas read_cut_audio __len__ tqdm render_melspec_with_box_plot kaggle_secrets ", "entities": "(('I', 'just key features'), 'png') (('you', 'criteria simple e.'), 'png') (('line', 'kernel'), 'object') (('You', 'documentation https docs'), 'refer') (('few you', '1'), 'create') (('W B API', 'User Settings https i.'), 'apply') (('you', 'https out here wandb'), 'ayuraj') (('Additionally I', 'ayuraj https www'), 'Data') (('followin purposes', 'W W Viz Demo https B References B Dataset colab'), 'site') (('time frequency range', 'interface https imgur'), 'ai') (('ai', 'full functionalities'), 'guide') (('31 May 2021 Table', 'datasets Goal Rainforest Connection Species Audio Detection competition https www'), 'log') (('com c rfcx species audio detection overview', 'species labels'), 'contain') ", "extra": "", "label": "No_extra_files", "potential_description_queries": ["account", "aggregate", "artifact", "associated", "audio", "basic", "blob", "box", "check", "code", "competition", "could", "create", "criteria", "data", "define", "detection", "environment", "explore", "feature", "figure", "filter", "following", "frequency", "group", "high", "include", "kernel", "key", "level", "line", "melspectrogram", "memory", "metadata", "name", "need", "notebook", "object", "out", "overview", "panel", "png", "positive", "prevent", "project", "range", "read", "run", "sample", "set", "site", "subset", "tabular", "think", "through", "time", "tool", "user", "v2", "var", "variable", "wandb"], "potential_description_queries_len": 62, "potential_script_queries": ["numpy", "pathlib", "tqdm"], "potential_script_queries_len": 3, "potential_entities_queries": ["competition", "frequency", "out"], "potential_entities_queries_len": 3, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 65}