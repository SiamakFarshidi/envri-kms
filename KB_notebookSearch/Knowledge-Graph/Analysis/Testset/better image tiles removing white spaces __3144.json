{"name": "better image tiles removing white spaces ", "full_name": " h1 Better image tiles Simple heuristic to suppress blank regions h1 Contents h2 Importing dependencies h2 Compute statistics h2 Select k best regions h2 Slide over the image h2 Show the results h3 Window size 200 stride 128 h3 Window size 128 stride 64 h2 Glue to one picture ", "stargazers_count": 0, "forks_count": 0, "description": "Slide over the image 5. Since we will only store the coordinates of the top left pixel we need a way to retrieve the k best regions hence the function hereafter. Window size 512 stride 256 Importing dependencies Compute statisticsFirst we need to write a function to compute the proportion of white pixels in the region. We will define the algorithm as follows Define a sliding window of a fixed size Slide the window with a certain stride For each region on which we slide compute the amount of white pixels Do this for all the regions in the image Select the top k results where k is a hyperparameter If you like those kinds of tutorials upvote this notebook It encourages me to keep writing some V5 I ll try to tackle pen markers now Stay tuned Contents 1. Select k best regionsThen we need a function to sort a list of tuples where one component of the tuple is the proportion of white pixels in the regions. A too small window size might harm the performance of the model since you might select only a tiny portion of the biopsy. com rftexas gradcam comparing resnet and se resnext is that as expected white regions don t convey any information hence the need to get rid of them. Show the results 5. It is a good trade off between generality having enough of the biopsy structure captured as well as enough details. Window size 200 stride 128 Window size 128 stride 64 Glue to one picture Note A 3 channel white pixel has RGB 255 255 255. Then select k regions with the lowest proportion of white. We are sorting in ascending order. The order does not matter actually. Slide over the imageThe main function the two while loops slide over the image the first one from top to bottom the second from left to right. This is why in this notebook we will code a simple heuristic to generate better images that have no more blank parts. I would say that a window size of around 200 is a good choice. Compute statistics 3. The smaller the window size the more precise but the longer. png attachment image. One of the key aspects that I show in my previous notebook https www. To counter this introducing a random choice might be worth trying. The algorithm is pretty simple actually having a sliding window moving across the images and calculating for each region the proporition of white color in the image. Window size 128 stride 64 5. Importing dependencies 2. Window size 200 stride 128 5. Then you select the region compute the statistics of that region sort the array and select the k best regions. Better image tiles Simple heuristic to suppress blank regions image. Show the resultsNow we will show some results. png As you might know for this competition it is critical to come up with an efficient way to pre process the images. Actually one need to zoom enough in the biopsy image to make sure there is as little white as possible. Select k best regions 4. ", "id": "rftexas/better-image-tiles-removing-white-spaces", "size": "3144", "language": "python", "html_url": "https://www.kaggle.com/code/rftexas/better-image-tiles-removing-white-spaces", "git_url": "https://www.kaggle.com/code/rftexas/better-image-tiles-removing-white-spaces", "script": "compute_statistics display_images display generate_patches seaborn numpy matplotlib.pyplot Image get_k_best_regions glue_to_one_picture pandas select_k_best_regions IPython.display ", "entities": "(('Actually one', 'biopsy image'), 'need') (('3 channel white pixel', '255 255 255'), 'size') (('loops', 'right'), 'slide') (('hence function', 'k best regions'), 'store') (('we', 'results'), 'show') (('window size', 'around 200'), 'say') (('it', 'images'), 'png') (('that', 'more blank parts'), 'be') (('Window Importing Compute 512 256 we', 'region'), 'size') (('statistics', 'k best regions'), 'select') (('you', 'biopsy'), 'harm') (('where one component', 'regions'), 'need') (('I', 'notebook https previous www'), 'one') (('It', 'biopsy structure'), 'be') (('regions don expected white t', 'them'), 'be') (('I', 'now tuned Contents'), 'define') (('pretty actually sliding window', 'image'), 'be') ", "extra": "['biopsy']", "label": "Perfect_files", "potential_description_queries": ["algorithm", "array", "best", "biopsy", "bottom", "channel", "choice", "code", "color", "competition", "compute", "define", "expected", "fixed", "function", "generate", "gradcam", "hyperparameter", "image", "key", "left", "list", "little", "main", "might", "model", "my", "need", "no", "not", "notebook", "order", "performance", "picture", "pixel", "png", "pre", "random", "region", "second", "select", "size", "slide", "sort", "store", "stride", "structure", "those", "try", "tuple", "up", "while", "window", "write", "zoom"], "potential_description_queries_len": 55, "potential_script_queries": ["display", "numpy", "seaborn"], "potential_script_queries_len": 3, "potential_entities_queries": ["channel"], "potential_entities_queries_len": 1, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 58}