{"name": "pipeline for stain normilized training keras ", "full_name": " h3 Pipeline for Stain Normilized Training Keras ", "stargazers_count": 0, "forks_count": 0, "description": "I found these images in the train and test set. Train Test Test cleaned Remove error mages from the training set Remove error images from the test set Reduce train set for demonstration only Split data set to train and validation sets Use stratify df label to get balance ratio 1 1 in train and validation sets Check balancing Train List Validation List Test list Test cleaned Test error id dictionary Example of images where you will have trouble with stain normalization Functions for generators Augmentation Horizontal flips 50 images Hrizontal flips 50 images Crop some of the images by 0 10 of their height width Translate images by 20 to 20 on x and y axis independently Rotate images by 45 to 45 degrees apply augmenters in random order STAIN NORMALIZATION FUNCTIONS Convert to range 0 1. The basic idea is to convert train and test images to the similar color space. com Peter554 StainTools Demonstration of images where I could not perform stain normalization because they lead to a singular matrix during the conversion. All source images are transformed on the basis of a randomly selected target image. Pipeline for Stain Normilized Training Keras With this kernel you can train a Deep Neural Network with stain normalized images. org document 8363641 I took and changed the main functions from https github. 05931 Stain normalization of histopathology images using generative adversarial networks http https ieeexplore. Check it s not empty Convert to OD and ignore background Eigenvectors of cov in OD space orthogonal as cov symmetric The two principle eigenvectors Make sure vectors are pointing the right way Project on this basis. Stain Normalization on the fly Chose any random target iamge for stain normalization Perform stain normalization Train Generator Train the model Plot validation and accuracies over epochs Predict cleaned stain normalized test data Predict error test data without stain normalization. During the transformation however I had problems with the some images leading to a singular matrix during the conversion. Angular coordinates with repect to the prinicple orthogonal eigenvectors Min and max angles the two principle colors Order of H and E. Perform stain normalization Import Pretrained Models Load pretrained model Concatenate Pretrained Models Classifier Read and convert images to rgb Convert from cv2 standard of BGR to our convention of RGB. 03815 The importance of stain normalization in colorectal tissue classification with convolutional networks http https arxiv. Here are some papers describing Stain Normalization Neural Stain Normalization and Unsupervised Classification of Cell Nuclei in Histopathological Breast Cancer Images http https arxiv. Show example stain transformation Convert from cv2 standard of BGR to our convention of RGB. ", "id": "robotdreams/pipeline-for-stain-normilized-training-keras", "size": "1187", "language": "python", "html_url": "https://www.kaggle.com/code/robotdreams/pipeline-for-stain-normilized-training-keras", "git_url": "https://www.kaggle.com/code/robotdreams/pipeline-for-stain-normilized-training-keras", "script": "Flatten sklearn.utils augmentation keras.preprocessing.image Concatenate randint keras.layers keras.callbacks mapping applications GlobalAveragePooling2D read_image random get_concentrations Dropout get_tissue_mask Sequential convert_RGB_to_OD Adam shuffle is_uint8_image numpy Input normalize_matrix_rows stain_normalization ModelCheckpoint sklearn.model_selection get_id_from_file_path ImageDataGenerator keras.applications.densenet matplotlib.pyplot Activation convert_OD_to_RGB augmenters Dense pandas get_stain_matrix GlobalMaxPooling2D chunker TissueMaskException(Exception) keras.optimizers train_gen BatchNormalization preprocess_input is_image Model DenseNet169 imgaug MaxPooling2D keras keras.models train_test_split augmenters as iaa keras.layers.normalization cv2 ", "entities": "(('Here papers', 'https arxiv'), 'be') (('however I', 'conversion'), 'have') (('Stain normalization', 'https ieeexplore'), '05931') (('vectors', 'basis'), 'check') (('Min', 'H'), 'angle') (('they', 'conversion'), 'Demonstration') (('org 8363641 I', 'https github'), 'document') (('Rotate axis independently images', 'random order'), 'clean') (('Plot validation', 'stain normalization'), 'choose') (('I', 'train'), 'find') (('basic idea', 'color similar space'), 'be') (('importance', 'https arxiv'), '03815') (('source images', 'target randomly selected image'), 'transform') (('you', 'stain normalized images'), 'train') (('Import Pretrained Models Load', 'RGB'), 'perform') ", "extra": "['test']", "label": "Perfect_files", "potential_description_queries": ["apply", "background", "balance", "basic", "classification", "color", "convert", "convolutional", "could", "cv2", "data", "demonstration", "df", "dictionary", "document", "empty", "error", "fly", "found", "height", "http", "id", "idea", "ignore", "importance", "kernel", "label", "lead", "list", "main", "matrix", "max", "model", "normalization", "normalized", "not", "order", "perform", "pretrained", "random", "range", "ratio", "rgb", "right", "selected", "set", "similar", "source", "space", "stain", "standard", "target", "test", "tissue", "train", "training", "transformation", "trouble", "validation", "width"], "potential_description_queries_len": 60, "potential_script_queries": ["augmentation", "iaa", "imgaug", "mapping", "numpy", "preprocessing", "randint", "shuffle"], "potential_script_queries_len": 8, "potential_entities_queries": ["selected"], "potential_entities_queries_len": 1, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 66}