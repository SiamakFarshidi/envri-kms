{"name": "train retinanet for mitotic figure detection ", "full_name": " h1 Train RetinaNet model on CCMCT data set ", "stargazers_count": 0, "forks_count": 0, "description": "Our model was trained vor several more epochs but GPU time on kaggle is rare so we stop here with our proof of principle. 1038 s41597 019 0290 4Credits to some of the library code https github. 1e 4 seems to be a good value. A large scale dataset for mitotic figure assessment on whole slide images of canine cutaneous mast cell tumor. Let s now unfreeze the network i. Let s now find the optimal learning rate. com rafaelpadilla Object Detection MetricsAdditionally some of my code https github. Note that this kaggle version of the data set was converted to the DICOM format and for the sake of dataset size only the lowest i. Train RetinaNet model on CCMCT data setTrain a RetinaNet model for mitotic figure detection on the MITOS_WSI_CCMCT data set. Create anchors for object detection and show them on the image. Let s fit the frozen except the heads network for a cycle of 1 epoch 5000 randomly cropped images Let s have a quick peek at the preliminary state. com ChristianMarzahl ObjectDetection https github. This is an excerpt of the data set. Additionally the training provides images with a high probability of mitotic figure lookalikes see the paper. Now create the network. As of writing the MITOS_WSI_CCMCT data set is the only set providing mitotic figure annotations and mitotic figure look alikes for the complete microscopy slide image in total 44k mitotic figures on 32 WSI. allow all layers to train And now let s fit the network using the cyclic learning rate scheme for 10 epochs Let s see how the network performs now. ai wants to download the pre trained weights for the ResNet18 stem. Note that for this step internet access is required since fast. Not great but a good start. com maubreville MITOS_WSI_CCMCT https github. For the complete set and more information about it please see our publication in Scientific Data Bertram C. highest resolution layer of data was exported. Sci Data 6 274 2019 doi 10. com maubreville SlideRunnerLet s have a look at the data from the data set only mitotic figure cells are selected. ", "id": "marcaubreville/train-retinanet-for-mitotic-figure-detection", "size": "2156", "language": "python", "html_url": "https://www.kaggle.com/code/marcaubreville/train-retinanet-for-mitotic-figure-detection", "git_url": "https://www.kaggle.com/code/marcaubreville/train-retinanet-for-mitotic-figure-detection", "script": "fastai.vision Path RetinaNet ObjectItemListSlide pathlib retinanet RetinaNetFocalLoss objectdetectiontools PascalVOCMetric SlideObjectCategoryList fastai.callbacks bb_pad_collate_min Database sliderunnerdatabase fastai slide_object_result show_anchors_on_images get_slides create_anchors ", "entities": "(('Additionally training', 'paper'), 'provide') (('s', 'learning now optimal rate'), 'let') (('ai', 'ResNet18 stem'), 'want') (('figure only mitotic cells', 'data'), 'SlideRunnerLet') (('internet access', 'step'), 'note') (('cropped 5000 randomly s', 'preliminary state'), 'let') (('Train RetinaNet model', 'MITOS_WSI_CCMCT data set'), 'setTrain') (('more information', 'Scientific Data Bertram C.'), 'see') (('how network', '10 epochs'), 'allow') (('resolution highest layer', 'data'), 'export') (('kaggle version', 'only lowest i.'), 'note') (('we', 'principle'), 'train') ", "extra": "['annotation']", "label": "Perfect_files", "potential_description_queries": ["assessment", "cell", "code", "create", "cycle", "data", "dataset", "detection", "download", "epoch", "figure", "find", "fit", "format", "high", "image", "kaggle", "layer", "learning", "let", "library", "look", "model", "my", "network", "object", "pre", "probability", "publication", "rare", "resolution", "scale", "set", "several", "size", "slide", "step", "time", "total", "train", "training", "version"], "potential_description_queries_len": 42, "potential_script_queries": ["fastai", "pathlib"], "potential_script_queries_len": 2, "potential_entities_queries": [], "potential_entities_queries_len": 0, "potential_extra_queries": ["annotation"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 45}