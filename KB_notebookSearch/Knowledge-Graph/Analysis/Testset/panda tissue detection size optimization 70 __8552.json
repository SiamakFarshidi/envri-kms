{"name": "panda tissue detection size optimization 70 ", "full_name": " h1 Tissue Detection and Size Optimization h2 Objective h2 Results h1 Getting Strated with the Numpy Images h2 Basic Slide Downsample h2 As Numpy Array h1 Detecting Tissue h2 Leveraging Academic Research h1 Sensitivity Exploration h1 Cutting out all space except for the identified Tissue h1 Getting Bounding Boxes h3 Starting with simple boxes h2 Getting Simple Rectangle Bounding Box h2 Min Rectagle Bounding Boxes h1 Cropping the Image h2 Basic cropping h2 Crop with Smart Bounding and Rotation to Minimum Size h2 Remove space between countors in final bounding box h1 Whole Pipeline Start Here for Code Only h1 Baseline for Corpus 67 8 h1 Next Steps ", "stargazers_count": 0, "forks_count": 0, "description": "Returns Binary mask as numpy 2D array RGB slide image in the used downsampling level in case the user is visualizing output examples and downsampling factor. Baseline for Corpus 67. com dannellyz tissue detect scaling bounding boxes 4xfaster 4x speed increase to base notebook Tissue Dection Metadata Analysis https www. com dannellyz tissue detect png 512x512 pre process that takes the lessons from this process and directly applies them to the data corpus as pre processing. An excerpt from the paper explaining the methodology To reduce computation time and to focus our analysis on regions of the slide most likely to contain cancer metastasis we first identify tissue within the WSI and exclude background white space. For visuals the bounding boxes were left but in the full pipeline below they are removed. com dannellyz panda preprocessing tissue detection available as well. As the below examples illustrate the choosen downsample has a big imapct on the size of the representation Detecting TissueThis notebook draws on the work of Lu\u00eds https github. For speed of commiting the notebook I have it set to only 5 in this notebook. jpeg attachment tissue_logo. com dannellyz tissue detect td conv png 512x512 Notebook to export images to zip file Scaling Bounding Boxes https www. com dannellyz panda tissue detection size optimization 70 Tissue Detection Intro and First Application Base Dataset Generation https www. Whole Pipeline Start Here for Code OnlyNow that we have explained each of the steps along the way we can put the whole pipeline together. Returns Binary mask as numpy 2D array RGB slide image in the used downsampling level in case the user is visualizing output examples Downsampling factor. jpeg Tissue Detection is a key aspect to research in the domain of computer vision applied to cancer classification. To achieve this we adopt a threshold based segmentation method to automatically detect the background region. Getting Simple Rectangle Bounding BoxThis example makes a simple rectangle that captures all of the identified countors Min Rectagle Bounding BoxesWith the goal of minimizing the total area of the images the next method implemented concatenates all tissue contours found and builds a cumulative minimum boudning rectanlge. Exploring how this methodology effects the mask slides2. Remove space between countors in final bounding boxNow that we have everything but the minimum bounding boxes we can cut any blank space between the inner most areas of the contours. Timing the processing and making it more efficient3. Checking Effectiveness on lower downsamples All imports Setup code https stackoverflow. Getting Strated with the Numpy Images Basic Slide DownsampleDownsampling is a process to take the Whole Slide Image WSI and get lower lever representations of the slide. Generate mask locating tissue in an WSI. Base Notebook Currently Here https www. Beck Deep Learning for Identifying Metastatic Breast Cancer arXiv 1606. gif As Numpy ArrayOnce the image has been downsampled there are many ways it could be represented as best described in the Notebook Getting Started with the PANDA Dataset Using Matplotlib https www. sensitivity int The desired sensitivty of the model to detect tissue. In particular we first transfer the original image from the RGB color space to the HSV color space then the optimal threshold values in each channel are computed using the Otsu algorithm https ieeexplore. Results I have another notebook https www. downsampling_factor int The desired factor to downsample the image by since full WSIs will not fit in memory. Additionally I have made the pre processed images https www. The higher the downsampling rate the less resolution the image will have. Getting Bounding Boxes Starting with simple boxesThe first method experimented with finds a minimum bounding rectangle for all of the identified countors. com luisvalesilva and his WSIPRE https github. 8 Here we try to get a average for the reduciton capacity of this code across the data corpus. It also greatly improves speed and memory capacity. org Dicom DICOMWSI sup145_fromword_files image010. We do this by sampling from the whole and taking an average of the recoded size reduciton. Notebooks in this collection include the following. We start with a simple rectangluar crop Crop with Smart Bounding and Rotation to Minimum SizeTo better reduce size we take the Smart Bounding Box we calulated and rotate the image to minimize the size while keeping everything within the bounding box. Initial research leads to a conclusion of 3000 but I want to do more work on this in next steps. Since Prostate Biopsies are not orientated in a specific way this does not effect prediciton. com dannellyz tissue detection bounding box metadata eda viz Exploring features from bounding boxes discovery on the slides Tissue Detection and Size Optimization Objective This notebook leverages academic research and previous repositories in pathology to idnetiify regions of interst ROIs in provided slides and optimally crop the full image to contain a the maximum amount of tissue informaiton while minimizing the overall size. jsp tp arnumber 4310076 and the final mask images are generated by combining the masks from H and S channels. pdf lends itself nicely to the detection on Prostate Cells in the PANDA challenge esepcially in the area of pre processing. to start this walk through we use a very high downsampling in order to prove the concept and at the end with a low downsampling to show the effectiveness. com luisvalesilva wsipre work available on Github. 05718 Parameters wsi OpenSlide AnnotatedOpenSlide class instance The whole slide image WSI to detect tissue in. As you can see even thought we have cut out all non tissue parts of the slide the size has not changed. I have run the sampler over the whole corpus and come out with 68. Inspired by method used by Wang et al. The image s closest level downsample is found and used. The baseline is set at 5000 and should be adjusted down to capture more potential issue and adjusted up to be more agressive with trimming the slide. For this notebook we will be working with the slides as Numpy Arrays. Cropping the Image Basic cropping Now that ROIs have been indentified we can now crop the image based on the bounding boxes. Sensitivity ExplorationWhen considering what sensitivty to choose we dont want a high enough number to remove noise but also a low enough number to make sure we capture all of the tissue. This work informs the method def detect_tissue Find RoIs containing tissue in WSI. com wouterbulten getting started with the panda dataset Visualizing masks using matplotlib. 1 Dayong Wang Aditya Khosla Rishab Gargeya Humayun Irshad Andrew H. My main focus in this competition so far has been exploring previous work done in this domain and furthering its application towards this dataset. Cutting out all space except for the identified TissueOnce we have identified a given sensitivity and the areas it identifies as tissue we can then cut out the rest of the image. Leveraging Academic ResearchPreviously pubilshed work in the domain of Deep Learning for Identifying Metastatic Breast Cancer https arxiv. Downsample Example http dicom. This can be used as a preprocessing step in order to remove large swaths of the images that do not conatin meningful data for prediciton. The method def draw_tissue_polygons from WSIPRE allows for vizualizaiton of this deteciton Parameters wsi OpenSlide AnnotatedOpenSlide class instance The whole slide image WSI to detect tissue in. com a 11172032 Select the min downsampling factor Between the input value and the available values from the slide Set the level of the slide by the downsampling Read and convert to numpy array Set up example slide Open slide as wsi Get a downsample of the whole slide image to fit in memory Convert from RGB to HSV color space Compute optimal threshold values in each channel using Otsu algorithm Make mask boolean Base Example Sensitivity Tests https stackoverflow. com a 28759496 Create mask where white is what we want black otherwise Draw filled contour in mask Extract out the object and place into output image Set up dictionary for plotting Open Slide Get returns from detect_tissue Add Base Slide to verbose print Get Tissue Only Slide Add Tissue Only to verbose print Get minimal bounding rectangle for all tissue contours Crop with getSubImage Add Bounding Boxes to verbose print Crop empty space Remove by row Remove by column Add Space Cut Boxes to verbose print Get size change Nested in funciton to not take up more memory and allow mulitprocessing. ", "id": "dannellyz/panda-tissue-detection-size-optimization-70", "size": "8552", "language": "python", "html_url": "https://www.kaggle.com/code/dannellyz/panda-tissue-detection-size-optimization-70", "git_url": "https://www.kaggle.com/code/dannellyz/panda-tissue-detection-size-optimization-70", "script": "getSubImage multiprocessing baseline_check morphology numpy downsample display_downsample detect_and_crop detect_tissue draw_tissue_polygons plot_figures skimage matplotlib.pyplot tqdm.notebook pandas sensitivity_test tqdm otsu_filter Pool tissue_cutout statistics get_disk_size mean ", "entities": "(('we', 'background white space'), 'excerpt') (('how methodology', 'mask'), 'explore') (('Notebooks', 'following'), 'include') (('Results I', 'notebook https www'), 'have') (('they', 'full pipeline'), 'leave') (('Setup', 'https stackoverflow'), 'check') (('Strated', 'slide'), 'be') (('It', 'also greatly speed capacity'), 'improve') (('we', 'bounding box'), 'start') (('main focus', 'dataset'), 'explore') (('Additionally I', 'images https pre processed www'), 'make') (('that', 'prediciton'), 'use') (('com dannellyz panda', 'tissue detection'), 'available') (('Here we', 'data corpus'), '8') (('threshold then optimal values', 'Otsu algorithm https ieeexplore'), 'transfer') (('We', 'size recoded reduciton'), 'do') (('notebook', 'Lu\u00eds https github'), 'have') (('Tissue Size Optimization notebook', 'overall size'), 'detection') (('jsp tp mask 4310076 final images', 'H channels'), 'arnumber') (('pdf', 'pre processing'), 'lend') (('tissue contours', 'boudning cumulative minimum rectanlge'), 'make') (('minimum bounding', 'identified countors'), 'get') (('com dannellyz tissue', 'zip file Scaling Bounding Boxes https www'), 'detect') (('many it', 'Matplotlib https www'), 'gif') (('baseline', 'more slide'), 'set') (('I', '68'), 'run') (('com dannellyz tissue', 'notebook Tissue Dection Metadata Analysis https www'), 'detect') (('Parameters', 'slide image whole tissue'), 'allow') (('this', 'prediciton'), 'orientate') (('also low enough we', 'tissue'), 'ExplorationWhen') (('it', 'notebook'), 'for') (('Academic ResearchPreviously', 'Metastatic Breast Cancer https arxiv'), 'leverage') (('jpeg Tissue Detection', 'cancer classification'), 'be') (('size', 'slide'), 'change') (('we', 'contours'), 'cut') (('RoIs', 'WSI'), 'inform') (('user', 'output examples'), 'mask') (('we', 'effectiveness'), 'use') (('user', 'output examples Downsampling factor'), 'mask') (('pre that', 'pre processing'), 'detect') (('otherwise Draw', 'mulitprocessing'), 'com') (('we', 'whole pipeline'), 'start') (('we', 'Numpy Arrays'), 'work') (('I', 'next steps'), 'lead') (('we', 'bounding boxes'), 'crop') (('we', 'image'), 'identify') (('full WSIs', 'memory'), 'int') (('it', 'processing'), 'time') (('we', 'background automatically region'), 'adopt') ", "extra": "['biopsy of the greater curvature', 'test', 'metastasis']", "label": "Perfect_files", "potential_description_queries": ["algorithm", "application", "area", "array", "average", "background", "baseline", "best", "boolean", "bounding", "box", "cancer", "case", "challenge", "channel", "choose", "code", "collection", "color", "column", "competition", "computation", "computer", "concept", "conclusion", "contain", "contour", "conv", "convert", "could", "crop", "cut", "data", "dataset", "def", "detect", "detection", "dictionary", "directly", "domain", "downsample", "eda", "effect", "empty", "end", "even", "everything", "explained", "export", "factor", "file", "final", "fit", "found", "generated", "high", "http", "image", "include", "increase", "inner", "input", "instance", "int", "issue", "itself", "key", "left", "level", "lower", "main", "mask", "maximum", "memory", "metadata", "metastasis", "method", "min", "minimize", "minimum", "model", "most", "next", "noise", "non", "not", "notebook", "number", "numpy", "object", "optimization", "order", "out", "output", "overall", "pdf", "pipeline", "place", "plotting", "png", "potential", "pre", "preprocessing", "print", "processing", "reduce", "remove", "representation", "research", "resolution", "rest", "rotate", "row", "run", "sampler", "sampling", "scaling", "segmentation", "set", "size", "slide", "space", "speed", "start", "step", "thought", "threshold", "through", "time", "tissue", "total", "transfer", "try", "up", "user", "value", "vision", "viz", "walk", "while", "work", "wsi", "zip"], "potential_description_queries_len": 143, "potential_script_queries": ["mean", "morphology", "multiprocessing", "skimage", "tqdm"], "potential_script_queries_len": 5, "potential_entities_queries": ["file", "image", "minimum", "speed"], "potential_entities_queries_len": 4, "potential_extra_queries": ["biopsy"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 147}