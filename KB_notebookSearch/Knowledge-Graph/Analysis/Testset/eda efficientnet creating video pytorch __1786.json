{"name": "eda efficientnet creating video pytorch ", "full_name": " h3 Some notes h2 EDA h2 Datagenerator h2 Data checking h2 Model h2 Submission h3 Converting six channel image to RGB with Pillow h2 Creating video from all training images ", "stargazers_count": 0, "forks_count": 0, "description": "aspx geo_country ua generalinformation RPE https www. read_csv Image from dataset with index 1 List of arrays of different channels total 6 of the same image \u0421onversion to a six channel image Loading libraries Loading libraries Augmentations for data transforms. EDA Datagenerator Data checking Model Submission Converting six channel image to RGB with Pillow Creating video from all training images Loading libraries linear algebra data processing CSV file I O e. Each images instance has 6 individual channel different organelles of the cells the nucleus endoplasmic reticulum actin cytoskeleton nucleolus mitochondria and golgi apparatus. com playlist list PLSQl0a2vh4HDmOg7VVnL5kiEh7tKB jJh or rus playlist https www. org Products All HTB 96. ToPILImage Dataset data loaders train_loader checking test_loader checking Model parameters Changes count input channels of our model Loss and Optimizer Train model splitting a six channel image into two three channel images rgb1 rgb2 interpolation after which their composition for color saturation Code from https github. Some notesThis notebook contains EDA EfficientNet and Creating video from training images. be video or short videos from each experiment in the output of this kernel. ai Some notes about the data as i understood them The images from data are generated by carrying out biological experiments using reagents known as siRNAs. Likbez on topic Structure of a cell en playlist https www. aspx geo_country ua U2OS https www. Each six channel image is one of the types of cells HUVEC http www. com watch v D3sLsakGoNI feature youtu. aspx HepG2 https www. com watch v EHWIDbsSE_Y list LL R1 jljOQArmtGuwfFkpuw index 25 t 0s Brief introduction from rxrx https www. org products all HB 8065. aspx geo_country ua You can view all RGB images from the competition s training data in this https www. com playlist list PLRGeEPbOb5tPQBPEP2XamxksDWR5Jm 0G Generation and action of siRNAs and miRNAs en 7 min video https www. com watch v 5YsTW5i0Xro list LL R1 jljOQArmtGuwfFkpuw index 2 t 1s or rus 5 min video https www. py Convert images tensors list rgb video Recursive function call. org products all CRL 4000. org products all CRL 1730. com recursionpharma rxrx1 utils blob master rxrx io. ", "id": "bonhart/eda-efficientnet-creating-video-pytorch", "size": "1786", "language": "python", "html_url": "https://www.kaggle.com/code/bonhart/eda-efficientnet-creating-video-pytorch", "git_url": "https://www.kaggle.com/code/bonhart/eda-efficientnet-creating-video-pytorch", "script": "torch.utils.data __init__ all_video_experiments convert_tensor_to_rgb DataLoader torch.nn numpy EfficientNet __getitem__ efficientnet_pytorch PIL Image matplotlib.pyplot pandas cm Dataset __len__ plot_cell tensor_rgb_video torch.nn.functional matplotlib CellDataset(Dataset) torchvision.transforms ", "entities": "(('Loading Loading', 'data transforms'), 'total') (('Model train_loader checking test_loader checking Changes', 'https github'), 'loader') (('HUVEC', 'www'), 'be') (('images instance', 'endoplasmic reticulum actin nucleus cytoskeleton'), 'have') (('Loading libraries', 'algebra data CSV file'), 'convert') (('notebook', 'training images'), 'contain') (('Convert images tensors', 'rgb video Recursive function call'), 'list') (('images', 'siRNAs'), 'ai') (('aspx You', 'https www'), 'geo_country') ", "extra": "['test']", "label": "Perfect_files", "potential_description_queries": ["blob", "cell", "channel", "checking", "color", "competition", "composition", "count", "cytoskeleton", "data", "dataset", "en", "experiment", "feature", "file", "function", "generated", "http", "image", "index", "individual", "input", "instance", "interpolation", "linear", "list", "min", "model", "notebook", "out", "output", "processing", "py", "rgb", "short", "six", "splitting", "topic", "total", "training", "video", "view"], "potential_description_queries_len": 42, "potential_script_queries": ["cm", "matplotlib", "nn", "numpy", "torch"], "potential_script_queries_len": 5, "potential_entities_queries": ["data", "video"], "potential_entities_queries_len": 2, "potential_extra_queries": ["test"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 48}