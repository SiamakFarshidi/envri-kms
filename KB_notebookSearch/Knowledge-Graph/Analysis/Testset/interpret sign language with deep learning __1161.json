{"name": "interpret sign language with deep learning ", "full_name": " ", "stargazers_count": 0, "forks_count": 0, "description": "com learn deep learning American Sign Language ASL is a natural language that serves as the predominant sign language of Deaf communities in the United States and most of Anglophone Canada. org wiki American_Sign_LanguageIn this kernel I demonstrate that deep learning can be used to interpret these signs. ASL possesses a set of 26 signs known as the American manual alphabet which can be used to spell out words from the English language. Step 1 Import Modules Step 2 Load Data Step 3 Vizualize Data The min max pixel values are already scaled between 0 and 13 images from category A 3 images from category B 20 images from category A 20 images from category B Step 4 Define Helper Functions Step 5 Evaluate Classification Models Transfer learning w VGG16 Convolutional NetworkGreat we were able to interpret the signs with an accuracy rate of approximately 92. Interpret Sign Language with Deep Learning Which sign represents which letter in the alphabet Looks like a task for Deep Learning https www. That is much better than random chance given that there were 26 different signs. ", "id": "paultimothymooney/interpret-sign-language-with-deep-learning", "size": "1161", "language": "python", "html_url": "https://www.kaggle.com/code/paultimothymooney/interpret-sign-language-with-deep-learning", "git_url": "https://www.kaggle.com/code/paultimothymooney/interpret-sign-language-with-deep-learning", "script": "Flatten sklearn.metrics matplotlib.gridspec VGG16 np_utils Dropout EarlyStopping MaxPool2D plot_learning_curve AveragePooling2D learning_curve optimizers ReduceLROnPlateau sklearn.model_selection confusion_matrix KFold Activation imblearn.under_sampling Callback plotKerasLearningCurve MobileNet roc_curve backend as K train_test_split keras.preprocessing.image cross_val_score MetricsCheckpoint(Callback) keras.utils.np_utils on_epoch_end seaborn numpy plot_confusion_matrix ModelCheckpoint ImageDataGenerator keras.utils pandas keras.optimizers resize BatchNormalization Model keras.models skimage.transform Adadelta keras.callbacks model_from_json SGD Adam shuffle Conv2D Adagrad InceptionV3 auc plotHistogram get_data RMSprop keras.applications.vgg16 accuracy_score MaxPooling2D roc_auc_score backend plotThreeImages RandomOverSampler sklearn.utils __init__ glob pretrainedNetwork keras.layers RandomUnderSampler Sequential keras.applications.inception_v3 models class_weight sklearn imblearn.over_sampling matplotlib.pyplot Dense Lambda to_categorical tqdm layers model_selection StratifiedKFold keras keras.applications.mobilenet ", "entities": "(('deep learning', 'signs'), 'wiki') (('letter', 'Deep Learning https www'), 'language') (('natural that', 'Anglophone Canada'), 'learn') (('which', 'English language'), 'possess') (('Convolutional NetworkGreat we', 'approximately 92'), 'step') (('That', 'much random chance'), 'be') ", "extra": "", "label": "No_extra_files", "potential_description_queries": ["accuracy", "category", "kernel", "language", "learn", "learning", "letter", "manual", "max", "min", "most", "out", "pixel", "random", "scaled", "set", "sign", "spell", "task"], "potential_description_queries_len": 19, "potential_script_queries": ["auc", "backend", "glob", "numpy", "preprocessing", "resize", "seaborn", "shuffle", "sklearn", "tqdm"], "potential_script_queries_len": 10, "potential_entities_queries": [], "potential_entities_queries_len": 0, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 29}