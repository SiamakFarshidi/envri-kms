{"name": "panda image data augmentation techniques w monai ", "full_name": " h1 PANDA Image Data Augmentation Techniques w MONAI h3 Table of Contents h1 1 The Affine Transform h1 2 Elastic Deformation h1 3 Flipped images h1 4 Spatial Padding h1 5 Experimental Method from APTOS h1 APPENDIX A A list of useful resources and credits ", "stargazers_count": 0, "forks_count": 0, "description": "The following image gives a good demo of padding https d2l. Here I try to describe the best possible methods for preprocessing the images in the competition and I ll try to cover as many images as well as preprocessing data augmentation techniques that are possible in this notebook. Table of Contents 1. Thus we can preserve the spatial dimensionality by padding with odd numbers. html Useful resources https www. Credit goes to Marco Vasquez for his HTML notebook. svg 400px DeformationOfRod_plain. The strain can be simply represented by https wikimedia. Experimental Method from APTOS5 Appendix A Libraries and Resources. YOU ARE HERE 60 4. We can apply a simple affine transform to our images over here not necessarily one of the geometric transforms given above. org Numpy https numpy. We can simulate this sort of stress with MONAI s Rand2DElastic transform. com health prostate cancer MONAI transforms always take channel first data channel x H x W make them channel first create an Affine transform convert both image and segmentation using different interpolation mode make them channel first create an elastic transform make them channel first make them channel first the trick is to add this line. Elastic Deformation 2 3. An x axis flip data image jpeg base64 9j 4AAQSkZJRgABAQAAAQABAAD 2wCEAAkGBxAOERUTERETDQ4NDg8ODhgWEg8VDhYQFhEaGRUXFxcYHSgsJBolHRUVITEhJSktLi4uFx8zODMsNygtLisBCgoKDg0OGxAQGy0iHyUtLS0tLS0tLS0rLS0tLS0rLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rLS0tLf AABEIAMwAzAMBEQACEQEDEQH xAAbAAEAAQUBAAAAAAAAAAAAAAAABgECAwUHBP EAEcQAAEDAgEGCgYIBAUFAQAAAAEAAgMEEQUGEiExUZITFiJBUlNxgZHSFCNhocHRJDJCVGKCk7EHc3SjFTNDcvElY7LC4TT xAAaAQEAAgMBAAAAAAAAAAAAAAAAAQQCAwUG 8QAMhEBAAIBAgQDBwIHAQEAAAAAAAECAwQREiExURRBYQUTMlJxodEiwRUzQoGRsfDhI aAAwDAQACEQMRAD8A7igICDlGUuKztrJS2V7OCkzGWeQ0Ac1lI2mEZdyMs2dnDN6TdDx2jUfcmwmeGYvBUi8Ugcedup47WnSoGwQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEHH8ox9Nm n JSJXieS8Ety0cC a0cnvb wAKBFq AqmmOcAXhukPjztHt2hTuNjhGWs8VhLapZ7TaUdjufvTYTXCcoqarsGPzHn7DuS u29ygbhAQEBAQEBAQEBAQEBAQEBAQEBAQEHIcox9Nm n JSOikKBRBq8SwCCouS3Mf0maHd41FBFsRyXni0s kM COXu JTuK4XlXVU3JJ4Zg zJfOHsDtYQTXCcraaosHO9Hkd9l50dztR9yjYSFAQEBAQEBAQEBAQEBAQEBAQEBByPKQfTZv53yUjoxCgUsgWQLIPDiGEQ1A9YwE9IaHjvQRbEskZY7mF3DDonQ 5H3Kdx4sOxyronZgc4ButkgNvA6R3IJjhGWsEthMPR37Sbxb3N3psJMyQOALSHA6iDcHsIUDIgICAgICAgICAgICAgICAg5JlL wDtm nfJSOjki9ri u1 VbbZNp23N IsoCyBZAsgqGIMVXh8U7c2WNrx7Ryh2HWEEWxPIk6XU7 AMj AIO ancaOCqq8Pfblwnokeqd3aj2hSJVhGXMb7NqG8Eek25Z3t1j3qNhLKWqjmaHRubIw87TcKBnQEBAQEBAQEBAQEBAQEHJspB9Nm nfALKsTM7QiZ2jeWxqaszzF4Jbp0WNnADUu jxRjx8Dk3yTe E2lNi0sY5dpmN1nU8D9iqWTSY7 Dyn7LFNRavXnH3b CTPaHAENcL6RY6Vzb14bTWfJerPFG7IGrFKoaguAQVAQXAIMVVDHI3Nka14dzEXagieJ5HNfd0DuCPQdpZ3HWPep3EddFV0D78uF3Sb9R3fqPYgkWE5dHQ2oZf8bNB72 LwTYTDD8ShqG50UjX7QDyh2t1hQPYgICAgICAgICAgICDluOt mzHZJ8Ar s FxZOLsq6u DTburSrr3c6rZ0MHDyNj z9eT YObvOhVM1 d0m3n0j6t OvHaK 5S8BcR1FUFUFQEFUFpfsQWIKWQUfGCLOAcHawRdp7kEexPJGGS7oiad waYj Xm7lO4i9XhNVRuz7Obm6nxklveRq70G3wnLeWOzZ2iZnSGiQfA 5NhMcMxqCqHq5Bn9E6HjuKgbNAQEBAQEBAQEBBzDKDRVTfik AXd9nU2xb95cvV23ybdmKAq1aGiEqyUg5D5T qvs3 Y3R 9 Bcj2hf8AVFI8v9y6Gkr mbd29suetqoFkC6C0oFkFLIFkCyBZAIQaTE8mIJ7kDgX9Jn1T2t1H3JuIpiOTlTTnOaDKxunOZnZw9pbrCkenCsr6mCzZPXsGiztDx2O d02EywrKWnqbAP4OQ Yfod3HUVA3SAgICAgICAg5TjU2fUSn vPHgbfBeo09eHFWPRw81t8kz6sbH2BPsWUxzREuh4RBwcEbejG33i xXm9Rfiy2n1dnDXhpEej1rS2KoKIFkCyClkCyBZAsgWQLIFkFLINZieAwVGl7LP6beS v5j3oInieSU8VzF9IZsGiXd5 5TuMOG5S1VIc0uL2t0Fkgdo7DrCCY4XldTT2DzwD9jjyO5 rxsmwkAN9I0qBcgICAgIONTvu9x6T3H3levrH6YeemecsmdyT2LHbmy8kujyxhDQOCk5IaObmC8pbnMu9HRXjpD1UnixRslTjrD1UniE2DjrD1UnixNhTjtD1UnixA47Q9VJ4sUCnHeHqZPFiCnHiHqZPFinYOPEPUyeLE2FOPMPUyeLE2FOPUPUyeLE2Dj1D1MnixNhTj3D1Mm8xRsHHuHqZN5inYU4 Q9RJvMTYOPkPUSbzE2HjxDKajqRaWmefxZzA8djhpQRuodHneqz8zY NzvEa1I92F47PTf5chzei7lM8ObuUCc5OZTNrHcG5vBzBt9Bux1tdkEjUAgICDis h7gdbXuB7iV7GvOsT6PO25TLLfkn asfNPkm1HkbTSMY Pl5bGv1s5wD0V5PLyvMesu Sd6xLNxHpunLvM8qx3ZHEam6ybeZ5U3DiNTdZNvM8qbhxGpusm3meVNw4i0vTm3meVQHESl6cu8zyoKcRKXpzbzPKgcQ6XpzbzPKp3DiHS9ObeZ5U3DiFSdObfZ5U3FOIVJ05t5nkTcU4hUnTm32eRNw4hUnTm32eRNw4g0nTm32eRRuKcQKTpzb7PIp3FRkDSdObfZ5E3FRkFSdObeZ5E3F3ESk6c2 zypuNhg TsFG4ujznPItnPdcgbBYAKBuUBBY QDWQO02U7TPREzELPSY m3eanDbscUd3IseZmVMwGrhnkfmN ivWaWeLDWfRwM8bZLfVjhKysiHRskcQa kjznND47wuuWg8k2HusvO6 DNc9to5Tz wAuvpckTijfy5N6yQHSCD2G6pzEx1WYndZPM2Npe9wYxgu4k2aANqVrNpitY3mS1orG89Gnw KeCV Y4OgL wDJMgzRIOYg8x9h0q3l0GSleKOffbyV6aqlp2nl23826ZK131XA9hBVSazHWFiJiWVQlhNQwaC9viFPDbsjigbOwmwc0nYCCk1tHWDeGZQlifM1psXNB9pAUxWZ6QjeFPSWdNu8FPDbsjijuzLFkxukDdbg3tICbTPREzELfSY m3eap4bdjijuyA30jSoSo94AuSANpNkiJnob7LPSY m3eap4bdkcUd17Hgi4II9huomJjqnfdUm2tBj9Jj6bd5qnht2RxR3PSY m3eanDbscUd2ZQlEP4g4RPWRRNgj4VzJi9wzo22GaRflEbV0 Zeox4L2nJO28evf0UNfhvlpEUjfn wB1QfiRiH3X 5Teddv Kab5 tb8OX4DP8n3j8suP4XJStgD25j30zWvFwbPYSHC4JGot8Vhpc9c034Z3ji 0s82KccVieu3 nmp3LdaGFZWOwmWplzYIxI8sz7Z0bdA16XED lPEUxU3vO0f3 ZjbBbJbasbz b909yJpH4dSSelNFN690mlzHcjgmC IJ52kW1rhe0MldVnr7meLlt5957uro6TgxT7zlz3 0dnmqq11c8OeCymYbxRnW4jU9 wbzLdjxV09do52857ekflhfJOWd5 Hyj95X1sUb43CUAx2JN YAa Yox2tW0cPUvFZj9XRg h3hUsUkspiMcFRG3gSSzOcM4kXaDcaNoCn2rqKXrWnFvaJ5o0GG1bTbbasxyT5cV1HJMcyRrpqiV7KfPZJM97DwkAuCdBsX3Xp9N7R09MVazfnER5T HBz6LNbJa0V5b94 L1ZI5LVlPWRSywcHGwy57s A2vC9o0NcTrIWrX6 BfT2pW28zt5T3j0Z6XSZaZq2tXaI nZ1FeddtzfLjJurq6syQw8LHwLGXz4W6Re4s5wPOF3vZutw4cHDe207z5T 0OPrNNlyZeKtd42jt 7S0mRuIMkY402aGyMcTwlNoaHAnU9XcntLTTSYi lPlP4VqaHPFonh8484 LsS8o9Chf8QsGqKwRcBFw3Bl fyo22va313DYur7L1OLBxe8nbfbv zna BfLFeCN 8AH7oZxIxD7r cpvOuz FNN8 2t HN8Bn T7x XVcCgdFTQRvGa KnhY8XBs5rACLj2heW1F4vmvavSZmfu72Cs1x1rPWIhrsuMPlqqR0cTOEkL4zm5zG6A650uICsezs1MWeLXnaNp 7k063FbJimtY3nk53xIxD7r cpvOvQ wAU03z AGt HH8Bn T7x XQ8hsOlpaQRys4KThJHWzmO0E6NLSQvP8AtHNTNn4qTvG0f9zdjRYrY8XDaNp5tri8JkglY0XfJC9rRcC5LSALlVcNorkraekTDflibUmI7OTjIfEPuv8AcpvOvVfxTTfP9rfh5 wGf5PvH5OJGIfdf7lN50 imm f7W CfAZ k 8flMsvcoeBb6PEfWyj1hH2WHm7T y4 szR8c 9v0jp6z 46et1HDHBXrPVDcOykq6a3Byuczov5bPA6R3ELsZdFgy FXn3jk52PU5adJSzDf4hxnRPGWfiZym7p0 uuXm9jWjnjtv9V7H7Rj uP8M2VUtPiNIXwSslfT uaAbPzbcsFp0jRp7lr0MZdLniuSNoty9PRnqZpnxb0neY5oFRv0Lv5IcqstpRVLoZI5WXJhkaSB9Z0Z0Pb3i6qZaRkpak cffyb6WmtotHl 0tviGIyVr8592xMPqo Yfjftd7gqmHBXBXavWes tHp tvyZZy23np5Q9MDljaGULaiI1UsdK36r AFlSdkDTq7XEWUVtGHHOafLlH1 8Jj3l4xx9Z n AKnkbA0AAWAFgNgGpcOZmZ3l1YjZkQEBAQEBAQEBAQEBAQEBAQc9yyySe5zqinvKSS ZhJL 1l9fZ4bF3fZ tGsRGLJy7T fy5Wr0czM3pz7x EALl3nLUzlOyAPtqNk23N2Wjks63SWF68mVZ5t1A5VLQsQ2EDlotDbD2GoEbC9x0MFz3LTwTaeGPNnxRWN5azBsdmpzJI0Mz6hzXEua4kMH1WjSNC16ylLzFI6V 35yz097Vibectrxzq9kW47zKn4WnqseIurx0qtkW47zKPC09TxFzjpVbItx3mTwtPU8RdXjpVbItx3mTwtPU8Rc451WyLcd5k8LT1PEXOOdVsi3HeZPC09TxFzjnVbItx3mTwtPU8RdXjlVbItx3mTwtPU8Rc45VWyLcd5k8LT1PEXOOVVsi3HeZPC09TxF1eOVVsi3HeZPC09TxFzjlVbItx3mTwtPU8Rc441WyLcf5k8LT1Pf3V441WyLcd5k8LT1PEXOONVsi3H ZPC09T3924yZyglqZCyRrfqZ4LQRax57k7Vpz4K0jeG3Flm07SlCqrAghuVuRrKq8sAEdTrcNTJO3Y72 K6uh9pWw oyc6 eFDVaKMn6qcrf7cvqYXRPLJGlj2GxaRYhenpat44qzvDiWrNZ2nlLDnLLZAHqdkbt7RTZ7QVRyV2nZZpO8NnA5V7Q3QzQU pdQyD RZmzVPYDyWd59y1Xv7jFOTznlH5 szrX3t4p5Rzn8Jd hVN1Ee4FxfeX7ulwV7H FU3UR7gT3lu5wV7LhhVN1Ee41R7y dPBXsuGE03URbjU95fucFey4YTTdRF m35KPeX7p4K9l4wmm6iL9NnyUe8v3k4K9lwwmm6iLcZ8k95fvKeCvZcMIpuoh TZ8lHvL95OCvZcMIpfu8P6bPko97fvKfd17Lhg9L93h TZ8lHvb95Pd17QuGD0v3eH9NnyUe9v3lPu69oV wel 7w ps Se9yd5 ye7p2hjmwyjjGc GBgGsmOID9lMZMk8omUTSkdYhGsSxqgZdsNLFM7aYmBndouVapiyz8Vpj 7RbJjjpCPWlqX8iIX6MUYa0dzR7yrHKkc5 y087TyhI8MyMcbOnfmDotNz3nV 6rX1Uf0t1NPP8AUldBh8VO3NiYGbTzntJ0lVL3taecrNaRXo9ixZCAgj U2TMOIM5Q4Odo9W8DlD2Ha32K5o9dk01uXOvnCtqNLTNHPr3ccxGikppHxyWz4jY2Nwbc4OxevwZqZqRenR5 Jjtjtw26vLnLds1vbhVVmOzTqfq7VpzU3jeGzHbadm dUCNhcfsjx2BUYpNrbQtcW0bpbknhxggzpP8APqDw0nsv9VvcP3K4 uzxkybV GvKPy6GlxTSm89Z5y3N1SWVQUFwKgXAoleCoSvBUC4FQleFAuChK8IlhrK2KBudK9sY9p Yc6VrNp2hE2iOqLYnluNLadmd J4s3tDdfirVNL8yvbUfKjzRV4g 7c58Im AKz 88Udmn9eSe6SYVkUBZ1Q PPRYSG97tZ9yrX1U wBLfXT ADJVS0kcTc2NjY27ALeKqWtNp3lYisR0ehQkQEBAQEHHcqohJWTNdzzeGrUuzpctsVYtVzM9IvaYlqMosn5aJ nlwuPIeP2dsK72k1tNRHLlbzj8OZqNNbFPp3aa6uK6UZNxmskZnD1dOWySX q54PIHuuVy9beMFJ2625R6d13TVnLaN kdXRm1g5 T wCK83wOzxMoeDqN1jsndcCguBUJXgqBeCiV4KhK8FYi4Il5sQxWGmF5ZAz2a3nsaNKmuO1ukIteK9UTxTLeR9xAzgh0nWL 4ah71bppYj4le2on lqaPDKuvdnAOlv9uQuDPE BbLZKY42a4pe6W4XkXDHYznh37NUfhzqrfVWn4eSxTTxHXmk0UTWANa0MaNQAAA7AFV3merfEbdGVEiAgICAgICDj2UZ nTfz kuri lx9HOyfHKe1cDZGlj2h7HaCCLtKrUvasxas7SsWrFo2lzjKXJN1OTJCDLDzt1vZ8x7V6PRe0a5f05OVvtLj6nRzT9VOcJXk5hfolO1hHLfy5D MjV3CwXI1mo9 lm3lHKPov6fD7um3n5tg4Ks3rNWpShljqHDnzu1YzWGUTL0sq9o8FhNU8TOydu1YzWWW8MzXjaFjsndkaVDJ4MSx6Cm u 7 g3lP 8Anes6YrW6MLZK16olimWM0lxF9HZtGmXx5u5WaaesdebRbNM9OTBhuTdXWHOILA7SXyk6faBrKyvnpTl pFcV7c0ywrI mgsXj0h 145F YzV43VK pvbpyWaYKx15pGBbQNC0Ny5AQEBAQEBAQEBBxvKI T5f6n4hdbF Lj6Odk OXRZAqcLTC4KWLG4KUMZClCwtWQAILwFiMgUJazEMooINAPCv6Lfi7UFnXFaWM5IhG6 KKec5rSYg7Q1rL5x9lxpK31xVrzapyWl7cJyNqqizpPo8Z53aZD2N dlrvqaV6c2dMFrdeSbYTkvS01iGcJIPtP0u7QNQVK e91mmKtW9WptEBAQEBAQEBAQEBAQcXyhP0 X p IXWxfy4 jnZPjl0t4VJaYXBZIY3BShYQiFtlIo4gC5IaG6yTZqIaTEMp4Y7iP1z ZoYO nW2uKZ6sJyRHRHqnFKmsdmAuOdqZGDp7QNa2xStI3a5ta3JvcHyDmks6dwgZ0RypT8B7 xaMmqrHw822mnmeqb4VgNPSD1UYz kdMh MVTvltfrK1XHWvRtVrZiAgICAgICAgICAgICAg4plAf8AqEv9V8Quti lx9HOyfHP1dPeFRW2NwWSGMhShhqJWxtznuDA3nJspiJnoxnkjWJZXRsuIG8KekdDO4az7lvrhnza5yx5I wtXiD81ufMei0chvaNQ7Stv6Mcbzya wBV5SrBv4euNnVUlh0GaT Z N3eKq5NXHSrfTTfMm G4VBTNzYo2x7SByj2nWVTve1 srNaRXo9yxZCAgICAgICAgICAgICAgICDiOPn qEv9V 7BdfH Kj6Odf45 rqrwuetvFX10VO3Ole2Ie08o9g1lZ1rNujGZiOqIYrltrbAz87 g35 Cs1wfM0WzdmkpaSsxJ92h9Qb2LibRN9l9Q7FttamOOfJhFbXnkmeC w7jZZ1S hXdBlwwdrtZ9yp5NXM8qrFNNEfEmlHSRwNDImNiYNQaAB yqlrTad5WYiI5Q9KhIgICAgICAgICAgICAgICAgICDhmUUlq Zx1NqrnsDgV18X8uPo5uT45 rcYxl5LJcQM4FnSdZ0vhqHvWumniPiZ2zTPRq8MwKuxF2e1rntdrkkJDO4nSe5bL5aY X2Y1x3vzTrA 4f08NnTn0mTZbNhH5efv8FSyaq1vh5LNNPWOvNMIYmsaGtaGNGgAABo7AFVmd qxEbMqAgICAgICAgICAgICAgICAgICAgIObY5kDPPVPkjkjEMz Eu4nObfWM22lXseqrWkRPVUvp7TbeG wTIakprOe30mUfakAzb hZqHvWjJqb26cobaYK19UqAWhuVQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQf 9k The above image flips across the x axis. One simple solution to this is to add some extra pixels around the borders so that even if we lose information in pixels it will not affect our model much. We can either flip our set of images across the x axis or we can flip our set of images across the y axis. org urologic conditions prostate cancer https www. It is going to be very useful for our image processing and we will use many variations of these functions later on for our different transforms. We can use 2 dimensional elastic deformation where the strain is the measure of deformation. org wikipedia commons thumb 3 3c DeformationOfRod_plain. org Monai https monai. Padding in action baby YOU ARE HERE 80 5. Elastic DeformationElastic deformation basically applies an invisible stress to our image in such a manner that the image gets deformed due to the virtual stress applied. But don t think padding is only used in Convolutional layers we can also use padding as a transform with MONAI. org api python Matplotlib https matplotlib. YOU ARE HERE 100 APPENDIX A A list of useful resources and credits Credits to the libraries used Pandas https pandas. I shall try to cover a lot of methods of preprocessing data augmentation and i ll also try to use a variety of libraries including MONAI which is a very useful library for medical image processing and segmentation. Why Well convolutional layers often tend to lose pixels on the side of the image sometimes. Prostate cancer is a deadly form of cancer which affects the prostate gland in men. org wiki Deformation_ mechanics. Experimental Method from APTOSI have read Neuron Engineer s notebook on APTOS and I have also read about a very useful preprocessing method used in that competition to great effect. To keep it relatively useless besides being a dummy in a metaphorical sense we keep most of the values 0. org Openslide https openslide. png We can similarly apply such virtual stress to our image to deform it. svg In the above image we have a padded input which is then processed into a kernel and then comes out as a 4 x 4. The Affine TransformThe affine transform is any function than can preserve collinearity. A Our Image Reading FunctionThis is our simple function to show read images from Gabriel s kernel. Flipped images Flipping as a transform is rather self explanatory. Spatial PaddingSpatial padding is used in Convolutional layers. With a small amount of Convolutional layers it s fine but with many convolutional layers the pixel loss tends to add up over and over again and it can eventually spiral out of control. Spatial Padding4 5. YOU ARE HERE 20 2. I am not exactly sure of how well it will work but I am willing to try it out. PANDA Image Data Augmentation Techniques w MONAI Hello there This is a notebook of mine whose aim is to find out suitable preprocessing methods for this competition on prostate cancer detection. This is an example of strain in real life https upload. YOU ARE HERE 40 3. The Affine Transform1 2. Convolutional layers often pad with odd numbers such as 1 3 5 or 7. There are multiple examples of affine transforms which you would have heard in high school mathematics Shear Translate Reflect Rotate Geometric contraction et. This transform actually is a concept in real life apply stress to an object in such a way that the original position is recoverable even after having applied stress elasticity basically. We can see dummy pixels being placed at the end borders of our images. org api rest_v1 media math render svg 77b3bbb9d1485775abe0dc7069df39c807ba6988 For more on the mathematical side you can see the Wikipedia page here https en. ", "id": "nxrprime/panda-image-data-augmentation-techniques-w-monai", "size": "15742", "language": "python", "html_url": "https://www.kaggle.com/code/nxrprime/panda-image-data-augmentation-techniques-w-monai", "git_url": "https://www.kaggle.com/code/nxrprime/panda-image-data-augmentation-techniques-w-monai", "script": "show_images_affine show_images_rotate show_images_elastic2d numpy matplotlib.pyplot pandas show_images monai.transforms ", "entities": "(('Image Reading FunctionThis', 'kernel'), 'be') (('affine TransformThe transform', 'collinearity'), 'Affine') (('image', 'virtual stress'), 'apply') (('we', 'y axis'), 'flip') (('Thus we', 'odd numbers'), 'preserve') (('we', 'values'), 'keep') (('it', 'model'), 'be') (('strain', 'https simply wikimedia'), 'represent') (('over over it', 'eventually control'), 's') (('we', 'later on different transforms'), 'go') (('Spatial PaddingSpatial padding', 'Convolutional layers'), 'use') (('Wikipedia page', 'mathematical side'), 'render') (('This', 'life https real upload'), 'be') (('which', 'men'), 'be') (('I', 'great effect'), 'read') (('you', 'school high mathematics'), 'be') (('org wikipedia commons', '3c 3 DeformationOfRod_plain'), 'thumb') (('Why convolutional layers', 'image'), 'tend') (('png We', 'it'), 'apply') (('Credit', 'HTML notebook'), 'go') (('yqlrTad5WYiI5Q9KhIgICAgICAgICAgICAgICAgICDhmUUlq Zx1NqrnsDgV18X8uPo5uT45 rcYxl5LJcQM4FnSdZ0vhqHvWumniPiZ2zTPRq8MwKuxF2e1rntdrkkJDO4nSe5bL5aY', 'qxEbMqAgICAgICAgICAgICAgICAgICAgIObY5kDPPVPkjkjEMz Eu4nObfWM22lXseqrWkRPVUvp7TbeG hZqHvWjJqb26cobaYK19UqAWhuVQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQf image x above axis'), 'image') (('dummy pixels', 'images'), 'see') (('we', 'MONAI'), 'think') (('first trick', 'line'), 'take') (('where strain', 'deformation'), 'use') (('Flipped images', 'transform'), 'be') (('which', 'image very useful medical processing'), 'try') (('We', 'Rand2DElastic transform'), 'simulate') (('aim', 'cancer prostate detection'), 'Techniques') (('I', 'it'), 'be') (('YOU', 'action baby'), 'pad') (('that', 'notebook'), 'try') (('following image', 'https d2l'), 'give') (('We', 'necessarily one geometric transforms'), 'apply') (('YOU', 'Pandas https pandas'), 'are') (('Convolutional layers', 'such 1'), 'pad') (('original position', 'stress even elasticity'), 'be') (('which', 'then 4 4'), 'svg') ", "extra": "['bag']", "label": "Perfect_files", "potential_description_queries": ["affine", "api", "apply", "augmentation", "best", "cancer", "channel", "competition", "concept", "convert", "convolutional", "create", "data", "describe", "dimensionality", "dummy", "end", "even", "find", "flip", "following", "form", "function", "geometric", "high", "image", "including", "input", "interpolation", "kernel", "library", "life", "list", "lot", "manner", "math", "measure", "medical", "method", "mode", "model", "most", "multiple", "not", "notebook", "object", "out", "pad", "padding", "page", "pixel", "png", "position", "preprocessing", "processing", "prostate", "python", "read", "render", "school", "segmentation", "sense", "set", "side", "solution", "sort", "spatial", "think", "thumb", "transform", "try", "up", "work"], "potential_description_queries_len": 73, "potential_script_queries": ["numpy"], "potential_script_queries_len": 1, "potential_entities_queries": ["even", "high", "medical"], "potential_entities_queries_len": 3, "potential_extra_queries": ["bag"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 75}