{"name": "phosphate cluster analysis xgm lgbm ", "full_name": " h2 1 Import libraries h2 2 Download datasets h2 3 EDA h2 Data clustering h2 4 Preparing to modeling h3 XGB h3 LGBM ", "stargazers_count": 0, "forks_count": 0, "description": "com vbmokin code starter phosphate prediction in river 1. Download datasets Back to Table of Contents 0. 1 This code is based on my kernel FE EDA with Pandas Profiling https www. com vbmokin bod prediction in river 15 regression models https www. Import libraries Back to Table of Contents 0. Thanks for helping in this work to Vitalii Mokin vbmokin and his kernels https www. EDA Back to Table of Contents 0. 1 XGB LGBM preprocessing models model tuning For boosting model Synthesis valid as test for selection models For models from Sklearn Synthesis valid as test for selection models Relative error between predicted y_pred and measured y_meas values RMSE between predicted y_pred and measured y_meas values Calculation of accuracy of boosting model by different metrics Calculation of accuracy of model \u0430\u043a\u0449\u044c Sklearn by different metrics split training set to validation set. com vbmokin fe eda with pandas profiling Data clustering 4. Preparing to modeling Back to Table of Contents 0. ", "id": "tinakhs/phosphate-cluster-analysis-xgm-lgbm", "size": "797", "language": "python", "html_url": "https://www.kaggle.com/code/tinakhs/phosphate-cluster-analysis-xgm-lgbm", "git_url": "https://www.kaggle.com/code/tinakhs/phosphate-cluster-analysis-xgm-lgbm", "script": "sklearn.metrics Trials cross_val_score PCA acc_model acc_rmse sklearn.tree tpe ExtraTreesRegressor lightgbm DecisionTreeRegressor train_test_split acc_d cross_val_predict as cvp pandas_profiling SVR sklearn.neural_network VotingRegressor r2_score mean_squared_error seaborn numpy AdaBoostRegressor RandomForestRegressor SimpleImputer GradientBoostingRegressor sklearn.impute hyperopt fmin cross_val_predict sklearn.decomposition sklearn.ensemble sklearn.model_selection sklearn metrics LabelEncoder acc_boosting_model space_eval MLPRegressor PCA as PCA matplotlib.pyplot RidgeCV pandas silhouette_samples cm StandardScaler STATUS_OK GridSearchCV BaggingRegressor mean_absolute_error sklearn.linear_model sklearn.preprocessing StratifiedKFold sklearn.svm LinearSVR matplotlib xgboost SGDRegressor hp LinearRegression ", "entities": "(('Import', 'Contents'), 'librarie') (('\u0430\u043a\u0449\u044c Sklearn', 'validation set'), 'valid') (('Download', 'Contents'), 'dataset') (('Data', '4'), 'eda') (('code', 'Pandas Profiling https www'), '1') ", "extra": "['test']", "label": "Perfect_files", "potential_description_queries": ["accuracy", "boosting", "clustering", "code", "eda", "error", "kernel", "model", "my", "prediction", "preprocessing", "profiling", "regression", "selection", "set", "split", "test", "training", "tuning", "valid", "validation", "vbmokin", "work"], "potential_description_queries_len": 23, "potential_script_queries": ["cm", "cvp", "fmin", "hp", "hyperopt", "lightgbm", "matplotlib", "numpy", "seaborn", "sklearn", "tpe", "xgboost"], "potential_script_queries_len": 12, "potential_entities_queries": [], "potential_entities_queries_len": 0, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 35}