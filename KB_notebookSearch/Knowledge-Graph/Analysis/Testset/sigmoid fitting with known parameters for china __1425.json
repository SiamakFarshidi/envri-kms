{"name": "sigmoid fitting with known parameters for china ", "full_name": " h1 Sigmoid vs Polynomial Linear ", "stargazers_count": 0, "forks_count": 0, "description": "com group16 s notebook were the main inspiration sources for rewriting my linear notebook to sigmoid fitting. matplotlib notebook artifact s in the dataset https www. com watch v Kas0tIxDvrg I knew sigmoids were the true functions I was trying to fit. com marychin check non cumulative confirmedcases fatalities. If I would have had more time I would have tried to categorise continents countries etc according to what phase I believe they are currently in early or late phase and if I considered them high risk or outliers e. Hubei Italy New York. However these functions became too awkward and most importantly I could not guide them in any way. com casras s notebook COVID19 EDA and exponential curve fitting predict https www. com group16 sigmoid per country I came in contact with this research project at TU Eindhoven https www. Both this study and Gilles Vandewiele https www. Through this notebook https www. com jorijnsmit ridge regression of confirmed cases and fatalities. com casras covid19 eda and exponential curve fitting predict. A notebook which does this quite well already automatically is claudiu https www. Sigmoid vs Polynomial LinearI initially started out with a polynomial linear regression model using Ridge here https www. Based on this explainer on YouTube about exponential growth https www. nl en news news overview 11 03 2020 eindhoven data scientists take on corona data to predict growth of new infections. ", "id": "jorijnsmit/sigmoid-fitting-with-known-parameters-for-china", "size": "1425", "language": "python", "html_url": "https://www.kaggle.com/code/jorijnsmit/sigmoid-fitting-with-known-parameters-for-china", "git_url": "https://www.kaggle.com/code/jorijnsmit/sigmoid-fitting-with-known-parameters-for-china", "script": "known_popt plot_curve tqdm sigmoid numpy matplotlib.pyplot predict_curve append_predictions tqdm.notebook main pandas get_curve scipy.optimize curve_fit ", "entities": "(('them', 'currently early phase'), 'have') (('I', 'TU Eindhoven https www'), 'sigmoid') (('Sigmoid', 'https Ridge here www'), 'start') (('data 11 03 2020 eindhoven scientists', 'new infections'), 'take') (('true I', 'com Kas0tIxDvrg'), 'watch') (('which', 'this'), 'be') (('notebook', 'fitting'), 'com') (('matplotlib notebook artifact', 'https dataset www'), 's') (('curve fitting', 'https www'), 'casras') (('too most importantly I', 'way'), 'become') ", "extra": "", "label": "No_extra_files", "potential_description_queries": ["artifact", "check", "contact", "could", "country", "curve", "data", "dataset", "eda", "en", "fitting", "growth", "high", "initially", "linear", "main", "matplotlib", "model", "most", "my", "new", "non", "not", "notebook", "out", "overview", "per", "predict", "project", "regression", "research", "risk", "sigmoid", "time"], "potential_description_queries_len": 34, "potential_script_queries": ["numpy", "tqdm"], "potential_script_queries_len": 2, "potential_entities_queries": ["most"], "potential_entities_queries_len": 1, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 34}