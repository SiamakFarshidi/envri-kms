{"name": "aviation fatalities 4models ", "full_name": " h1 Data Description h1 Data understanding h1 Data preparation ", "stargazers_count": 0, "forks_count": 0, "description": "K Nearest Neighbours5. com kaggle docker python For example here s several helpful packages to load in linear algebra data processing CSV file I O e. show start time. time clf_3 OneVsRestClassifier BaggingClassifier SVC kernel linear probability True class_weight balanced max_samples 1. Train Test splittingAs we had seen there is different counts of the observations by states. 2384186 \u00b5V and a range of 2. So further normalization we will apply only to the train dataset. score x_test y_test pr_score precision_score y_test y_pred average weighted rc_score recall_score y_test y_pred average weighted print KNN_score KNN_score print precision_score pr_score print recall_score rc_score print KNN_time KNN_time cm confusion_matrix y_test y_pred print confusion_matrix n cm plt. The data are provided in microvolts. Startle Surprise SS is induced by having the subjects watch movie clips with jump scares. For example running this by clicking run or pressing Shift Enter will list all files under the input directory Any results you write to the current directory are saved as output. Target Experiment The pilots experienced distractions intended to induce one of the following three cognitive states Channelized Attention CA is roughly speaking the state of being focused on one task to the exclusion of all others. In this dataset we re given three main physiological parameters Respiration r Electrocardiogram ECG Electroencephalogram EEG Galvanic Skin Response gsr For each experiment a pair of pilots each with its own crew id was recorded over time and subjected to the CA DA or SS cognitive states. The galvanic skin response GSR which falls under the umbrella term of electrodermal activity or EDA refers to changes in sweat gland activity that are reflective of the intensity of our emotional state otherwise known as emotional arousal. Data Description The aim is to develop model to predict event by physiological data from eighteen pilots who were subjected to various distracting events. So dataset is disbalanced. 9792491167469167 confusion_matrix 843234 1578 2886 6945 1970 36990 205 14 2653 168 492895 90 13704 6 82 56807 This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python docker image https github. fit x_train y_train end time. RespirationA measure of the rise and fall of the chest. Decision Tree Classifier2. Samples are labelled the following way A baseline B SS C CA D DA More details https www. time clf_4 KNeighborsClassifier n_neighbors 3 clf_4 clf_4. Support Vector Machine Classifier4. predict x_test SVC_time end start SVC_score clf_3. Normalize data by pilotsIt should be noted we going to use train dataset for both train and test model. Periodically a math problem showed up which had to be solved before returning to the monitoring task. multiclass import OneVsRestClassifier from sklearn. predict x_test KNN_time end start KNN_score clf_4. We going to use all following features for further analysis. Galvanic Skin Response. com c reducing commercial aviation fatalities data Data understanding The aim of this stage is to illuminate some relation between features by plotting or simple modelling. read_csv Input data files are available in the. The training set contains three experiments one for each state in which the pilots experienced just one of the states. Histogram of the pilot s stateHistogram of the events in the experiments Electroencephalogram recordingsWe also check if features have the same distribution on the test and train setElectrocardiogram3 point Electrocardiogram signal. 9407982457522015 confusion_matrix 848084 366 5431 762 16281 22371 526 1 10156 12 485600 38 52575 2 298 17724 dec_tree_score 0. time y_pred clf_4. 012215 \u00b5V and a range of 100mV to 100mV. So this features should be coded by integer values further. The sensor had a resolution bit of. This is induced by having the subjects perform a display monitoring task. To obtain data set in the one range mark category values with integer numbers. This is how the stakeholders want to see the results of predictions on the test datasetAs we can see below features are numerical values except experiment and event. 0 n_estimators n_estimators n_estimators clf_3 clf_3. score x_test y_test pr_score precision_score y_test y_pred average weighted rc_score recall_score y_test y_pred average weighted f1_score f1_score y_test y_pred average weighted print SVC_score SVC_score print precision_score pr_score print recall_score rc_score print f1_score f1_score cm confusion_matrix y_test y_pred print confusion_matrix n cm plt. Diverted Attention DA is the state of having one s attention diverted by actions or thought processes associated with a decision. A measure of electrodermal activity. The benchmark training set is comprised of a set of controlled experiments collected in a non flight environment outside of a flight simulator. In a nutshell we can resume following resultsthere are no NAN s values in the data all features eeg ecg raspiration have similar distribution in the train and test datasets there is need in some normalization method because of different feature ranges Data preparation Objective of this stage is to prepare data for model. In such case for Train Test splitting better to use StratifiedShuffleSplit method for proportional splitting by all classesSplitting datasets plot Modelling Coding categorical features event by integersLets consider following models 1. time y_pred clf_3. The test set abbreviated LOFT Line Oriented Flight Training consists of a full flight take off flight and landing in a flight simulator. Key ideas drop out NAN s values delete error or noise values normalize data. show f1_score f1_score y_test y_pred average weighted print f1_score f1_score. This is induced in benchmarking by having the subjects play an engaging puzzle based video game. ensemble import BaggingClassifier import time n_estimators 3 start time. print f1_score f1_score from sklearn. Each sensor operated at a sample rate of 256 Hz. Multilayer Perceptron ClassifierDecisionTreeClassifierMetrics score precision_score recall_score F1 scoreRandom ForestSVMKNNMLPSo we can resume that models in this configuration have following scores and confuson matrix RF_score 0. ", "id": "avk256/aviation-fatalities-4models", "size": "5018", "language": "python", "html_url": "https://www.kaggle.com/code/avk256/aviation-fatalities-4models", "git_url": "https://www.kaggle.com/code/avk256/aviation-fatalities-4models", "script": "sklearn.metrics cross_val_score sklearn.tree pyplot as plt BaggingClassifier StratifiedShuffleSplit recall_score precision_score MinMaxScaler KNeighborsClassifier sklearn.neural_network DecisionTreeClassifier pyplot numpy seaborn GradientBoostingClassifier sklearn.ensemble OneVsRestClassifier sklearn.model_selection confusion_matrix f1_score KFold RandomForestClassifier sklearn.multiclass pandas tqdm sklearn.neighbors SVC matplotlib sklearn.preprocessing sklearn.svm MLPClassifier normalize_by_pilots ", "entities": "(('So further normalization we', 'train only dataset'), 'apply') (('True class_weight', 'max_samples'), 'linear') (('sensor', '256 Hz'), 'operate') (('Attention Diverted DA', 'thought decision'), 'be') (('training benchmark set', 'flight outside simulator'), 'comprise') (('subjects', 'video based game'), 'induce') (('who', 'various distracting events'), 'description') (('test', 'flight simulator'), 'consist') (('we', 'train model'), 'note') (('Train splittingAs we', 'states'), 'Test') (('pilots', 'states'), 'contain') (('We', 'further analysis'), 'go') (('Data preparation Objective', 'model'), 'be') (('Electrocardiogram', 'setElectrocardiogram3 point'), 'check') (('subjects', 'task'), 'induce') (('you', 'output'), 'list') (('noise delete values', 'data'), 'drop') (('which', 'monitoring task'), 'show') (('i d', 'CA SS DA states'), 'give') (('that', 'otherwise emotional arousal'), 'refer') (('It', 'python docker image https kaggle github'), '9792491167469167') (('read_csv Input data files', 'the'), 'be') (('com aviation data reducing commercial aim', 'features'), 'fatality') (('we', 'numerical experiment'), 'be') (('subjects', 'jump scares'), 'induce') (('So features', 'integer values'), 'code') (('Target pilots', 'others'), 'Experiment') (('y_pred y_test average', 'recall_score'), 'score') (('Multilayer Perceptron ClassifierDecisionTreeClassifierMetrics score precision_score recall_score F1 scoreRandom ForestSVMKNNMLPSo we', 'scores'), 'resume') ", "extra": "['test', 'bag']", "label": "Perfect_files", "potential_description_queries": ["apply", "associated", "average", "baseline", "benchmark", "bit", "case", "categorical", "category", "check", "cm", "consider", "current", "data", "dataset", "develop", "directory", "display", "distribution", "drop", "end", "ensemble", "environment", "error", "event", "experiment", "feature", "file", "fit", "following", "id", "image", "import", "input", "integer", "intensity", "kaggle", "kernel", "labelled", "linear", "list", "load", "main", "math", "matrix", "measure", "method", "model", "movie", "need", "no", "noise", "non", "normalization", "normalize", "numerical", "out", "pair", "perform", "pilot", "plot", "plotting", "point", "predict", "prepare", "print", "probability", "problem", "processing", "python", "range", "re", "relation", "resolution", "response", "run", "running", "sample", "score", "sensor", "set", "several", "similar", "skin", "splitting", "stage", "start", "state", "task", "term", "test", "thought", "time", "train", "training", "under", "understanding", "up", "video", "who", "write", "y_test"], "potential_description_queries_len": 102, "potential_script_queries": ["matplotlib", "numpy", "plt", "pyplot", "seaborn", "sklearn", "tqdm"], "potential_script_queries_len": 7, "potential_entities_queries": ["data", "kaggle", "score"], "potential_entities_queries_len": 3, "potential_extra_queries": ["bag"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 110}