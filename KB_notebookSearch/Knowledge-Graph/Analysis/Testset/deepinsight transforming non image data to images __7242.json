{"name": "deepinsight transforming non image data to images ", "full_name": " h1 DeepInsight Transforming Non image data to Images for CNN Architectures h1 Load MoA Data h1 Feature Encoding h1 Create Stratified Multi label K folds h1 DeepInsight Transform t SNE 2D Embeddings h2 Implementation h2 Norm 2 Normalization h2 t SNE Transformation h2 Convex Hull Algorithm h2 Visualization of Feature Map h3 Resolution 50 x 50 h3 Resolution 100 x 100 h2 Visualization of Feature Images h3 nfkb inhibitor h3 dna inhibitor h1 EOF ", "stargazers_count": 0, "forks_count": 0, "description": "The following diagram outlines the key steps. of training set Adjust min. DeepInsight Transforming Non image data to Images for CNN Architectures This notebook introduces an interesting and useful preprocessing method for non image data to be applicable in Convolutional Neural Networks CNN architectures. com kaggle markpeng MoA deepinsight_architecture. DeepInsight Transform t SNE 2D EmbeddingsBased on https github. nfkb_inhibitor dna_inhibitorIn the two runs of views to the feature map images we can clearly see distinguishable patterns across different MoA target classes. Finally the raw feature values are mapped into the pixel coordinate locations of the feature map image. of each feature of X by _min0 Log normalized X by log X _min0 1 Normalized again by global max. It seems clear that _ the larger the perplexity the greater the level of feature overlaps _. The similarity of features are estimated by cosine distance. The rotation will be applied by considering the gradient of two of the corner coordinates of the box. Load MoA Data Feature EncodingAs we only have three metadata features a quick manual encoding process is done. png Source https www. To see if the feature images could give a good representation of the raw features in different MoA targets we select the top 6 most frequent classes in the dataset and visualize a sample image for each of them. of training set per feature Log normalized X by log X _min0 1 Global max. gene expressions cell viabilities There is a discrepancy between the Matlab version aligned with the paper and Python version regarding feature normalization therefore some minor adjustments have been done here. All features are normalized into the value range of 0 1. To make the features separated to some extent while still keeping their neighboring relationships perplexity 5 is chosen for the deepinsight transformation process. Note that the resolution of feature map image affects the ratio of feature overlaps the features mapped to the same location are averaged which is a trade off between the level of lossy compression and computing resource requirements e. The effect of perplexity is also being studied. _DeepInsight A methodology to transform a non image data to an image for convolution neural network architecture_ Scientific Reports nature. Convex Hull AlgorithmThe convex hull algorithm is applied to find the minimum box covering all features. py The resolution of transformed image Transpose to get n_features n_samples Perform dimensionality reduction Get the convex hull for the points Determine the minimum bounding rectangle Rotate the matrix Save the rotated matrix in case user wants to change the pixel size Determine feature coordinates based on pixel dimension plot rotation diagram if requested Create subplots recalculate coordinates if already fit Group by location x1 y1 of each feature Tranpose to get n_features n_samples x1 y1 Group by location x1 y1 of each feature Tranpose to get n_features n_samples x1 y1 Calculate edge angles Find rotation matrices Apply rotations to the hull Find the bounding points Find the box with the best area Return the best box Generate coordinates Create subplots Transpose to get n_features n_samples Transpose to get n_features n_samples Plot image matrix with feature counts per pixel Update image size Create subplots Feature Overlapping Counts x1 y1 Plot image matrix with feature counts per pixel Create subplots Select the random row of each class cmap hot Plot image matrix with feature counts per pixel Create subplots Select the random row of given class cmap hot. Lower resolution will cause more features to be gathered into the same pixel location. This kind of transformation should open up the gates of transfer learning ResNeSts EfficientNets DenseNets and creative data augmentation techniques CutMix Mixup etc. of training set from X_norm Normalized again by global max. com articles s41598 019 47765 6The authors had tested the method with a parallel CNN architecture on different kinds of datasets including RNA seq data gene expressions Text data and Speech data and showed positive results. First of all a non linear dimensionality reduction technique like t SNE or Kernel PCA is applied to transform raw features into a 2D embeddings feature space. Most of the credits should be given to the original authors ImplementationCheckout DeepInsight paper supplementary information for more details. The idea is very straightforward Instead of doing feature extraction and selection for collected samples N samples x d features we would like to find a way of arranging similar or correlated features into the neighboring regions of a 2 dimensional feature map d features x N samples to ease the learning of their complex relationships and interactions. Let s compare more samples of the same classes. Here we randomly select four samples from the top 1 and top 5 class. In this notebook the outlook of feature maps for all MoA features is demonstrated by t SNE. DeepInsight Architecture https storage. com alok ai lab DeepInsight but with some corrections to the norm 2 normalization. Create Stratified Multi label K foldsHere only the first fold is used as training and validate sets for demonstration. With this general approach in theory we could transform any kind of non image data into feature map images as a friendly representation of samples to CNNs which provide several unique benefits compared with other neural network architectures such as automated feature extraction from raw features and memory footprint reduction by effective weight sharing. com alok ai lab DeepInsight blob master pyDeepInsight image_transformer. Visualization of Feature MapFeature maps under different resolutions are visualized. This is a good news to the potentials of applying CNN based models in this competition EOFThanks for reading through this post I hope you gain some good ideas for the improvement and diversity of your models. Norm 2 NormalizationAgain raw features are normalized into the value range of 0 1. for this small gene expression dataset. Resolution 50 x 50 Resolution 100 x 100 Visualization of Feature ImagesOnce we got the feature map the raw feature values can be mapped to the corresponding pixel locations in the image. You can also separate the transformation process for different groups of features e. of training set from X_norm Min. of training set Modified from DeepInsight Transform https github. t SNE TransformationIn the nice post of How to Use t SNE Effectively we have seen that the choice of perplexity a guess about the number of close neighbors each point has in the t SNE algorithm is tricky and its visual output in the embeddings feature space could be misleading. Their implementation was in Matlab but in the public Github repository they shared it also includes a Python version for the transformation part. It was published in _Scientific Reports_ of Nature in 2019 and I occasionally discovered it while searching for related deep learning materials to Mechanisms of Action. Modified from DeepInsight Transform https github. The generation of feature map only relies on the training set to ensure the generalization of preprocessed data and further trained models. Also a great source of model diversity for the ensembles Please upvote or cite this notebook if you like it thanks Next Reading DeepInsight EfficientNet B3 Infernece Notebook Reference Sharma Alok Edwin Vans D. Here several values of perplexity are being set to see the difference typical values are between 5 and 50. For the ease of visualization here the resolution is set to 50. Secondly the convex hull algorithm is used to find the smallest rectangle containing all features and a rotation is performed to align the feature map frame into a horizontal or vertical form. host GPU memory storage. ", "id": "markpeng/deepinsight-transforming-non-image-data-to-images", "size": "7242", "language": "python", "html_url": "https://www.kaggle.com/code/markpeng/deepinsight-transforming-non-image-data-to-images", "git_url": "https://www.kaggle.com/code/markpeng/deepinsight-transforming-non-image-data-to-images", "script": "__init__ PCA plot_embed_2D fit_transform plot_class_feature_images ConvexHull pyplot as plt LogScaler TSNE seaborn numpy pyplot plot_feature_density scipy.spatial sklearn.decomposition _minimum_bounding_rectangle _calculate_coords pixels iterstrat.ml_stratifiers feature_density_matrix KernelPCA matplotlib.pyplot tsne_transform sklearn.manifold pandas MultilabelStratifiedKFold DeepInsightTransformer fit matplotlib plot_feature_images transform ", "entities": "(('rotation', 'box'), 'apply') (('_', 'feature overlaps the greater _'), 'seem') (('minimum box', 'features'), 'apply') (('effect', 'perplexity'), 'study') (('kind', 'data augmentation creative Mixup'), 'open') (('you', 'models'), 'be') (('here resolution', '50'), 'set') (('visual output', 'embeddings feature space'), 't') (('only first fold', 'demonstration'), 'label') (('I', 'Action'), 'publish') (('com 019 47765 6The authors', 'positive results'), 'article') (('therefore minor adjustments', 'feature normalization'), 'viability') (('similarity', 'cosine distance'), 'estimate') (('feature Finally raw values', 'feature map image'), 'map') (('which', 'lossy compression'), 'note') (('Plot image matrix', 'class cmap given hot'), 'py') (('N we', 'complex relationships'), 'be') (('Most', 'ImplementationCheckout DeepInsight paper supplementary more details'), 'give') (('rotation', 'horizontal form'), 'use') (('You', 'features e.'), 'separate') (('feature raw values', 'image'), 'Resolution') (('outlook', 't SNE'), 'demonstrate') (('s', 'same classes'), 'let') (('which', 'memory footprint weight effective sharing'), 'transform') (('we', 'MoA target different classes'), 'dna_inhibitorin') (('features', 'transformation 5 deepinsight process'), 'choose') (('following diagram', 'key steps'), 'outline') (('com alok', 'norm 2 normalization'), 'ai') (('Visualization', 'different resolutions'), 'visualize') (('Here we', 'top 1'), 'select') (('it', 'transformation part'), 'be') (('you', 'Reading'), 'source') (('more features', 'pixel same location'), 'cause') (('notebook', 'Convolutional Neural Networks'), 'Transforming') (('Norm 2 NormalizationAgain raw features', '0'), 'normalize') (('we', 'them'), 'see') (('typical values', '5'), 'set') (('features', '0'), 'normalize') (('generation', 'preprocessed data'), 'rely') ", "extra": "['biopsy of the greater curvature', 'test']", "label": "Perfect_files", "potential_description_queries": ["algorithm", "approach", "architecture", "area", "augmentation", "best", "blob", "bounding", "box", "case", "cause", "cell", "choice", "clear", "close", "compare", "competition", "convolution", "cosine", "could", "data", "dataset", "difference", "dimension", "dimensionality", "diversity", "ease", "edge", "effect", "encoding", "ensure", "expression", "extent", "extraction", "feature", "find", "fit", "fold", "following", "frame", "frequent", "general", "generalization", "generation", "gradient", "hope", "hot", "idea", "image", "implementation", "improvement", "including", "kaggle", "key", "lab", "label", "learning", "level", "linear", "log", "manual", "map", "matrix", "memory", "metadata", "method", "minimum", "model", "most", "network", "neural", "non", "norm", "normalization", "normalized", "notebook", "number", "open", "output", "parallel", "per", "pixel", "plot", "png", "point", "positive", "post", "preprocessing", "provide", "public", "py", "random", "range", "ratio", "raw", "reading", "repository", "representation", "resolution", "row", "sample", "select", "selection", "separate", "set", "several", "similar", "similarity", "size", "source", "space", "target", "technique", "theory", "through", "training", "transfer", "transform", "transformation", "under", "unique", "up", "user", "validate", "value", "version", "vertical", "visualization", "visualize", "weight", "while"], "potential_description_queries_len": 131, "potential_script_queries": ["matplotlib", "numpy", "plt", "pyplot", "seaborn"], "potential_script_queries_len": 5, "potential_entities_queries": ["feature", "map", "target"], "potential_entities_queries_len": 3, "potential_extra_queries": ["biopsy of the greater curvature", "biopsy", "test"], "potential_extra_queries_len": 3, "all_components_potential_queries_len": 138}