{"name": "covid 19 spread in india eda interactive maps ", "full_name": " h2 This Notebook will demonstrate following things h2 First import The Three Libraries of Python h2 Load the data files h2 Remove the unnecessary columns from district data h1 Plot the important features across the states h3 Now select the data for top 20 states with respect to Confirmed cases h3 Draw Bar plots for the Top 20 states h3 Similarly select data for top 10 districts from India with respect to Confirmed cases h3 Draw the bar plots for top 10 districts h3 Tests dataset processing to plot h3 Draw the interactive map to see the relationship of number of tests with positive Confirmed cases using plotly h1 Plotting Covid 19 data on India Map using geopandas h3 First read the shape file of India which has the geometries of Indian states h2 Merge the state data file with shape file h3 Plotting Confirmed cases on map of India Heatmap h3 Plotting Recovered cases on map of India Heatmap h3 Plotting Deaths cases on map of India Heatmap h1 Interactive TimeSlider Choropleth map h3 Import the libraries and read daily Covid 19 data of Indian States h3 We drop the unnecessary columns rename the columns of state names in both the states data and map df shapefile data and then merge the two data according to State h3 Delete the rows containing confirmed cases equal to zero h3 Transform confirmed cases to log10 scale to reduce the scale of plotting h3 Convert Date into standard format h3 Select the only columns important for plotting h3 Sort the data according to date and State names h3 Define a colour map in terms of the log of the number of confirmed cases h3 Next we create style dictionary h3 Make a dataframe containing the features for each Indian state h2 Final step create our map and add a colourbar Save the choropleth map created in HTML frmat so that you can visualize it in the browser h2 View HTML output file in the Jupyter Notebook h2 Please comment for improvisation of the notebook and don t forget to upvote if this notebook is helpful h1 Thank You ", "stargazers_count": 0, "forks_count": 0, "description": "Merge the state data file with shape file Plotting Confirmed cases on map of India Heatmap Plotting Recovered cases on map of India Heatmap Plotting Deaths cases on map of India Heatmap Interactive TimeSlider Choropleth mapA choropleth map is a type of thematic map in which areas are shaded or patterned in proportion to a statistical variable that represents an aggregate summary of a geographic characteristic within each area. View HTML output file in the Jupyter Notebook Please comment for improvisation of the notebook and don t forget to upvote if this notebook is helpful. Plotting data on India map using shapefile and geopandas library. Import the libraries and read daily Covid 19 data of Indian States We drop the unnecessary columns rename the columns of state names in both the states data and map_df shapefile data and then merge the two data according to State. Thank You Slide the bar to see the Covid 19 spread across Indian states from 14 March 20 to 6 August 20 Drop the column of Totals Plot the Confirmed Recovered Active and Deaths on the same plot using matplotlib Position of bars on x axis Width of a bar Position of bars on x axis Width of a bar Hover over the image to see the details of each state check the head of the file plot the figure Drop all the rows with any null values Please zoom on India before using slider bar. Convert Date into standard format Select the only columns important for plotting Sort the data according to date and State names Define a colour map in terms of the log of the number of confirmed cases Next we create style dictionary Make a dataframe containing the features for each Indian state Final step create our map and add a colourbar. How to get interactive Time slider choropleth map as follows Zoom on India before using slider bar. Slide the bar to see the Covid 19 spread across Indian states from 14 March 20 to 6 August 20 First import The Three Libraries of Python Load the data files Remove the unnecessary columns from district data Plot the important features across the states Now select the data for top 20 states with respect to Confirmed cases. We map the Covid 19 summary on India map. Draw Bar plots for the Top 20 states Similarly select data for top 10 districts from India with respect to Confirmed cases Draw the bar plots for top 10 districts Tests dataset processing to plot Draw the interactive map to see the relationship of number of tests with positive Confirmed cases using plotly Plotting Covid 19 data on India Map using geopandas First read the shape file of India which has the geometries of Indian states. Save the choropleth map created in HTML frmat so that you can visualize it in the browser. This Notebook will demonstrate following things Visualizing Covid 19 data in different ways. Delete the rows containing confirmed cases equal to zero Transform confirmed cases to log10 scale to reduce the scale of plotting. ", "id": "sumaiyasande2494/covid-19-spread-in-india-eda-interactive-maps", "size": "2663", "language": "python", "html_url": "https://www.kaggle.com/code/sumaiyasande2494/covid-19-spread-in-india-eda-interactive-maps", "git_url": "https://www.kaggle.com/code/sumaiyasande2494/covid-19-spread-in-india-eda-interactive-maps", "script": "branca.colormap geopandas TimeSliderChoropleth numpy IFrame matplotlib.pyplot pandas folium.plugins plotly.express IPython.display ", "entities": "(('Indian state Final step', 'colourbar'), 'Select') (('don notebook', 'notebook'), 'comment') (('Notebook', 'different ways'), 'demonstrate') (('We', 'State'), 'import') (('We', 'India map'), 'map') (('rows', 'scale'), 'delete') (('which', 'Indian states'), 'select') (('Plotting', 'shapefile library'), 'map') (('you', 'browser'), 'save') (('data files', 'Confirmed cases'), 'slide') (('that', 'area'), 'merge') (('figure', 'slider bar'), 'thank') ", "extra": "['test']", "label": "Perfect_files", "potential_description_queries": ["aggregate", "check", "column", "comment", "create", "data", "dataframe", "dataset", "date", "dictionary", "drop", "equal", "figure", "file", "following", "format", "head", "image", "import", "interactive", "log", "log10", "map", "matplotlib", "merge", "notebook", "null", "number", "output", "plot", "plotly", "plotting", "positive", "processing", "read", "reduce", "relationship", "scale", "select", "shape", "spread", "standard", "state", "step", "style", "summary", "type", "variable", "visualize", "zoom"], "potential_description_queries_len": 50, "potential_script_queries": ["display", "numpy"], "potential_script_queries_len": 2, "potential_entities_queries": [], "potential_entities_queries_len": 0, "potential_extra_queries": ["test"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 53}