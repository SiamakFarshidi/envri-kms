{"name": "masters final project eda ", "full_name": " h2 Kaggle LANL Earthquake Prediction Exploratory Data Analysis h3 Kevin Maher h3 Regis University MSDS696 Data Science Practicum II h3 Associate Professor Dr Robert Mason h4 May 2 2019 h4 Spring 2019 In partial fullfillment of the Master of Science in Data Science degree Regis University Denver CO h3 Introduction h3 Publication h3 Test Environment h3 Code Setup h3 Exploratory Data Analysis h3 Conclusions h3 Author Information h3 References ", "stargazers_count": 0, "forks_count": 0, "description": "We note that these are laboratory earthquakes not real earthquakes. The signal was windowed by small sections taken from a Hanning window along the edges in order to not cause an impulse like transient in a potential filter at start up. The test data consists of samples that are 150 000 samples long taken from earthquakes different from those in the test set. The NumPy Array A Structure for Efficient Numerical Computation. The simulated earthquakes tend to occur somewhat periodically because of the test setup but this periodicity is not perfect or guaranteed to the modeler attempting to predict the time until an earthquake in the test data provided. Phase plots for the Fourier transform. It appears that if signal spikes could be captured in some way it might help the effort to model time to failure. Windows are used to force the signal to be periodic in the time domain which reduces leakage effects at the signal endpoints in the Fourier transform. Load the data this takes a while. Frequency components of the signal could be very interesting to look at. Also there are peaks in the frequency analysis that may be valuable to collect in some manner. ConclusionsIt appears that this will be a difficult problem and that error is likely to be high relative to the mean time to failure. The Preda model utilizes the real and imaginary parts of the Fourier transform. But there also several similar such peaks that occur nearer the region centered in time between quakes. An examination of the Kaggle leader board confirms this as even the best scores show significant error as of the date of this Jupyter notebook. This discloses my code which is being submitted and shared to my professor and class for grading. Numpy is utilized to provide many numerical functions needed in the EDA van der Walt Colbert Varoquaux 2011. This noise however would almost entirely be removed by a low pass or band pass filter. These plots are very common on the Kaggle site s kernels section this one is taken from Preda 2019. com Upvotes and or github stars appreciated This code herein has been released under the span style color 337AB7 text decoration none text underline none Apache 2. The signal is recorded at 4MHz which is an extremely high sample rate for an acoustic sensor. com gpreda lanl earthquake eda and prediction Rouet Leduc B. There is therefore likely to be a need to examine the data in 150 000 sample chunks that represent the test signals. 375 seconds long plots signal and decreasing time to the next quake plot 150 000 to 30000 samples right around the earthquake plot test signals plot frequency components of the signal remove DC component otherwise it dominates the plot eliminate aliased portion of signal per Nyquist criteria plot frequency components of the signal with a gentle window remove DC component otherwise it dominates the plot eliminate aliased portion of signal per Nyquist criteria remove DC component otherwise it dominates the plot eliminate aliased portion of signal per Nyquist criteria determine is a signal contains a big peak as defined by an absolute value more than 2000. This may make it a difficult feature to work with and 99. SciPy is utilized to provide signal processing functions Jones E. It is very interesting that the high level spike in the signal occurs in row 3 column 1 in a signal only 0. Test EnvironmentDesigned and run in a Python 3 Anaconda environment on a Windows 10 computer. Here are some random samples of the training data and plots of the acoustic signal along with the time to failure. The author please requests a citation for the use or derivation of this work. LANL Earthquake Prediction. By expanding the time to failure plots it appears that the big spike in the signal before failure is remarkably consistent. PublicationIn an effort to comply with both university and Kaggle requirements this Jupyter notebook is being published on GitHub and on Kaggle. SciPy Open Source Scientific Tools for Python Retrieved from http www. Earthquakes occur when the time to failure signal blue jumps up from very near zero to a much higher value where that new higher value is the time to what is then the next quake. The goal of the project is to predict the time that an earthquake will occur in a laboratory test. The location of the gaps are not given to challenge participants Rouet Leduc 2019. The training input data consists of an acoustic signal that is over 629 million rows long. This is a set of plots of the Fourier transform windowed by short cosine tapers near the ends. These do not appear much different than plots 5 or even 8 seconds before the quake that are presented above where the time to failure ramps are shown. LANL Earthquake EDA and Prediction. None of the very high valued signal spikes were caught in a partial look at the test data. This data requires over 10GB of storage space on the computer s hard drive. Varoquaux G 2011. It is difficult to translate this to a frequency because of the signal gaps noted earlier. More features and samples. Probably limited phase features will be all that is desired for the model perhaps just the standard deviation. Define some constants for data location. Note that the y axis scales vary for all plots. There is a 12 microsecond gap between bins. Earthquakes are deemed to have occurred where the blue line jumps up in value representing the time to the next quake. Robert Mason May 2 2019 Spring 2019 In partial fullfillment of the Master of Science in Data Science degree Regis University Denver CO IntroductionPresented here is an Exploratory Data Analysis EDA for the Kaggle Earthquake Prediction Challenge Rouet Leduc et. There are over 629 million data rows. The is a signal spike high amplitude just before an earthquake but there are also signal spikes in other places that may complicate matters. There do not seem to be many obvious features in the signal to correlate with the time to system failure an earthquake. This looks like it will create major problems for accurate prediction. However there is also concern about the possibility of bogus peaks in the test data that do not correlate well with an actual quake. ReferencesHunter J. Computing in Science Engineering 9 21 29 DOI 10. A great starting approach for generating features to model this problem appears to be the mass statistical feature generation used by many scripts on the Kaggle kernels section. Somewhat shockingly we are trying to predict an earthquake from only around 0. The machine learning model notebook for this project will also be published in the same manner. A signal s standard deviation may prove to be a helpful predictor. The DC component was eliminated for plotting purposes because it would otherwise dominate the plot and make the other frequencies hard to see. Each acoustic signal value is associated with a time to failure the time when an earthquake happens. Because of the length of the data the plot samples every 100th data point. 6 of the time the quake needs to be predicted in the absence of the major signal spike. The author s plan for modeling is to use the Preda 2019 kernel as a starting point for feature generation and add band pass and low pass filtering to generate additional features. Given the noise level of the signal it would appear to be impossible to attempt reconstruction of the missing data. Author InformationKevin Maher Email Vettejeep365 gmail. If slicing the training data directly into 150k chunks then only 16 of 4194 training samples 0. Proceedings of the 9th Python in Science Conference 51 56. From the above plot we can see that 16 earthquakes occur in the data. 32 seconds before failure. Note that there appears to be little information in the signal above the 20 000th frequency line. Much of this feature generation seems to be come from work by Lukayenko 2019 and others credited by citations in his Kaggle kernel. com artgor earthquakes fe more features and samples McKinney W. IPython A System for Interactive Scientific Computing. 38 of signals test set signals are all 150k samples long. But as noted it is only present in about 0. There appears to be a short term high amplitude oscillation very shortly before each quake. With 16 quakes in the training set we might expect 10 quakes in the test set based on their relative sizes. Contrast this with other plots where the time to failure is many seconds away and the signal level peaks around 100. Matplotlib is used for plotting Hunter 2007. Pandas is very helpful for its ability to support data manipulation McKinney 2010. Kaggle LANL Earthquake Prediction Exploratory Data Analysis Kevin Maher Regis University MSDS696 Data Science Practicum II Associate Professor Dr. The region just after the big peak may be especially hard to predict. 0 open source license. The earthquakes happen when the time to failure reaches very nearly zero and then jumps up. One challenge of this competition is that there are only these very few earthquakes to work with. This spike reaches vales above 2000 and below 4000. Retrieved from https www. From the code below the test set big peaks seem to match the proportion with which they are found in the training data at 0. A similar situation occurs in row 4 column 2. A basic time series plot of the raw data. com c LANL Earthquake Prediction discussion 77526 latest 522727 van der Walt S. This is a plot of the Fourier transform magnitude for some of the test signals. Further there are not the same number of missing samples in each of the 150k long test sample files because 4096 does not evenly divide into 150 000. A check of the test data in the time domain is presented below it is difficult to tell from such short signal bursts if they match the character of the training data. Still it may be best to concentrate signal analysis on frequencies below those represented by the 20 000th frequency line. It is very interesting that windowing seems to emphasize noise. The laboratory test applies shear forces to a sample of earth and rock containing a fault line. However these are rare and the existence of the spikes will be taken up again later. com Vettejeep MSDS696 Masters Final Project. Because Fourier transform phase information appears to be essentially noise most Fourier statistics will likely be based on magnitude information. Noise appears to mostly disappear above the 25 000th frequency line. Code from here and below is commented out because the kernel dies Exploratory Data AnalysisLets validate the test files. A complicating factor is that the signal is recorded in bins that are 4096 samples in length. The number of earthquakes in the training set seems to be approximately proportional to the overall size relationship between the two sets. 04 seconds or so worth of data as can be noted from examining the right hand axes of the plots. Signal noise seems to increase as time gets closer to failure though there is also a drop after the big peak. Time to failure plots as a ramp because we are slowly approaching the next quake as the signal progresses in time. The expectation of 10 possible quakes in the test set should be considered cautiously and as only an approximation. While the acoustic signal is very large at over 600m rows the very small number of actual earthquakes available will make machine learning a challenge. Because of the difficulty in reconstructing the missing data or knowing where it is it has been decided to proceed with continuous signal processing techniques even though that is not strictly perfect. 38 of 150k sample training slices. The Jupyter environment in which this code is presented and was run is a descendant of the IPython environment originated by P\u00e9rez Granger 2007. This means that there are 46 48 samples of lost data in each gap depending on how the gap is interpreted. Many of these libraries request a citation when used in an academic paper. Find the indices for where the earthquakes occur then plotting may be performed in the region around failure. Below is a look at the signal just before failure an earthquake. Computing in Science Engineering 9 90 95 DOI 10. Also note that while referred to as an FFT in the code below this is actually a Discreet Fourier Transform DFT because the signal length of 150k samples is not a number that is a power of two. As seen by the code output there are 10 such files within the test set that exhibit the peak behavior. Having validated that the test samples are 150 000 samples long it could help to examine the training data in 150 000 sample chunks. This verifies that they all contain 150 000 samples as expected. The modeling and machine learning portion of the project may be found in a separate Jupyter notebook within the github repository https github. Thus the signal spike observed in the big picture plot above must occur more than one slice more than 150k samples before the earthquake. The most obvious feature is the big signal spike just before failure. It has been modified slightly for Kaggle and should now be working properly on Kaggle. Phase plots show what appears to be just noise. Computing in Science Engineering 13 22 30 DOI 10. The notebook was originally designed for a university course. The problem is that the 150k sample slices are actually very short compared to the overall time between quakes and thus these big apparently meaningful signal spikes are unlikely to be present in many training or test samples. There are only 15 complete time ramps that result in an earthquake and 2 incomplete time ramps. set for local environment set for local environment note to block uncomment all were 150 000 plot 150k sample slices of the training data matches size of test data 0. The idea of using the window is to avoid any start up transients that might cause ringing in filters applied to the signal. Data Structures for Statistical Computing in Python. com c LANL Earthquake PredictionRouet Leduc B. Code SetupThese are the needed library imports for problem setup. It is very interesting that the signal becomes quiet in the 150k sample slice before an earthquake. 38 would contain a meaningful high valued spike. This author will be working primarily with the traditional magnitude and phase output. Matplotlib A 2D Graphics Environment. Apparently the time to failure has limited resolution and so is represented by a stair step rather than a smooth line. It is possible that the analysis of these spikes in some manner could add predictive capability to any small number of test samples that might contain these features this possibility has not been explored by this author yet. ", "id": "vettejeep/masters-final-project-eda", "size": "14619", "language": "python", "html_url": "https://www.kaggle.com/code/vettejeep/masters-final-project-eda", "git_url": "https://www.kaggle.com/code/vettejeep/masters-final-project-eda", "script": "scipy.signal plot_acc_ttf_data numpy matplotlib.pyplot pandas tqdm_notebook tqdm hann ", "entities": "(('starting great approach', 'Kaggle kernels section'), 'appear') (('it', 'missing data'), 'appear') (('it', 'only about 0'), 'note') (('Jupyter notebook', 'Kaggle'), 'PublicationIn') (('possibility', 'author'), 'be') (('Preda model', 'Fourier transform'), 'utilize') (('spike', '4000'), 'reach') (('number', 'two sets'), 'seem') (('what', 'much higher value'), 'occur') (('which', 'grading'), 'disclose') (('Somewhat shockingly we', 'only around 0'), 'try') (('even that', 'processing continuous signal techniques'), 'because') (('available machine', 'challenge'), 'make') (('code', 'P\u00e9rez Granger'), 'be') (('time when earthquake', 'time'), 'associate') (('that', '4096 length'), 'be') (('data', 'hard drive'), 'require') (('Apparently time', 'stair so step'), 'limited') (('how gap', 'gap'), 'mean') (('plan', 'additional features'), 'be') (('It', 'now properly Kaggle'), 'modify') (('one', 'Preda'), 'be') (('most obvious feature', 'big signal just failure'), 'be') (('150 000 samples it', '150 sample 000 chunks'), 'help') (('code herein', 'none text none Apache'), 'com') (('when time', 'very nearly zero'), 'happen') (('Fourier essentially most statistics', 'magnitude likely information'), 'appear') (('Matplotlib', 'Hunter'), 'use') (('many seconds away signal level', '100'), 'contrast') (('16 earthquakes', 'data'), 'see') (('Still it', 'frequency 20 000th line'), 'be') (('we', 'relative sizes'), 'expect') (('that', 'manner'), 'be') (('that', 'well actual quake'), 'be') (('quake', 'signal major spike'), '6') (('which', 'sample extremely high acoustic sensor'), 'record') (('Code SetupThese', 'library problem needed setup'), 'be') (('very windowing', 'noise'), 'be') (('author', 'primarily traditional magnitude output'), 'work') (('None', 'test data'), 'catch') (('existence', 'spikes'), 'be') (('nearer region', 'quakes'), 'center') (('laboratory test', 'fault line'), 'apply') (('which', 'Fourier transform'), 'use') (('This', 'test signals'), 'be') (('time only 15 complete that', 'earthquake'), 'be') (('Numpy', 'EDA van der Walt Colbert Varoquaux'), 'utilize') (('where blue line', 'next quake'), 'deem') (('y axis scales', 'plots'), 'note') (('38', 'meaningful high valued spike'), 'contain') (('big spike', 'failure'), 'appear') (('One challenge', 'competition'), 'be') (('expectation', 'cautiously only approximation'), 'consider') (('SciPy', 'Jones E.'), 'utilize') (('Many', 'when academic paper'), 'request') (('com artgor earthquakes', 'more features'), 'fe') (('they', 'training data'), 'be') (('author', 'work'), 'request') (('modeling portion', 'github repository https github'), 'find') (('that', 'test signals'), 'be') (('that earthquake', 'laboratory test'), 'be') (('Thus signal spike', 'earthquake'), 'occur') (('impulse', 'potential filter'), 'windowe') (('Frequency components', 'signal'), 'be') (('that', 'peak behavior'), 'be') (('that', 'two'), 'note') (('thus big apparently meaningful signal spikes', 'many training'), 'be') (('Exploratory Data AnalysisLets', 'test files'), 'comment') (('even best scores', 'Jupyter notebook'), 'confirm') (('38', 'signals'), 'be') (('Noise', 'frequency mostly 25 000th line'), 'appear') (('it', 'accurate prediction'), 'look') (('Here random samples', 'failure'), 'be') (('they', '0'), 'seem') (('signal', 'more 2000'), 'signal') (('This', 'ends'), 'be') (('other frequencies', 'otherwise plot'), 'eliminate') (('signal', 'time'), 'time') (('it', 'failure'), 'appear') (('4096', '150 evenly 000'), 'be') (('Much', 'Kaggle kernel'), 'seem') (('model machine learning notebook', 'also same manner'), 'publish') (('they', '150 000 samples'), 'verify') (('time', 'also big peak'), 'seem') (('that', 'matters'), 'be') (('Pandas', 'data manipulation'), 'be') (('notebook', 'university originally course'), 'design') (('level very high spike', '3 column 1 signal'), 'be') (('04 seconds', 'plots'), 'note') (('set', 'matches test data'), 'note') (('that', 'acoustic signal'), 'consist') (('noise', 'pass however almost entirely low pass filter'), 'remove') (('similar situation', 'row'), 'occur') (('where earthquakes', 'failure'), 'find') (('that', 'test set'), 'consist') (('difficult error', 'failure'), 'appear') (('that', 'signal'), 'be') (('earthquake', 'test data'), 'tend') (('It', 'signal gaps'), 'be') (('failure ramps', '5 even 8 quake'), 'appear') (('location', 'Rouet Leduc'), 'give') (('that', 'model'), 'be') (('very signal', 'earthquake'), 'be') ", "extra": "['biopsy of the greater curvature', 'test']", "label": "Perfect_files", "potential_description_queries": ["absolute", "appear", "approach", "associated", "author", "basic", "best", "block", "board", "cause", "challenge", "character", "check", "code", "color", "column", "competition", "computer", "contain", "cosine", "could", "create", "criteria", "data", "date", "degree", "directly", "domain", "drop", "earthquake", "eda", "effort", "environment", "error", "even", "every", "examination", "factor", "failure", "feature", "filter", "found", "frequency", "gap", "generate", "generation", "hand", "help", "high", "http", "idea", "increase", "input", "kernel", "learning", "length", "level", "library", "line", "little", "local", "look", "lost", "magnitude", "major", "manner", "match", "mean", "might", "missing", "model", "most", "my", "near", "need", "new", "next", "noise", "none", "not", "notebook", "number", "numerical", "open", "order", "out", "output", "overall", "partial", "peak", "per", "picture", "plot", "plotting", "point", "possibility", "potential", "power", "predict", "prediction", "present", "problem", "processing", "project", "provide", "random", "rare", "raw", "reconstruction", "region", "relationship", "relative", "remove", "repository", "resolution", "result", "right", "row", "run", "sample", "section", "separate", "set", "setup", "several", "shear", "short", "signal", "similar", "site", "situation", "size", "slice", "smooth", "source", "space", "standard", "start", "step", "storage", "style", "support", "system", "term", "test", "text", "those", "time", "training", "transform", "translate", "under", "until", "up", "validate", "value", "while", "window", "work"], "potential_description_queries_len": 159, "potential_script_queries": ["numpy", "scipy", "tqdm"], "potential_script_queries_len": 3, "potential_entities_queries": ["column", "high", "magnitude", "most", "problem", "repository", "signal", "text"], "potential_entities_queries_len": 8, "potential_extra_queries": ["biopsy of the greater curvature", "biopsy"], "potential_extra_queries_len": 2, "all_components_potential_queries_len": 164}