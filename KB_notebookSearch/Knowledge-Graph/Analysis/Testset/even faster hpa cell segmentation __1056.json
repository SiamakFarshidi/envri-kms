{"name": "even faster hpa cell segmentation ", "full_name": " h1 Even Faster HPA Cell Segmentation h2 Setup h1 Measure execution time h2 linshokaku s Faster HPA Cell Segmentation h2 Optimized package h1 Outputs comparison ", "stargazers_count": 0, "forks_count": 0, "description": "Even Faster HPA Cell SegmentationBuilding on top of the awesome notebook https www. For more details on the changes one might wanna check out the optimized fork of HPA Cell Segmentation on GitHub https github. I combined it with my attempts to speed the segmentation up. linshokaku noticed the possibility to post process smaller images before upsampling them back linshokaku also added batched processing with hardcoded batch size inside the segmenter code. com linshokaku Faster HPA Cell Segmentation Optimized package Outputs comparison a bytes object dt for hpa_image to remove the small pseduo nuclei this is to remove the cell borders signal from cell mask. I optimized the creation of boolean masks traversing the array just once instead of the original implementation which required two array traversals. Tuned for segmentation hpa images exclude the green area first this part is to use green channel and extend cell label to green channel benefit is to exclude cells clear on border but without nucleus batching is inside the class and is set to 24 the same batch size as in faster_segmentation internally. The batch size is not hardcoded. com SamusRam HPA Cell Segmentation. com linshokaku faster hpa cell segmentation by deoxy linshokaku https www. logical_and with some revision to replace this func. The inputs are expected to be NumPy arrays. Setup Measure execution time linshokaku s https www. The example usage can be found below. ", "id": "samusram/even-faster-hpa-cell-segmentation", "size": "1056", "language": "python", "html_url": "https://www.kaggle.com/code/samusram/even-faster-hpa-cell-segmentation", "git_url": "https://www.kaggle.com/code/samusram/even-faster-hpa-cell-segmentation", "script": "__init__ download_with_url _segment_helper __fill_holes hpacellseg.cellsegmentator pred_nuclei skimage.morphology label_cell hpacellseg closing scipy.ndimage numpy pred_cells PIL utils _restore_scaling_padding skimage Image util matplotlib.pyplot measure pandas _image_conversion disk (binary_erosion _preprocess tqdm filters __wsh cellsegmentator segmentation transform load_images CellSegmentator(object) ", "entities": "(('linshokaku', 'segmenter code'), 'notice') (('which', 'array two traversals'), 'optimize') (('first part', 'faster_segmentation'), 'be') (('I', 'segmentation'), 'combine') (('wanna', 'GitHub https github'), 'check') (('this', 'cell mask'), 'comparison') ", "extra": "", "label": "No_extra_files", "potential_description_queries": ["area", "array", "batch", "boolean", "border", "cell", "channel", "check", "clear", "combined", "comparison", "creation", "dt", "execution", "expected", "extend", "faster", "found", "green", "implementation", "label", "might", "my", "not", "notebook", "nuclei", "object", "out", "package", "part", "possibility", "post", "processing", "remove", "replace", "segmentation", "set", "signal", "size", "speed", "time", "upsampling", "usage"], "potential_description_queries_len": 43, "potential_script_queries": ["cellsegmentator", "closing", "disk", "hpacellseg", "measure", "numpy", "skimage", "tqdm", "transform", "util"], "potential_script_queries_len": 10, "potential_entities_queries": [], "potential_entities_queries_len": 0, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 52}