{"name": "optical flow estimation using raft ", "full_name": " h1 What s Optical flow h1 RAFT introduction h1 Run RAFT on sample images h1 Run on NFL video h1 Have a nice football flow ", "stargazers_count": 0, "forks_count": 0, "description": "com princeton vl RAFT raw master RAFT. com daigo0927 raft recurrent all pairs field transforms for optical flow in Japanese. com princeton vl RAFT licensed under the BSD 3 Clause License Briefly RAFT has below features Recurrent optical flow estimation Compute pixel wise correlation between pair wise input images and reuse it in the following recurrent step Lightweight rapid inference and high accuracy RAFT architecture image from https github. Run on NFL videoRAFT seems to capture the motion of each player. Have a nice football flow weights_path kaggle input raft pytorch raft things. pth map flow to rgb image convert BGR RGB. RAFT introductionI introduce the model RAFT Recurrent All Pairs Field Transforms for Optical Flow which is originally introduced in ECCV2020 by Teed et. 12039 https github. I m going to introduce a deep learning model for optical flow estimation. in Princeton University and prized Best Paper Award. png This is my explanation slide https speakerdeck. Run RAFT on sample imagesThe first and second columns are input paired images and right column is the predicted optical flow. org wiki Optical_flow In this competition each player motion can be essential for detecting the helmet impact. com princeton vl RAFT https github. What s Optical flow Optical flow or optic flow is the pattern of apparent motion of objects surfaces and edges in a visual scene caused by the relative motion between an observer and a scene. ", "id": "daigohirooka/optical-flow-estimation-using-raft", "size": "1467", "language": "python", "html_url": "https://www.kaggle.com/code/daigohirooka/optical-flow-estimation-using-raft", "git_url": "https://www.kaggle.com/code/daigohirooka/optical-flow-estimation-using-raft", "script": "viz glob RAFT load_image Image numpy matplotlib.pyplot raft.core.raft flow_viz raft.core.utils.utils raft.core.utils PIL InputPadder tqdm RAFTConfig raft.config ", "entities": "(('player motion', 'helmet impact'), 'Optical_flow') (('I', 'flow optical estimation'), 'm') (('Optical flow Optical flow', 'observer'), 'be') (('which', 'Teed et'), 'introduce') (('first columns', 'sample imagesThe'), 'be') (('com princeton vl RAFT', 'accuracy RAFT architecture https high github'), 'feature') (('pairs field', 'Japanese'), 'recurrent') (('Run', 'player'), 'seem') ", "extra": "", "label": "No_extra_files", "potential_description_queries": ["accuracy", "architecture", "column", "competition", "convert", "correlation", "estimation", "field", "flow", "following", "football", "high", "https github", "image", "inference", "input", "kaggle", "learning", "map", "model", "motion", "my", "observer", "pair", "pattern", "pixel", "player", "png", "pytorch", "raft", "raw", "recurrent", "relative", "rgb", "right", "sample", "scene", "second", "slide", "step", "under", "wise"], "potential_description_queries_len": 42, "potential_script_queries": ["config", "core", "glob", "numpy", "tqdm", "viz"], "potential_script_queries_len": 6, "potential_entities_queries": ["flow"], "potential_entities_queries_len": 1, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 48}