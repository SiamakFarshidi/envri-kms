{"name": "skin cancer image analysis using cnn model ", "full_name": " h1 Step 1 importing Essential Libraries h1 Step 2 Making Dictionary of images and labels h1 Step 3 Reading Processing data h1 Step 4 Data Cleaning h1 Step 5 EDA h1 Step 6 Loading and resizing of images h1 Step 7 Train Test Split h1 Step 8 Normalization h1 Step 9 Label Encoding h1 Step 10 Splitting training and validation split h1 Step 11 Model Building h1 CNN h1 Step 14 Model Evaluation ", "stargazers_count": 0, "forks_count": 0, "description": "Histopathology Histo Histopathologic diagnoses of excised lesions have beenperformed by specialized dermatopathologists. Step 1 importing Essential Libraries Step 2 Making Dictionary of images and labelsIn this step I have made the image path dictionary by joining the folder path from base directory base_skin_dir and merge the images in jpg format from both the folders HAM10000_images_part1. zip Step 3 Reading Processing dataIn this step we have read the csv by joining the path of image folder which is the base folder where all the images are placed named base_skin_dir. In the last layer Dense 10 activation softmax the net outputs distribution of probability of each class. Step 11 Model Building CNNI used the Keras Sequential API where you have just to add one layer at a time starting from the input. e the area size pooled each time more the pooling dimension is high more the downsampling is important. relu is the rectifier activation function max 0 x. Now lets check the presence of null values again Step 5 EDAIn this we will explore different features of the dataset their distrubtions and actual countsPlot to see distribution of 7 different classes of cell typeIts seems from the above plot that in this dataset cell type Melanecytic nevi has very large number of instances in comparison to other cell typesPlotting of Technical Validation field ground truth which is dx_type to see the distribution of its 4 categories which are listed below 1. Combining convolutional and pooling layers CNN are able to combine local features and learn more global features of the image. We have to choose the pooling size i. The second important layer in CNN is the pooling MaxPool2D layer. Consensus For typical benign cases without histopathology or followup biologists provide an expert consensus rating of authors PT and HK. We also resize the images as the original dimension of images are 450 x 600 x3 which TensorFlow can t handle so that s why we resize it into 100 x 75. It combines all the found local features of the previous convolutional layers. The first is the convolutional Conv2D layer. They applied the consensus label only if both authors independently gave the same unequivocal benign diagnosis. This technique also improves generalization and reduces the overfitting. Only nevi but no other benign diagnoses were labeled with this type of ground truth because dermatologists usually do not monitor dermatofibromas seborrheic keratoses or vascular lesions. Each filter transforms a part of the image defined by the kernel size using the kernel filter. These are used to reduce computational cost and to some extent also reduce overfitting. Function to plot model s validation loss and validation accuracy summarize history for accuracy summarize history for loss Merging images from both folders HAM10000_images_part1. After that we made some new columns which is easily understood for later reference such as we have made column path which contains the image_id cell_type which contains the short name of lesion type and at last we have made the categorical column cell_type_idx in which we have categorize the lesion type in to codes from 0 to 6 Step 4 Data CleaningIn this step we check for Missing values and datatype of each field As it is evident from the above that only age has null values which is 57 so we will fill the null values by their mean. It is like a set of learnable filters. Confocal Reflectance confocal microscopy is an in vivo imaging technique with a resolution at near cellular level and some facial benign with a grey world assumption of all training set images in Lab color space beforeand after manual histogram changes. In the end i used the features in two fully connected Dense layers which is just artificial an neural networks ANN classifier. We need to encode these lables to one hot vectors Step 10 Splitting training and validation splitI choosed to split the train set in two parts a small fraction 10 became the validation set which the model is evaluated and the rest 90 is used to train the model. Filters can be seen as a transformation of the image. zip into one dictionary This dictionary is useful for displaying more human friendly labels later on Creating New Columns for better readability Now lets see the sample of tile_df to look on newly made columns Checking the image size distribution Perform one hot encoding on the labels Reshape image in 3 dimensions height 75px width 100px canal 3 Set the CNN model my CNN architechture is In Conv2D relu 2 MaxPool2D Dropout 2 Flatten Dense Dropout Out Function to plot confusion matrix Predict the values from the validation dataset Convert predictions classes to one hot vectors Convert validation observations to one hot vectors compute the confusion matrix plot the confusion matrix. As this step resize all the 10015 images dimensions into 100x 75 so be patient it will take some time. Step 14 Model Evaluation In this step we will check the testing accuracy and validation accuracy of our model plot confusion matrix and also check the missclassified images count of each typeNow lets which category has much incorrect predictions used for converting labels to one hot encoding convert to one hot encoding 1. It looks at the 2 neighboring pixels and picks the maximal value. The rectifier activation function is used to add non linearity to the network. The Flatten layer is use to convert the final feature maps into a one single 1D vector. Plotting the distribution of localization field It seems back lower extremity trunk and upper extremity are heavily compromised regions of skin cancer Now check the distribution of AgeIt seems that there are larger instances of patients having age from 30 to 60Lets see the distribution of males and femalesNow lets visualize agewise distribution of skin cancer typesIt seems that skin cancer types 0 1 3 and 5 which are Melanocytic nevi dermatofibroma Basal cell carcinoma and Vascular lesions are not much prevalant below the age of 20 years Sexwise distribution of skin cancer type Step 6 Loading and resizing of imagesIn this step images will be loaded into the column named image from the image path from the image folder. 5 years biologists accepted this as evidence of biologic benignity. Step 9 Label EncodingLabels are 7 different classes of skin cancer types from 0 to 6. The kernel filter matrix is applied on the whole image. Follow up If nevi monitored by digital dermatoscopy did not show any changes during 3 follow up visits or 1. zip and HAM10000_images_part2. The CNN can isolate features that are useful everywhere from these transformed images feature maps. I choosed to set 32 filters for the two firsts conv2D layers and 64 filters for the two last ones. This drops randomly a propotion of the network and forces the network to learn features in a distributed way. Dropout is a regularization method where a proportion of nodes in the layer are randomly ignored setting their wieghts to zero for each training sample. As we can see image column has been added in its color format code Most interesting part its always better to see sample of imagesBelow we will show images of each cancer type Step 7 Train Test SplitIn this step we have splitted the dataset into training and testing set of 80 20 ratio Step 8 NormalizationI choosed to normalize the x_train x_test by substracting from theor mean values and then dividing by thier standard deviation. Lesions with this type of groundtruth were usually photographed for educational reasons and did not needfurther follow up or biopsy for confirmation. This flattening step is needed so that you can make use of fully connected layers after some convolutional maxpool layers. This layer simply acts as a downsampling filter. ", "id": "vdeepatrinethra/skin-cancer-image-analysis-using-cnn-model", "size": "6988", "language": "python", "html_url": "https://www.kaggle.com/code/vdeepatrinethra/skin-cancer-image-analysis-using-cnn-model", "git_url": "https://www.kaggle.com/code/vdeepatrinethra/skin-cancer-image-analysis-using-cnn-model", "script": "Flatten sklearn.metrics keras.preprocessing.image glob keras.layers keras.callbacks label_binarize train_test_split Dropout Sequential MaxPool2D to_categorical # convert to one-hot-encoding Adam keras.utils.np_utils Conv2D seaborn numpy plot_confusion_matrix ReduceLROnPlateau PIL plot_model_history to_categorical # used for converting labels to one-hot-encoding confusion_matrix ImageDataGenerator sklearn.model_selection Image matplotlib.pyplot Dense pandas keras.optimizers BatchNormalization sklearn.preprocessing backend backend as K keras keras.models keras.layers.normalization ", "entities": "(('Consensus', 'authors'), 'provide') (('so we', 'mean'), 'make') (('step images', 'image folder'), 'seem') (('Label Step 9 EncodingLabels', '6'), 'be') (('dermatologists', 'dermatofibromas seborrheic usually keratoses'), 'label') (('you', 'maxpool convolutional layers'), 'need') (('regularization where proportion', 'training sample'), 'be') (('These', 'also overfitting'), 'use') (('75 so it', 'time'), 'be') (('only authors', 'independently same unequivocal benign diagnosis'), 'apply') (('image path', 'HAM10000_images_part1'), 'step') (('Filters', 'image'), 'see') (('kernel filter matrix', 'whole image'), 'apply') (('dataset Convert predictions', 'confusion matrix'), 'zip') (('90', 'model'), 'need') (('why we', '100 75'), 'resize') (('where you', 'input'), 'use') (('It', 'maximal value'), 'look') (('Combining', 'image'), 'be') (('Function', 'HAM10000_images_part1'), 'summarize') (('which', '1'), 'check') (('I', '64 two last ones'), 'choose') (('category', 'one hot encoding'), 'evaluation') (('layer', 'downsampling simply filter'), 'act') (('Histopathology Histo Histopathologic diagnoses', 'specialized dermatopathologists'), 'beenperforme') (('This', 'distributed way'), 'drop') (('It', 'previous convolutional layers'), 'combine') (('which', 'Dense two fully connected layers'), 'use') (('technique', 'overfitting'), 'improve') (('nevi', 'visits'), 'follow') (('base where images', 'image folder'), 'step') (('years 5 biologists', 'biologic benignity'), 'accept') (('Lesions', 'needfurther confirmation'), 'photograph') (('that', 'images feature everywhere transformed maps'), 'isolate') (('step we', 'then thier standard deviation'), 'add') (('filter', 'kernel filter'), 'transform') (('activation rectifier function', 'network'), 'use') (('confocal microscopy', 'histogram manual changes'), 'be') (('Flatten layer', '1D one single vector'), 'be') (('second important layer', 'CNN'), 'be') ", "extra": "['biopsy', 'biopsy of the greater curvature', 'patient', 'test', 'diagnosis']", "label": "Perfect_files", "potential_description_queries": ["accuracy", "age", "area", "biopsy", "cancer", "categorical", "category", "cell", "check", "choose", "code", "color", "column", "combine", "comparison", "compute", "confusion", "convert", "convolutional", "cost", "count", "csv", "dataset", "dictionary", "dimension", "directory", "distributed", "distribution", "encode", "encoding", "end", "evidence", "explore", "extent", "feature", "field", "fill", "filter", "final", "folder", "format", "found", "function", "generalization", "ground", "handle", "height", "high", "histogram", "history", "hot", "human", "image", "kernel", "label", "labeled", "layer", "learn", "level", "local", "look", "lower", "manual", "matrix", "max", "mean", "merge", "method", "model", "my", "name", "near", "need", "network", "neural", "new", "no", "non", "normalize", "not", "null", "number", "part", "path", "patient", "plot", "pooling", "probability", "provide", "rating", "ratio", "read", "reduce", "reference", "regularization", "resize", "resolution", "rest", "sample", "second", "set", "short", "single", "size", "skin", "softmax", "space", "split", "standard", "step", "summarize", "technique", "testing", "time", "train", "training", "transformation", "type", "up", "upper", "validation", "visualize", "vivo", "width", "world", "zip"], "potential_description_queries_len": 126, "potential_script_queries": ["backend", "glob", "normalization", "numpy", "preprocessing", "seaborn"], "potential_script_queries_len": 6, "potential_entities_queries": ["feature", "hot", "single"], "potential_entities_queries_len": 3, "potential_extra_queries": ["diagnosis"], "potential_extra_queries_len": 1, "all_components_potential_queries_len": 131}