{"name": "siim covid 19 detection eda data augmentation ", "full_name": " h1 Distribution of class labels h1 DICOM data h3 Image and Metadata h3 Images and Classes h3 Checking if images in each directory have the same shape h1 Data Augmentation h3 Data Augmentation train samples h3 Data Augmentation test samples ", "stargazers_count": 0, "forks_count": 0, "description": "ai ruchi798 siim workspace user ruchi798 id unique study identifier boxes bounding boxes in easily readable dictionary format label the correct prediction label for the provided bounding boxes id unique study identifier Negative for Pneumonia 1 if the study is negative for pneumonia 0 otherwise Typical Appearance 1 if the study has this appearance 0 otherwise Indeterminate Appearance 1 if the study has this appearance 0 otherwise Atypical Appearance 1 if the study has this appearance 0 otherwise Distribution of class labels DICOM data Image and MetadataA snapshot of the newly created artifact Visualizing the DICOM data in a W B table Images and ClassesWe can interact with the W B table by specifying filters on any column to limit the visible rows down to only rows that match Here I ve filtered the table to see only those images that have the class label as Atypical Appearance or Indeterminate Appearance. Super thankful to xhlulu https www. add_file dicom_metadata. path try data_di dicom_dataset_to_dict filename metadata_df dicom_data_list. I will be integrating W B for visualizations and logging artifacts SIIM Project on W B Dashboard https wandb. init project siim name dicom_metadata artifact wandb. log_artifact artifact run. com xhlulu for converting dicom image data to jpg files https www. append data_di except continue dicom_data_df pd. to_csv dicom_metadata. com ruchi798 siimfisabiorsna covid19 detection augmented of image augmentations for all the training and testing images as well This is what my project https wandb. com xhlulu siim covid 19 convert to jpg 256px Checking if images in each directory have the same shape Data Augmentation Data Augmentation train samples Data Augmentation test samples I ve created a dataset https www. DataFrame dicom_data_list dicom_data_df dicom_data_df. Artifact dicom_metadata type dataset artifact. ai ruchi798 siim workspace user ruchi798 looks like on the W B dashboard Work in Progress colored output Function to plot WandB bar chart Function to create a dataframe of value counts DICOM FILE DATA discard pixel data DICOM IMAGE DATA VOI LUT if available by DICOM device is used to transform raw DICOM data to human friendly view depending on this value X ray may look inverted fix that dicom_data_list for filename in train_df. csv run wandb. finish WandB plots initializing the run creating an artifact setting up a WandB Table object to hold the dataset raw image adding a row to the table adding the table to the artifact logging the artifact initializing the run creating an artifact setting up a WandB Table object to hold the dataset raw image adding a row to the table adding the table to the artifact logging the artifact list of albumentations image titles getting image name from path reading image list of images creating image augmentations original image. ", "id": "ruchi798/siim-covid-19-detection-eda-data-augmentation", "size": "2464", "language": "python", "html_url": "https://www.kaggle.com/code/ruchi798/siim-covid-19-detection-eda-data-augmentation", "git_url": "https://www.kaggle.com/code/ruchi798/siim-covid-19-detection-eda-data-augmentation", "script": "albumentations getShape count_values apply_voi_lut pydicom.pixel_data_handlers.util UserSecretsClient _sanitise_unicode seaborn numpy Back matplotlib.pylab PIL _convert_value dicom_dataset_to_dict in classes Image matplotlib.pyplot pandas tqdm Style colorama plot_augmentations augment plot_wb_bar label_sizes plot_pie Fore pydicom kaggle_secrets getImagePaths ", "entities": "(('that', 'Atypical Appearance'), 'label') (('dataset raw image', 'image augmentations original image'), 'finish') (('project https wandb', 'training images'), 'com') (('I', 'https dataset www'), 'convert') (('append data_di', 'dicom_data_df pd'), 'continue') (('I', 'W B Dashboard https wandb'), 'integrate') (('that', 'train_df'), 'look') ", "extra": "['test']", "label": "Perfect_files", "potential_description_queries": ["appearance", "append", "artifact", "bounding", "chart", "colored", "column", "convert", "correct", "create", "csv", "data", "dataframe", "dataset", "detection", "device", "dicom", "dictionary", "directory", "filename", "filtered", "fix", "format", "human", "id", "image", "init", "interact", "label", "list", "logging", "look", "match", "my", "name", "negative", "object", "output", "path", "pixel", "plot", "pneumonia", "prediction", "project", "raw", "reading", "row", "run", "shape", "table", "test", "testing", "those", "train", "training", "transform", "try", "type", "unique", "up", "user", "value", "view", "xhlulu"], "potential_description_queries_len": 64, "potential_script_queries": ["augment", "colorama", "numpy", "pydicom", "seaborn", "tqdm"], "potential_script_queries_len": 6, "potential_entities_queries": ["raw"], "potential_entities_queries_len": 1, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 70}