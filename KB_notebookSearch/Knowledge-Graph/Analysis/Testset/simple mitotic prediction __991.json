{"name": "simple mitotic prediction ", "full_name": " ", "stargazers_count": 0, "forks_count": 0, "description": "Train the logistic regression model. Set up a cross validation sequence to eliminate bias or overfitting of the data. com kaggle docker python For example here s several helpful packages to load linear algebra data processing CSV file I O e. This indicates that the mitotic state or activity of a cell is the main determinant in whether or not a cell is cancerous. Set the target series and variable. What this project does is look at the ability of a logistic regression algorithm to predict the likelihood of a cell being cancerous based on its cytology. input directory For example running this by clicking run or pressing Shift Enter will list all files under the input directory You can write up to 20GB to the current directory kaggle working that gets preserved as output when you create a version using Save Run All You can also write temporary files to kaggle temp but they won t be saved outside of the current session. Drop any rows with missing values and display the shape of the matrix. This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python Docker image https github. Set the predictive dataframe. Let s see how it fairs when based off of the mitotic state of the cell. read_csv Input data files are available in the read only. So after using only the mitotic state of the cell as the independent variable for the logistic regression algorithm it results in an 80 accuracy rate. Now we can see that a logistic regression model based on all of the cell s cytology results in an accuracy of around 95 when predicting whether or not a cell is cancerous. Read in the datasetA look at the first five rows of the dataset. ", "id": "alexanderpryor/simple-mitotic-prediction", "size": "991", "language": "python", "html_url": "https://www.kaggle.com/code/alexanderpryor/simple-mitotic-prediction", "git_url": "https://www.kaggle.com/code/alexanderpryor/simple-mitotic-prediction", "script": "LogisticRegression sklearn.metrics sklearn.model_selection numpy sklearn.linear_model pandas train_test_split accuracy_score ", "entities": "(('It', 'kaggle python Docker image https github'), 'come') (('does', 'cytology'), 'look') (('main cell', 'cell'), 'indicate') (('t', 'outside current session'), 'list') (('how it', 'cell'), 'let') (('it', 'accuracy 80 rate'), 'algorithm') (('when cell', 'around 95'), 'see') (('read_csv Input data files', 'read'), 'be') ", "extra": "", "label": "No_extra_files", "potential_description_queries": ["accuracy", "algorithm", "cell", "create", "current", "data", "directory", "display", "environment", "file", "image", "input", "kaggle", "likelihood", "linear", "list", "load", "look", "main", "missing", "model", "not", "output", "overfitting", "predict", "processing", "project", "python", "read", "regression", "run", "running", "sequence", "several", "shape", "state", "target", "under", "up", "validation", "variable", "version", "write"], "potential_description_queries_len": 43, "potential_script_queries": ["numpy"], "potential_script_queries_len": 1, "potential_entities_queries": ["data", "python"], "potential_entities_queries_len": 2, "potential_extra_queries": [], "potential_extra_queries_len": 0, "all_components_potential_queries_len": 44}