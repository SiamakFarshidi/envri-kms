{"name": "social network link prediction ", "full_name": " h1 Social Network Graph Link Prediction h3 Problem statement h3 Data Overview h3 Performance metric for supervised learning h1 Exploratory Analysis h1 Test and training splitting 80 20 h1 Featurization start h1 Jaccard INdex h1 Cosine Distance h1 Shortest path h1 Adamic Adar Index h1 IS Person follow Back h1 Adding all features h2 5 2 Adding a set of features h1 Now it s time to applying a Model h1 Random Forest ", "stargazers_count": 0, "forks_count": 0, "description": "2 Adding a set of features__we will create these each of these features for both train and test data points__jaccard_followersjaccard_followeescosine_followerscosine_followeesnum_followers_snum_followees_snum_followers_dnum_followees_dinter_followersinter_followeesadar indexis following backbelongs to same weakly connect componentsshortest path between source and destinationWeight Features weight of incoming edges weight of outgoing edges weight of incoming edges weight of outgoing edges weight of incoming edges weight of outgoing edges 2 weight of incoming edges weight of outgoing edges weight of incoming edges 2 weight of outgoing edges Now it s time to applying a Model Random Forest pandas to create small dataframes Convert to unix time Convert to unix time if numpy is not installed already pip3 install numpy Do aritmetic operations on arrays matplotlib used to plot graphs Size of plots to install xgboost pip3 install xgboost making graph removing header and saving final dataset if has direct edge then deleting that edge and calculating shortest path for imputing with mean mapping jaccrd followers to train and test data mapping jaccrd followees to train and test data mapping jaccrd followers to train and test data mapping adar index on test mapping followback or not on train mapping followback or not on test mapping shortest path on test mapping to pandas test some features engineerings on the in and out weights some features engineerings on the in and out weights representing A in heatmap format representing B in heatmap format. for balanced data 9437519 x 2 size Test and training splitting 80 20 Featurization start Jaccard INdex begin equation j frac X cap Y X cup Y end equation Cosine Distance begin equation CosineDistance frac X cap Y X cdot Y end equation Shortest path Adamic Adar Index Adamic Adar measures is defined as inverted sum of degrees of common neighbours for given two vertices. Social Network Graph Link Prediction Problem statement Given a directed social graph have to predict missing links to recommend users Link Prediction in graph Data OverviewTaken data from facebook s recruting challenge on kaggle data contains two columns source and destination eac edge in graph Data columns total 2 columns source_node int64 destination_node int64 Performance metric for supervised learning Both precision and recall is important so F1 score is good choice Confusion matrix Display the Graph Exploratory Analysis ON followers On Following NO of following followers Creating dataset for nodes having no edges between them. A x y sum_ u in N x cap N y frac 1 log N u IS Person follow Back Adding all features 5. ", "id": "jacckashakash/social-network-link-prediction", "size": "2261", "language": "others", "html_url": "https://www.kaggle.com/code/jacckashakash/social-network-link-prediction", "git_url": "https://www.kaggle.com/code/jacckashakash/social-network-link-prediction", "script": "sklearn.metrics randint as sp_randint randint sklearn.cluster cosine_for_followers make_classification uniform collections seaborn numpy cosine_for_followees jaccard_for_followees plot_confusion_matrix matplotlib.pylab scipy.stats KMeans#Clustering networkx sklearn.ensemble sklearn.model_selection f1_score confusion_matrix RandomForestClassifier pandas Counter compute_shortest_path_length tqdm sklearn.datasets jaccard_for_followers rcParams#Size of plots matplotlib RandomizedSearchCV follows_back calc_adar_in xgboost MiniBatchKMeans train_test_split ", "entities": "(('Person', 'features'), 'sum') (('nodes', 'them'), 'have') (('some', 'heatmap format'), '2') (('Adamic Adar Index Adamic Adar measures', 'two vertices'), 'begin') ", "extra": "['test']"}