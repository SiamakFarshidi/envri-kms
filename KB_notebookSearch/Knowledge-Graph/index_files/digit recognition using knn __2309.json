{"name": "digit recognition using knn ", "full_name": " h2 Digit Recognizer ", "stargazers_count": 0, "forks_count": 0, "description": "Digit RecognizerAlthough this is a computer vision problem I created a simple model using K Nearest Neighbors algorithm in this notebook to be a good starting point knowing that CNN would be a much better option. best_params_ indent 4 end n n print Grid Search CV results results_df pd. DataFrame grid_estimator. Combining the synthesized data with the actual training dataFitting a new model with the tuned hyperparameters to the combined datasetGenerating the submission file Note With Data Augmentation the accuracy jumped from 97. Furthermore I have used Data Augmentation or Artificial Data Synthesis technique in this notebook to boost the model s performance on the test set. You can find my other notebooks below Disaster Tweets Classification https www. fit X_train y_train print f Best Score grid_estimator. The image is clipped before zooming to preserve the image size. best_score_ end n n print f Best Parameters n json. Please upvote if you like this notebook and share your valuable feedback. cv_results_ results_df. Linear algebra For data manipulation For visualization For modelling For evaluation and hyperparameter tuning For evaluation For data augmentation For downloading the output file Creating datasets for training and testing the model Base estimator Parameters to tune cross validation stratergy Verbosity of the logs Number of jobs to be run concurrently with 1 meaning all the processors Fitting the estimator with training data grid_estimator. I used the GridSearchCV to fine tune the hyperparameters such as n_neighbors and weights and to perform cross validation. Using the classification report and confusion matrix to understand the model s performance on each fold. Fine tuning the model by finding the best values for the hyperparameters weights n_neighbors using GridSearchCV Best parameter values found n_neighbors 4 weights distance Fitting a new model with the found hyperparameter values to the training data and making predictions on the test data Data Augmentation Each image in the training set is shifted down up left and right by one pixel rotated clockwise and anti clockwise clipped and zoomed at two different rangesgenerating eight different images. 128 on the test data. com gauthampughazh house sales price prediction svr Titanic Survival Classification https www. com gauthampughazh titanic survival prediction pandas plotly keras Peeking the data Loading the datasets into dataframesKnowing about the features in the datasetsConverting the train and test dataframes into numpy arraysVisualizing a digit from the training data as a 28 X 28 image Model Selection Using StratifiedKFold to ensure that the test data represents samples from all classes digits and for cross validating the model. com gauthampughazh disaster or not plotly use tfidf h2o ai automl House Sales Price Prediction https www. ", "id": "gauthampughazh/digit-recognition-using-knn", "size": "2309", "language": "python", "html_url": "https://www.kaggle.com/code/gauthampughazh/digit-recognition-using-knn", "git_url": "https://www.kaggle.com/code/gauthampughazh/digit-recognition-using-knn", "script": "sklearn.metrics cross_val_score KNeighborsClassifier # For modelling shift rotate rotate_in_all_directions scipy.ndimage numpy sklearn.model_selection confusion_matrix zoom # For data augmentation matplotlib.pyplot pandas classification_report # For evaluation StratifiedKFold # For evaluation and hyperparameter tuning alter_image shift_in_one_direction FileLink # For downloading the output file shift_in_all_directions GridSearchCV sklearn.neighbors IPython.display clipped_zoom ", "entities": "(('accuracy', '97'), 'combine') (('image', 'image size'), 'clip') (('Furthermore I', 'test set'), 'use') (('you', 'valuable feedback'), 'upvote') (('image', 'eight different images'), 'weights') (('test data', 'model'), 'panda') (('You', 'Disaster Tweets Classification https www'), 'find') (('concurrently 1 processors', 'training data grid_estimator'), 'algebra') (('I', 'cross validation'), 'use') (('starting good CNN', 'notebook'), 'be') ", "extra": "['test']"}