{"name": "m5 forecasting with tensorflow bilstm ", "full_name": " h1 please upvote h1 Bidirectional LSTM Model with tf Keras h1 Submission File Creation ", "stargazers_count": 0, "forks_count": 0, "description": "We want to have each day as row and 30490 items sales as columns features Therefore take the transpose of dt Remove the first six colums id item_id dept_id cat_id store_id state_id columns to end up only days as rows Here a dataframe is created to store the knowledge if an event exist in the next day Firstly fill with zeros the dataframe Now 1 is assigned the day before an event exist. daysBeforeEventTest will be used as input for predicting We will forecast the days 1913 1941 daysBeforeEvent will be used for training as a feature. Since it is not i did not consider for now. This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python Docker image https github. com kaggle docker python For example here s several helpful packages to load linear algebra data processing CSV file I O e. Other days will remain as 0. Concatenate daysBeforeEvent feature with our main dataframe dt Here is the important part. please upvote Below timesteps is set to 14 to use past 14 days sales. X_train and y_train data is created. png Bidirectional LSTM Model with tf. read_csv Reduce memory usage and compare with the previous one to be sure Take the transpose so that we have one day for each row and 30490 items sales as columns Remove id item_id dept_id cat_id store_id state_id columns Create dataframe with zeros for 1969 days in the calendar 1 is assigned to the days before the event_name_1. if first day was an event this row will cause an exception because x 1. 14 days our prediction to predict last 1941th day sales. 12 days from input data 2 days from our prediction to predict 1917th day 11 days from input data 3 days from our prediction to predict 1918th day. png attachment resim. In order to predict 1916th day 13 days from our input data and 1 day from our prediction are used. Before concatanation with our main data dt indexes are made same and column name is changed to oneDayBeforeEvent Feature Scaling Scale the features using min max scaler in range 0 1 \u0130mportant if extra features are added like oneDayBeforeEvent use only sales values for predictions we only predict sales this is why 0 30490 columns are choosen Convert to np array to be able to feed the BiLSTM model for the GPU model training for GPU. calendar won t be used anymore. For each X_train item 14 past days sales and 14 daysBeforeEvent feature are included. For y_train we are predicting one day sales of 30490 items therefore one element of y_train s shape is 1 30490 Creation of X_train and y_train resim. The shape of the data is not exactly what we want. So one element of X_train s shape is 14 30491. We are using last 14 days in order to predict day 1915 sales. Keras Take last days 14 for this notebook timestep parameter in order to predict firts unknown day s sales. After that we slide the window one by one. Before using values for prediction again use min max transformation Here is again an important part. Since event_name_2 is rare it was not added. Since the daysBeforeEvent feature is used for predicting after the model trained as input we seperate the 28 days as daysBeforeEventTest For training the first 1914 days if startDay is zero otherwise 1913 startDay will be used. Since there are lots of zero values in first days startDay parameter can be used ignore unwanted days from the beginning. png Submission File Creation Here the submission file creation is done. ", "id": "prakash711/m5-forecasting-with-tensorflow-bilstm", "size": "2204", "language": "python", "html_url": "https://www.kaggle.com/code/prakash711/m5-forecasting-with-tensorflow-bilstm", "git_url": "https://www.kaggle.com/code/prakash711/m5-forecasting-with-tensorflow-bilstm", "script": "numpy reduction_mem sklearn.preprocessing tensorflow pandas StandardScaler ", "entities": "(('So one element', 'shape'), 'be') (('day event', 'dataframe'), 'want') (('upvote', 'days past 14 sales'), 'set') (('columns Create dataframe', 'event_name_1'), 'reduce') (('Keras', 'firts unknown sales'), 'take') (('why 0 30490 columns', 'GPU'), 'make') (('1941 daysBeforeEvent', 'feature'), 'use') (('therefore one element', '1 30490 X_train resim'), 'predict') (('we', 'one one'), 'slide') (('14 prediction', 'day last 1941th sales'), 'day') (('Concatenate daysBeforeEvent', 'dataframe main dt'), 'feature') (('row', 'exception'), 'be') (('It', 'kaggle python Docker image https github'), 'come') (('startDay parameter', 'unwanted days beginning'), 'use') (('1 day', 'prediction'), 'in') (('we', 'exactly what'), 'be') (('days 14 past sales', 'X_train item'), 'include') (('We', 'day 1915 sales'), 'use') (('otherwise 1913 startDay', 'input'), 'seperate') ", "extra": "['test']"}