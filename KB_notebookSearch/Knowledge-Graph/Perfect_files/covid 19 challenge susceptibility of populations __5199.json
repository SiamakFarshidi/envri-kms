{"name": "covid 19 challenge susceptibility of populations ", "full_name": " h1 This Jupyter notebook is an attempt to provide insights on the susceptibility and Risk of Treatment of populations to the COVID 19 virus h3 The goal of this notebook is to retrieve the most relevant papers to the topic of susceptibility of populations to the COVID 19 virus and similar respiratory diseases in order to help in gathering data around the virus h1 The Methodology h1 Results Top 6 Documents h1 Pros and Cons of the method used h3 The main weakness of this methodology is its lack of context awareness The notebook only scores documents based on individual words however it does not extract context so results do not always retrieve relevant documents It might retrieve documents that have similar terms but not topics that specifically have to do with our topic h3 However the main strength of the methodology is that is does not miss relevant documents It may rank them inaccurately however h3 Imports h3 Add all files into a list to loop over in later steps h3 Explore the files in the dataset h3 Next We will split different sections of documents into different lists h4 Note that some documents do not have a title h3 Define important keywords that can be used later h3 Create matcher templates h1 Get documents that have terms related to COVID 19 susceptibility h3 The number of documents that have words related to susceptibility in their abstracts is h1 Filter documents according to their abstract s score which means that the abstract was more or less relevant to the topic we re seeking to explore h1 Get the titles of the filtered documents to further score and filter the documents h1 Score documents according to the title which will be weighted more than than matches in the abstract h1 Recompute the scores for all documents as the sum as the score for the virus terms the score for susceptibility terms the score for title words h1 Write the temporary dicts to files to eliminate the need for re computing what was already computed h1 Sort The docs according to their scores h1 Now let s check if the titles of the top resulting documents are relevant to the topic of susceptibility at N 6 h1 Since our results make sense we will save them in a file results json ", "stargazers_count": 0, "forks_count": 0, "description": "If terms that describe the virus and terms that relate to susceptibility are found in the paper s title boost its score regardless of the content of the abstract. This Jupyter notebook is an attempt to provide insights on the susceptibility and Risk of Treatment of populations to the COVID 19 virus The goal of this notebook is to retrieve the most relevant papers to the topic of susceptibility of populations to the COVID 19 virus and similar respiratory diseases in order to help in gathering data around the virus The Methodology 1. Sort the documents with their scores as keys. Results Top 6 Documents Rank 1 Document of ID 1aa7102887a834cf5b833d122ca2eb015b7aeb91 Title Journal Pre proof Individual risk management strategy and potential therapeutic options for the COVID 19 pandemic Individual risk management strategy and potential therapeutic options for the COVID 19 pandemicScore 76 Rank 2 Document of ID fe956a47326df58bb571c05af952c62f4f07460a Title Journal Pre proof Epigenetic dysregulation of ACE2 and interferon regulated genes might suggest increased COVID 19 susceptibility and severity in lupus patients Epigenetic dysregulation of ACE2 and interferon regulated genes might suggest increased COVID 19 susceptibility and severity in lupus patientsScore 57 Rank 3 Document of ID 0370abacf3b212bd6bded8f23c8c904000f6c2e6 Title Journal Pre proof Risk adapted Treatment Strategy For COVID 19 Patients Risk adapted Treatment Strategy For COVID 19 PatientsScore 51 Rank 4 Document of ID 241dbe189937800ffeddfdafbac58ceec96948d3 Title Journal Pre proof Applications of google search trends for risk communication in infectious disease management A case study of COVID 19 outbreak in Taiwan Applications of Google Search Trends for Risk Communication in Infectious Disease Management a Case Study of COVID 19 Outbreak in TaiwanScore 51 Rank 5 Document of ID 9d50dd6de221e2286fbe407cc3dc42b606315469 Title ACE2 variants underlie interindividual variability and susceptibility to COVID 19 in Italian population ACE2 gene variants in Italian populationScore 50 Rank 6 Document of ID c200af0e42a9aa8539b208d993015a75a2fe1151 Title Epidemiology and Infection Passengers destinations from China low risk of Novel Coronavirus 2019 nCoV transmission into Africa and South AmericaScore 48 Pros and Cons of the method used The main weakness of this methodology is its lack of context awareness. Find matches in documents summaries and titles. com cstefanache nlp text mining disease behaviour Create matcher templates Get documents that have terms related to COVID 19 susceptibility The number of documents that have words related to susceptibility in their abstracts is Filter documents according to their abstract s score which means that the abstract was more or less relevant to the topic we re seeking to explore Get the titles of the filtered documents to further score and filter the documents Score documents according to the title which will be weighted more than than matches in the abstract Recompute the scores for all documents as the sum as the score for the virus terms the score for susceptibility terms the score for title words Write the temporary dicts to files to eliminate the need for re computing what was already computed Sort The docs according to their scores Now let s check if the titles of the top resulting documents are relevant to the topic of susceptibility at N 6 Since our results make sense we will save them in a file results. one for terms that name the virus and the other for terms related to susceptibility. Split the contents of each paper in the data set into Title Abstract Body. It might retrieve documents that have similar terms but not topics that specifically have to do with our topic. Calculate a weighted score for each document according to the matches found. Filter documents according to their scores. json linear algebra data processing CSV file I O e. Create our own list of relevant terms to the problem in hand. com vasuji i covid19 nlp data parsing Note that some documents do not have a title Define important keywords that can be used later credits to https www. However the main strength of the methodology is that is does not miss relevant documents. Next We will split different sections of documents into different lists Credits to https www. Load the dataset 2. It may rank them inaccurately however. Retrieve the top N related documents to the topic. Imports Add all files into a list to loop over in later steps Explore the files in the dataset So far the data_files list has the paths to all files that we need to parse. In the case of this notebook 2 lists of words were used. read_csv For interactions wit the file system For using Json Files For natural language processing Progress meter Print the number of data files open the first file in the data_files list parse the json object in the file print the key values Furthermore check what the values to these keys contain Initialize title list for each file read the file and add a key value pair in the titles list Initialize abstract list for each file read the file and add a key value pair in the abstracts list Initialize bodies list for each file read the file and add a key value pair in the bodies list will be used to retrieve relevant documents will be used to retrieve documents that include symptoms will be used to retrieve documents that include information of certain susceptible organs if needed Will be used to retrieve information about groups of people will be used to retrieve documents that mention susceptibility susceptibility may be related to a certain region hence why this can also be used A matcher that matches with one term or string A matcher that matches with more than one term A matcher that matches number suffixes A matcher that matches number intervals a matcher that matches intervals that describe groups Create a new matcher A dict that holds the number of matches as as a score for each document loop over abstracts and get the relevant documents with their scores get the keys of the docs that matched virus terms Create a new matcher A dict that holds the number of matches as as a score for each document loop over abstracts and get the relevant documents with their scores Get the size of the filtered keys Display an example entry Rule for matching virus terms Rule for matching susceptibility terms Create a matcher for each rule for each document get the results of both matchers and calculate a weighted score. The abstract of each document was used as a summary since it contains the overview of the work done in each paper. The notebook only scores documents based on individual words however it does not extract context so results do not always retrieve relevant documents. ", "id": "abdelrahmantarek97/covid-19-challenge-susceptibility-of-populations", "size": "5199", "language": "python", "html_url": "https://www.kaggle.com/code/abdelrahmantarek97/covid-19-challenge-susceptibility-of-populations", "git_url": "https://www.kaggle.com/code/abdelrahmantarek97/covid-19-challenge-susceptibility-of-populations", "script": "Matcher spacy.matcher pandas tqdm numpy ", "entities": "(('that', 'relevant documents'), 'be') (('so results', 'always relevant documents'), 'score') (('we', 'file results'), 'get') (('main weakness', 'context awareness'), 'Top') (('goal', 'virus'), 'be') (('we', 'that'), 'add') (('that', 'abstract'), 'boost') (('Next We', 'www'), 'split') (('Define important that', 'https www'), 'vasuji') (('it', 'paper'), 'use') (('that', 'specifically topic'), 'retrieve') (('that', 'susceptibility'), 'one') (('size', 'weighted score'), 'wit') "}