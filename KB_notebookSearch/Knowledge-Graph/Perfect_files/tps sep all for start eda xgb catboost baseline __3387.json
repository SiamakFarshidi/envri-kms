{"name": "tps sep all for start eda xgb catboost baseline ", "full_name": " h1 TPS Sep all for start EDA XGB CatBoost Baseline h3 See also my previous TPS works h2 Required functions h2 EDA h2 XGB Baseline h2 Test prediction h2 WORK IN PROGRESS ", "stargazers_count": 0, "forks_count": 0, "description": "com maksymshkliarevskyi tps july eda baseline analysis xgbregressor TPS Aug EDA Baselines XGB Keras NN https www. EDA Back to the start section start We have training and test observations. Target feature has int format. png t 2021 04 09 00 57 05 The goal of these competitions is to provide a fun and approachable for anyone tabular dataset. Looks like this new feature can be used for prediction. The ground truth claim is binary valued but a prediction may be any number from 0. Now let s look at the feature distributions. For this competition you will predict whether a customer made a claim upon an insurance policy. The dataset is used for this competition is synthetic but based on a real dataset and generated using a CTGAN. The feature we created is really very important Let s try a slightly more complex model. There are missing values in our data. com maksymshkliarevskyi tps jun starting point eda baseline cv TPS July EDA Baseline Analysis XGBRegressor https www. Back to the start section start for feature importance study ML Reproducability Custom theme Show our custom palette Concatenate train and test datasets columns with missing values Create data sets for training 80 and validation 20 The basic model The basic model. See also my previous TPS works TPS Jun starting point EDA Baseline CV https www. XGB Baseline Back to the start section start In this step we ll train our simple baseline XGBClassifier model. The features in this dataset have been anonymized and may contain missing values. It s important to see if our data has missing values. Test prediction Back to the table of contents section start Let s make 5 folds cv prediction for XGBClassifier and CatBoostClassifier. We encourage you to avoid saturating the leaderboard. com kaggle competitions kaggle 26480 logos header. If you re an established competitions master or grandmaster these probably won t be much of a challenge for you. The original dataset deals with calculating the loss associated with a loan defaults. 0 representing the probability of a claim. com maksymshkliarevskyi tps aug eda baselines xgb keras nn Required functions Back to the start section start First let s load the data and take a look at basic statistics. Let s fill them with an average. All features are weakly correlated. All our data is in float32 format. We should also look at the correlations between features. Wow some groups have a low claim rate. TPS Sep all for start EDA XGB CatBoost Baseline https storage. Before we continue let s pull the target feature into the separate variable. Let s create a variable with the sum of missing features and then look at the claim rate for each group of this new feature. These competitions will be great for people looking for something in between the Titanic Getting Started competition and a Featured competition. Although the features are anonymized they have properties relating to real world features. Also let s try a CatBoostClassifier. ", "id": "maksymshkliarevskyi/tps-sep-all-for-start-eda-xgb-catboost-baseline", "size": "3387", "language": "python", "html_url": "https://www.kaggle.com/code/maksymshkliarevskyi/tps-sep-all-for-start-eda-xgb-catboost-baseline", "git_url": "https://www.kaggle.com/code/maksymshkliarevskyi/tps-sep-all-for-start-eda-xgb-catboost-baseline", "script": "RobustScaler train_test_split SimpleImputer xgboost CatBoostClassifier XGBClassifier numpy seaborn catboost set_seed sklearn KFold matplotlib.pyplot model_imp_viz pdp metrics sklearn.model_selection pandas PermutationImportance scipy.stats sklearn.impute eli5.sklearn pdpbox GridSearchCV StandardScaler sklearn.preprocessing ", "entities": "(('ML Reproducability Custom theme custom palette Concatenate train', '20'), 'start') (('Now s', 'feature distributions'), 'let') (('new feature', 'prediction'), 'look') (('competitions', 'Titanic Getting competition'), 'be') (('com kaggle competitions', 'logos 26480 header'), 'kaggle') (('dataset', 'CTGAN'), 'use') (('we', 'baseline XGBClassifier simple model'), 'Baseline') (('5 folds', 'XGBClassifier'), 'prediction') (('probably won', 'you'), 'be') (('they', 'world real features'), 'have') (('First s', 'basic statistics'), 'baselines') (('We', 'training observations'), 'EDA') (('s', 'new feature'), 'let') (('s', 'separate variable'), 'continue') (('customer', 'insurance policy'), 'predict') (('We', 'leaderboard'), 'encourage') (('png 2021 09 00 57 goal', 'tabular dataset'), 't') (('data', 'values'), 's') (('features', 'missing values'), 'anonymize') (('binary prediction', '0'), 'be') (('We', 'features'), 'look') (('really very s', 'slightly more complex model'), 'be') "}