{"name": "yet another keras u net data augmentation ", "full_name": " h1 Part 0 Intro h1 Part 1 Data Input h2 Visualize masks on the training data h1 Part 2 Build model h1 Part 3 Run model h1 Part 4 Evaluate output h2 Visualize predictions on the test data h1 Part 5 Submit results h2 Visualize upscaled predictions on the test data ", "stargazers_count": 0, "forks_count": 0, "description": "Added in a custom log loss metric mean_iou plot based on this https github. fit_generator Finally train the model Save the model weights to a hdf5 file Refer to https stackoverflow. com deepsense ai intel ai webinar neural networks blob master live_loss_plot. com c0conuts unet imagedatagenerator lb 0 336 Add support for multiple GPUsTODO Create computational graph visual of the keras model following this https keras. com questions 41342098 keras load checkpoint weights hdf5 generated by multiple gpus get second last layer in multi_gpu_model i. Set height y axis length and width x axis length to train model on Default to 256 266 use None None if you do not want to resize imgs Import all the necessary libraries Used for imshow function Used for resize function Used for Run Length Encoding RLE to create final submission Set seed values Have a look at our data folder defaults to kaggle in kaggle kernels different if on own system e. home user kaggle dsbowl changes our python working directory to the top directory of our kaggle files see what s in the input folder where data is in path to training data file folder path to test data file folder Get training data take only 3 channels bands Get training data labels loop through each individual nuclei for an image and combine them together need to add an extra dimension so mask. com rakhlin fast run length encoding python Apply Run Length Encoding on our Y_hat_upscaled note that for each test_image we can have multiple entries of encoded pixels Create submission DataFrame Have a look at our submission pandas dataframe. com takuok keras generator starter lb 0 326 notebook and many others Other than tidying up the structure a little and some verbose print messages and inline comments I ve also Chose an input image size of 256 256 and increased the U net s basin depth by 1 extra layer. 2 n 16 32 64 128 256 size of filter kernel kernel initializer encoder do not run max pooling on the last encoding downsampling step decoder Custom IoU metric Custom loss function Set some model compile parameters Compile our model For more GPUs Runtime data augmentation Image data generator distortion options use constant Train data provide the same seed and keyword arguments to the fit and flow methods Test data no data augmentation but we create a generator anyway combine generators into one which yields image and masks Runtime custom callbacks https github. com keegil keras u net starter lb 0 277 https www. Part 0 IntroThis notebook takes a lot of inspiration from https www. com aviwolfson adding augmentation to keras u net starter and this kernel https www. shape img_height img_width 1 Design our model architecture here the n th deep channel s exponent i. py Add in runtime data augmentation credits to this kernel https www. get_layer model_1 Reload the model Get test data Use model to predict test labels Upsample Y_hat back to the original X_test size height and width loop through test_ids in the test_path read original test image directly from path upscale Y_hat image according to original test image append upscaled image to Y_hat_upsampled Run length encoding stolen from https www. py Fixed code to enable non flat loss plots on keras model. io visualization Part 1 Data Input Visualize masks on the training data Part 2 Build model Part 3 Run model Part 4 Evaluate output Visualize predictions on the test data Part 5 Submit results Visualize upscaled predictions on the test data Set number of GPUs defaults to 1 if one GPU or one CPU. ", "id": "weiji14/yet-another-keras-u-net-data-augmentation", "size": "1206", "language": "python", "html_url": "https://www.kaggle.com/code/weiji14/yet-another-keras-u-net-data-augmentation", "git_url": "https://www.kaggle.com/code/weiji14/yet-another-keras-u-net-data-augmentation", "script": "prob_to_rles get_Y_data ZeroPadding2D AveragePooling2D keras.layers Activation keras.models train_test_split IPython.display keras dice_coef plot_model label                  #Used for Run-Length-Encoding RLE to create final submission mean_iou Lambda FormatStrFormatter keras.preprocessing.image numpy MaxPooling2D Dropout translate_metric rle_encoding ImageDataGenerator BatchNormalization bce_dice_loss matplotlib.ticker Dense Callback on_epoch_end backend as K GlobalAveragePooling2D LeakyReLU keras.callbacks on_train_begin add PlotLosses(Callback) tensorflow matplotlib.pyplot multi_gpu_model ModelCheckpoint GlobalMaxPooling2D keras_model backend get_train_test_augmented sklearn.model_selection pandas get_X_data EarlyStopping Conv2D skimage.morphology load_model Conv2DTranspose Model keras.layers.advanced_activations concatenate Input keras.utils clear_output __init__ keras.layers.merge Flatten ", "entities": "(('fit_generator', 'https stackoverflow'), 'train') (('Set number', 'one GPU'), 'visualization') (('com keras checkpoint weights 41342098 hdf5', 'multi_gpu_model i.'), 'question') (('verbose print little inline I', '1 extra layer'), 'starter') (('Get', 'together extra dimension'), 'change') (('IntroThis 0 notebook', 'https www'), 'part') (('submission Set seed final values', 'system own e.'), 'Set') (('model img_height 1 here n', 'deep channel'), 'shape') (('DataFrame', 'submission pandas dataframe'), 'run') (('get_layer', 'https www'), 'model_1') (('which', 'image'), '2') (('com aviwolfson', 'net starter'), 'add') "}