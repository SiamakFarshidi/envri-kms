{"name": "phosphate cluster analysis xgm lgbm ", "full_name": " h2 1 Import libraries h2 2 Download datasets h2 3 EDA h2 Data clustering h2 4 Preparing to modeling h3 XGB h3 LGBM ", "stargazers_count": 0, "forks_count": 0, "description": "1 XGB LGBM preprocessing models model tuning For boosting model Synthesis valid as test for selection models For models from Sklearn Synthesis valid as test for selection models Relative error between predicted y_pred and measured y_meas values RMSE between predicted y_pred and measured y_meas values Calculation of accuracy of boosting model by different metrics Calculation of accuracy of model \u0430\u043a\u0449\u044c Sklearn by different metrics split training set to validation set. Import libraries Back to Table of Contents 0. com vbmokin bod prediction in river 15 regression models https www. Download datasets Back to Table of Contents 0. EDA Back to Table of Contents 0. Thanks for helping in this work to Vitalii Mokin vbmokin and his kernels https www. 1 This code is based on my kernel FE EDA with Pandas Profiling https www. Preparing to modeling Back to Table of Contents 0. com vbmokin fe eda with pandas profiling Data clustering 4. com vbmokin code starter phosphate prediction in river 1. ", "id": "tinakhs/phosphate-cluster-analysis-xgm-lgbm", "size": "797", "language": "python", "html_url": "https://www.kaggle.com/code/tinakhs/phosphate-cluster-analysis-xgm-lgbm", "git_url": "https://www.kaggle.com/code/tinakhs/phosphate-cluster-analysis-xgm-lgbm", "script": "lightgbm train_test_split LinearRegression cross_val_predict cross_val_predict as cvp VotingRegressor cm SimpleImputer SVR xgboost sklearn.svm numpy cross_val_score RandomForestRegressor seaborn fmin pandas_profiling hp hyperopt mean_absolute_error Trials sklearn.tree sklearn.neural_network tpe sklearn.linear_model sklearn PCA StratifiedKFold RidgeCV space_eval matplotlib.pyplot BaggingRegressor acc_boosting_model acc_rmse metrics ExtraTreesRegressor sklearn.model_selection pandas DecisionTreeRegressor acc_model SGDRegressor AdaBoostRegressor MLPRegressor r2_score PCA as PCA silhouette_samples acc_d LinearSVR mean_squared_error matplotlib sklearn.impute STATUS_OK LabelEncoder GridSearchCV sklearn.metrics sklearn.decomposition GradientBoostingRegressor sklearn.ensemble StandardScaler sklearn.preprocessing ", "entities": "(('code', 'Pandas Profiling https www'), '1') (('Data', '4'), 'eda') (('\u0430\u043a\u0449\u044c Sklearn', 'validation set'), 'valid') (('Import', 'Contents'), 'librarie') (('Download', 'Contents'), 'dataset') "}