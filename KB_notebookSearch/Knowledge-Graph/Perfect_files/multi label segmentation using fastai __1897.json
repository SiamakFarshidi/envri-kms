{"name": "multi label segmentation using fastai ", "full_name": " h1 Multi label segmentation using fastai h2 Code utils h2 EDA h3 Broken images h3 Convert masks from to RLE h2 Load images h2 Train h3 Unfreeze and differential learning rate h2 Predictions h3 Get predictions for test images h3 Resize predictions to submission size h3 Write submission file ", "stargazers_count": 0, "forks_count": 0, "description": "For now I focused on adding multi label support to fastai segmentation. Load images Train Unfreeze and differential learning rate Predictions Get predictions for test images Resize predictions to submission sizeAs per competition rules predicted masks must have 1 4 of original size for submission Write submission file Python 3 environment defined by the kaggle python docker image https github. However multi label segmentation isn t supported yet. The pixels are numbered from top to bottom then left to right 1 is pixel 1 1 2 is pixel 2 1 etc. model_dir 20190924 095959_unet_resnet18_stage1_best slice start end syntax the first group s learning rate is start the last is end and the remaining are evenly geometrically spaced TODO use activation instead. So it would be nice to use it in this project. A simple Unet with ResNet18 model is trained to verify that everything works correctly. text 10 10 f px self. To achieve this the MultiLabelSegmentationLabelList and MultiLabelImageSegment classes have been created. Multi label segmentation using fastai It is gravel or sugar Part of this project is to find out if humans even agree on these cloud patterns. read_csv split Image_Label pivot to have one row per image and masks as columns sanity check Train and test images are 1400x2100 pixels TODO remove use_partial_data use only a subset of data to speedup tests put all masks into a single channel shape CxHxW slice tensor to a single mask channel use powers of two for class codes to keep them distinguishable after sum use same color normalization in image and legend custom legend see https matplotlib. 1 gallery text_labels_and_annotations custom_legends. Consequently there is overlap in the labels i. size color white source https forums. each pixel can belong to several classes. Code utils EDA Broken imagesImages which look incorrect. Fastai https docs. This is only a start but I hope that this will be helpful to others. ai t how to load multiple classes of rle strings from csv severstal steel competition 51445 2 add attributes to copy by new load mask at full resolution shape CxHxW filter out NaNs binarize masks get filename only reduce image size img_size tuple v 16 for v in train_img_dims use multiple of 4 no need for a void class if a pixel isn t in any mask it is not labelled add unlabelled test images set empty RLE string as label to produce empty multi label masks and allow reconstruct and show TODO add data augmentation tfms get_transforms use same stats as pretrained model adapted from https www. 5 make sure target is float too update a graph of learner stats and metrics after each epoch save model at every metric improvement stop training if metric no longer improve point to writable directory learn learn. Convert masks from to RLEFrom evaluation https www. com iafoss unet34 dice 0 87 can use sigmoid on the input too in this case the threshold would be 0. Different persons will label clouds differently the same area can be seen has gravel by one person and sugar by another one. The test_images are loaded in the databunch test dataset and utilized at the end of this notebook to make predictions and write submission file. com c understanding_cloud_organization overview evaluation start position and a run length. This way overlapping label information is preserved. 1 3 implies starting at pixel 1 and running a total of 3 pixels 1 2 3. com kaggle docker python linear algebra data processing CSV file I O e. ai integrates convenient features for data augmentation and training which should be useful later. Each RLE encoded mask is loaded into a separate image segment channel. html debug info ax. ai t unet how to get 4 channel output 54674 4 adapted from https forums. ", "id": "alt250/multi-label-segmentation-using-fastai", "size": "1897", "language": "python", "html_url": "https://www.kaggle.com/code/alt250/multi-label-segmentation-using-fastai", "git_url": "https://www.kaggle.com/code/alt250/multi-label-segmentation-using-fastai", "script": "MultiLabelImageSegment(ImageSegment) reconstruct fastai.vision fastai.utils.mem mask_to_rle open show fastai.utils.show_install Line2D numpy test_mask_rle fastai.callbacks.hooks analyze_pred dice_metric tqdm write_submission_file matplotlib.pyplot show_img_fn show_img_info fastai.callbacks pandas split_img_label fmt_now datetime bce_logits_floatify show_install; show_install() time matplotlib.lines get_masks_rle __init__ resize_pred_masks rle_to_mask MultiLabelSegmentationLabelList(SegmentationLabelList) ", "entities": "(('com c understanding_cloud_organization overview evaluation', 'position'), 'start') (('everything', 'ResNet18 model'), 'train') (('humans', 'cloud even patterns'), 'label') (('54674 4', 'https forums'), 'unet') (('pixel', 'several classes'), 'belong') (('differently same area', 'one'), 'label') (('masks', 'python docker image https kaggle github'), 'image') (('threshold', 'too case'), 'use') (('this', 'others'), 'be') (('So it', 'project'), 'be') (('sum', 'legend custom https matplotlib'), 'split') (('RLE', 'image segment separate channel'), 'encode') (('3', '3 pixels'), 'implie') (('test_images', 'submission file'), 'load') (('get_transforms', 'https www'), 'add') (('metric', 'learn'), 'make') (('achieve', 'MultiLabelSegmentationLabelList'), 'create') (('which', 'data augmentation'), 'integrate') (('evenly geometrically TODO', 'activation'), 'model_dir') (('pixels', 'then right 1'), 'number') (('I', 'fastai segmentation'), 'focus') (('which', 'Broken imagesImages'), 'EDA') "}