{"name": "digit recognition using knn ", "full_name": " h2 Digit Recognizer ", "stargazers_count": 0, "forks_count": 0, "description": "128 on the test data. The image is clipped before zooming to preserve the image size. Using the classification report and confusion matrix to understand the model s performance on each fold. best_score_ end n n print f Best Parameters n json. Combining the synthesized data with the actual training dataFitting a new model with the tuned hyperparameters to the combined datasetGenerating the submission file Note With Data Augmentation the accuracy jumped from 97. com gauthampughazh titanic survival prediction pandas plotly keras Peeking the data Loading the datasets into dataframesKnowing about the features in the datasetsConverting the train and test dataframes into numpy arraysVisualizing a digit from the training data as a 28 X 28 image Model Selection Using StratifiedKFold to ensure that the test data represents samples from all classes digits and for cross validating the model. DataFrame grid_estimator. cv_results_ results_df. Please upvote if you like this notebook and share your valuable feedback. Furthermore I have used Data Augmentation or Artificial Data Synthesis technique in this notebook to boost the model s performance on the test set. com gauthampughazh disaster or not plotly use tfidf h2o ai automl House Sales Price Prediction https www. com gauthampughazh house sales price prediction svr Titanic Survival Classification https www. Linear algebra For data manipulation For visualization For modelling For evaluation and hyperparameter tuning For evaluation For data augmentation For downloading the output file Creating datasets for training and testing the model Base estimator Parameters to tune cross validation stratergy Verbosity of the logs Number of jobs to be run concurrently with 1 meaning all the processors Fitting the estimator with training data grid_estimator. Digit RecognizerAlthough this is a computer vision problem I created a simple model using K Nearest Neighbors algorithm in this notebook to be a good starting point knowing that CNN would be a much better option. Fine tuning the model by finding the best values for the hyperparameters weights n_neighbors using GridSearchCV Best parameter values found n_neighbors 4 weights distance Fitting a new model with the found hyperparameter values to the training data and making predictions on the test data Data Augmentation Each image in the training set is shifted down up left and right by one pixel rotated clockwise and anti clockwise clipped and zoomed at two different rangesgenerating eight different images. best_params_ indent 4 end n n print Grid Search CV results results_df pd. You can find my other notebooks below Disaster Tweets Classification https www. fit X_train y_train print f Best Score grid_estimator. I used the GridSearchCV to fine tune the hyperparameters such as n_neighbors and weights and to perform cross validation. ", "id": "gauthampughazh/digit-recognition-using-knn", "size": "2309", "language": "python", "html_url": "https://www.kaggle.com/code/gauthampughazh/digit-recognition-using-knn", "git_url": "https://www.kaggle.com/code/gauthampughazh/digit-recognition-using-knn", "script": "clipped_zoom FileLink # For downloading the output file shift_in_all_directions shift_in_one_direction IPython.display KNeighborsClassifier # For modelling confusion_matrix zoom # For data augmentation cross_val_score numpy scipy.ndimage sklearn.neighbors rotate_in_all_directions classification_report # For evaluation matplotlib.pyplot StratifiedKFold # For evaluation and hyperparameter tuning sklearn.model_selection pandas rotate GridSearchCV alter_image sklearn.metrics shift ", "entities": "(('starting good CNN', 'notebook'), 'be') (('image', 'eight different images'), 'weights') (('you', 'valuable feedback'), 'upvote') (('Furthermore I', 'test set'), 'use') (('image', 'image size'), 'clip') (('You', 'Disaster Tweets Classification https www'), 'find') (('test data', 'model'), 'panda') (('I', 'cross validation'), 'use') (('concurrently 1 processors', 'training data grid_estimator'), 'algebra') (('accuracy', '97'), 'combine') "}