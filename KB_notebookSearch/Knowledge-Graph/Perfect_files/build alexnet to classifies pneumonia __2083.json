{"name": "build alexnet to classifies pneumonia ", "full_name": " h3 Summary h1 1 Import libs h1 2 Explore data h3 Inference from charts h1 3 Visualize image h2 Image histogram h1 4 Data augmentation h1 5 Prepare data h1 6 Build AlexNet h2 6 1 AlexNet h2 6 2 Train AlexNet h2 6 3 Plot learning curve h2 6 4 Evaluate ", "stargazers_count": 0, "forks_count": 0, "description": "1 AlexNet Define model architecture 6. 4 Evaluate Common lib Utils Sklearn Tensorflow Init variables Split to train test set Check train_df size test_df size metadata_df size Add text to chart fill na Train set Test set Train pnemonia Test pnemonia Train pnemonia Test pnemonia Plot image Plot image histogram Plot image Plot image histogram When export model these preprocessing layers will be saved along with the rest of model Preprocessing layer 1st layer 2nd layer 3rd layer 4th layer 5th layer Flatten 6th layer 7th layer 8th layer output Create folder contains model s files Initialize TensorBoard. 3 Plot learning curve 6. Visualize image Plot random 6 images in train set Image histogram An image histogram is a type of histogram that acts as a graphical representation of the tonal distribution in a digital image. Data augmentation Plot images after augmentation 5. Build AlexNet Preprocessing layers Define metrics used for all models 6. By looking at the histogram for a specific image a viewer will be able to judge the entire tonal distribution at a glance. It plots the number of pixels for each tonal value. Cause the difference of Pnemonia and Normal cases so that we should use AUC or F1 score to evaluate the goodness of model. In Label_1_Virus_category those value are different to much. Explore data Count number of null values in train and test dataset Count value in Label column Make sure that all normal cases go with unknow value in Label_1_Virus_category and Label_2_Virus_category Count value in Label_1_Virus_category column Count value in Label_2_Virus_category column Inference from charts We have 2 cases that is Pnemonia and Normal case. Pnemonia cases is much more than Normal cases in both train set and test set. Summary Exploring data Visualizing image Data augmentation Preparing data Training AlexNet to classifies images Result AUC 97 1. In Label_2_Virus_category if we remove all unknow value then we just have 69 sample. Image histogram of 5 Normal cases 4. All Normal cases is labeled as unknow null in Label_1_Virus_category and Label_2_Virus_category. All Pnemonia cases is labeled as bacteria virus stress smoking and dont have any unknow null value in Label_1_Virus_category in both train set and test set. In train set most of pnemonia case is labeled as unknow null value 3875 3944. In test set all pnemonia case is labels as unknow null value. Thus we are going to construct a model which classifies Normal and Pnemonia cases. ", "id": "luukhang/build-alexnet-to-classifies-pneumonia", "size": "2083", "language": "python", "html_url": "https://www.kaggle.com/code/luukhang/build-alexnet-to-classifies-pneumonia", "git_url": "https://www.kaggle.com/code/luukhang/build-alexnet-to-classifies-pneumonia", "script": "show_multi_img InputLayer AveragePooling2D add_annotate_to_chart Activation show_img train_test_split tensorflow.keras.layers array_to_img count_plot_value_in_column tensorflow.keras.models numpy MaxPooling2D seaborn tensorflow.keras.metrics Dropout img_to_array Adam ImageDataGenerator BatchNormalization load_img Dense img_path_to_array tqdm create_dir AUC tensorflow ReduceLROnPlateau Add matplotlib.pyplot tensorflow.keras.callbacks ModelCheckpoint FalseNegatives tensorflow.keras.preprocessing.image count_plot_null_value Sequential TrueNegatives sklearn.model_selection pandas load_img_path EarlyStopping Conv2D l2 Model Rescaling TruePositives Input tensorflow.keras.layers.experimental.preprocessing tensorflow.keras VGG16 tensorflow.keras.applications.vgg16 tensorflow.keras.optimizers tensorflow.keras.regularizers Flatten FalsePositives Resizing ", "entities": "(('value', 'much'), 'be') (('It', 'tonal value'), 'plot') (('Normal we', 'model'), 'cause') (('which', 'Normal cases'), 'go') (('most', 'unknow null value'), 'set') (('Build AlexNet Preprocessing layers Define metrics', 'models'), 'use') (('Preparing', 'AUC'), 'Result') (('Normal cases', 'unknow null'), 'label') (('that', 'digital image'), 'random') (('Pnemonia cases', 'train set'), 'be') (('then we', 'just 69 sample'), 'have') (('that', '2 cases'), 'make') (('output Create folder', 'files Initialize TensorBoard'), 'lib') (('bacteria virus', 'train set'), 'label') (('viewer', 'glance'), 'be') "}