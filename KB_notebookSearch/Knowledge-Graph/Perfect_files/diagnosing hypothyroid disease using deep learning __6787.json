{"name": "diagnosing hypothyroid disease using deep learning ", "full_name": " h1 Diagnosing Hypothyroid disease using Deep Learning h2 Importing necessary libraries h2 Data h2 Data Cleaning h3 Checking for null values h3 Converting columns into numeric values h3 Visualize the patterns or trends in data h3 Replacing null values in our data h3 Visualize the imputed data h3 Checking for null values h2 We will again check the number of null values for each column h2 Modeling the data h3 1 Defining the features and target variables h3 2 Splitting the data into train 80 and test 20 data h3 3 Scaling the train and test data h3 4 Building the neural network h3 5 Training the model h3 6 Evaluating the model h3 7 Saving the trained model h2 Conclusion ", "stargazers_count": 0, "forks_count": 0, "description": "Modeling the dataOur data is now cleaned and formatted. Some of the features contain values. F1 score Recall Precision We are getting a quite good value of F1 score recall and precision as well. 26 from our Deep Learning model. In this tutorial we will be learning the code and workflow for diagnosing whether or not a person is suffering from Hypothyroid disease based on various metrics. To start using it we can simply load the csv dataset using pandas. Data CleaningAfter getting the data cleaning and formatting it is essential to avoid potential faults in our results due to inconsistencies or errors in our data. We are using the ReLU activation function in the hidden layer and sigmoid function for the output layer to return a binary value of output i. Also the target value in the dataset looks imbalanced as the number of negative samples is much higher than the positive ones. Training the modelWe will now train the model with a validation split of 0. read_csv For saving models For plotting figures For building our model Load dataset from csv using pandas Renaming the first column as target Check the count of data in target Replacing the categorical values into binary values Displaying the head of the dataset Replacing into NaN values Count the number of null values Dropping the TBG column as it contains extremely high number of null values Selecting columns with data type as object Convert to numeric values Viewing the details List of columns containing null values Replacing null values by mean Replacing null values by median The gender data looks to be imbalanced with 0 lesser than 1 Replacing null values with 0 Plot the histogram of different features Check for the number of null values Features selecting all columns except the target Target variable Split the data Initialization of the class Applying the scaler on test and train data Input Hidden layer Output layer Training the model Get the loss and accuracy of the model by evaluation Print the loss and accuracy score for the model Predicting the output predictions Calculating the F1 score recall and precision summarize the result and plot the training and test loss Set the parameters Display the plots Save the trained model. Converting columns into numeric valuesThis will help us in performing mathematical and statistical operations on the columns. Based on the statistics plotted above we can see that The features Age and T4U show a normal distribution which is why we will be replacing the missing values with mean. The dataset contains the value of different hormone levels of different patients along with our target variable i. Visualize the patterns or trends in dataWe will now visualize the patterns in different columns features of the data using the hist function of pandas library. load_model path to savedmodel ConclusionIn this project we have illustrated the potential use of neural networks in diagnosing hypothyroid disease. However our data is imbalanced and hence accuracy is not a good measure. Most of the neural network architectures are determined by experimentation in practice. The identification of thyroid disease identi\ufb01cation remains to be an essential yet dif\ufb01cult task in both clinical diagnosis and statistical classification. For scaling the data we will be using the StandardScaler class from scikit learn. Data We are using the hypothyroid data for training our model. Visualize the imputed data Checking for null valuesWe will again check the number of null values for each column. Defining the features and target variablesWe will be separating our dataset into features X and the target variable y. Scaling the train and test data Scaling the data helps in normalizing the data within a particular range and also helps in speeding up the calculations in an algorithm. Building the neural networkThe scope of our project is to design a feed forward neural network for classi\ufb01cation of our target variable. This knowledge can be further extended for many other disease diagnosis where such problems exist. Compiling the model with adam optimizer and loss function as binary_crossentropy. We will then look into the replacing the categorical values of some other columns in the dataset. The features TSH T3 TT4 and FTI show a skewed distribution which is why we will be replacing the missing values with median. We will be mapping the value hypothyroid as 1 and negative as 0. So we will be replacing the missing values with 0. Splitting the data into train 80 and test 20 dataIn order to efficiently evaluate our model we will be training our model on 80 of the data and keep the rest 20 for testing the model. However Arti\ufb01cial neural networks show a promising result due to its flexible nature in modeling complex patterns of data for diagnosis. We can then load the saved model using model keras. org stable modules generated sklearn. Replacing null values in our data We will now replace or impute the null values in our data with their appropriate statistical metric. Hence we will be using a metric called F1 score https scikit learn. linear algebra data processing CSV file I O e. The feature gender is binary and contains an imbalanced data with the values 1 much greater then 0. The dataset contains several features related to the patient such as age gender and if the person was on any kind of medication or not along with the measure of different hormones such as T3 T4 etc. hypothyroid 1 or negative 0. if the patient was suffering from hypothyroidism or not. Accuracy We are getting a quite good accuracy of 98. It is a condition which causes your thyroid gland to not produce enough of certain crucial hormones. Evaluating the modelWe will now evaluate the performance of our trained model on test data to find metrics such as Accuracy F1 score recall and precision. Importing necessary librariesWe will start by importing the necessary libraries in Python. Here we are defining a neural network containing a sequential model with one hidden layer and one output layer. The diagnosis involves the use of a large number of interrelated patient attributes along with extremely unbalanced groups that result in a complicated relationship between the input features. So we will be replacing them with NaN values to count them. Hence our model seems to be performing well. It usually may not cause noticeable symptoms in the early stages and hence becomes extremely difficult to diagnose. Training and validation loss We can see that both the losses have converged at a very good rate. Applying deep learning algorithms can help assist healthcare workers in identifying signs and symptoms based on patterns shown in past cases of patients data. So we will be not be using this column for our model. The value hypothyroid means that the patient was diagnosed with hypothyroidism and negative means that there hypothyroidism was not diagnosed. We will be using a Neural network for predicting the hypothyroidism target based on our input data features. Several factors determine the performance of the model such as the input hidden and output layer con\ufb01gurations and the training methodology used. Diagnosing Hypothyroid disease using Deep LearningHypothyroid disease or Hypothyroidism is one of the most difficult diseases to diagnose. We have 24 feature columns due to which we have specified the input dimension as input_dim 24. Checking for null valuesHere we can see that the feature column TBG contains extremely high number of null values. We are now ready to model the data for prediction using Deep Learning. Saving the trained modelWe can save our trained model for future use. ", "id": "merishnasuwal/diagnosing-hypothyroid-disease-using-deep-learning", "size": "6787", "language": "python", "html_url": "https://www.kaggle.com/code/merishnasuwal/diagnosing-hypothyroid-disease-using-deep-learning", "git_url": "https://www.kaggle.com/code/merishnasuwal/diagnosing-hypothyroid-disease-using-deep-learning", "script": "recall_score keras.layers keras.models matplotlib.pyplot f1_score Dense train_test_split sklearn.preprocessing Sequential precision_score confusion_matrix sklearn.model_selection pandas sklearn.metrics StandardScaler numpy ", "entities": "(('So we', 'them'), 'replace') (('that', 'input features'), 'involve') (('So we', '0'), 'replace') (('we', '20 model'), 'splitting') (('Hypothyroid Diagnosing disease', 'most difficult diseases'), 'be') (('Scaling', 'algorithm'), 'help') (('F1 score Recall We', 'F1 score recall'), 'Precision') (('Saving', 'future use'), 'save') (('losses', 'very good rate'), 'training') (('We', 'appropriate statistical metric'), 'replace') (('We', 'dataset'), 'look') (('It', 'early stages'), 'cause') (('thyroid gland', 'certain crucial hormones'), 'be') (('we', 'StandardScaler class'), 'learn') (('We', '0'), 'map') (('where such problems', 'disease further many other diagnosis'), 'extend') (('Data We', 'model'), 'use') (('patient', 'hypothyroidism'), 'suffer') (('Defining', 'target y.'), 'separate') (('valuesThis', 'columns'), 'help') (('Here we', 'one hidden layer'), 'define') (('We', 'model keras'), 'load') (('hypothyroidism', 'hypothyroidism'), 'mean') (('Hence we', 'F1 score https metric called scikit'), 'use') (('dataset', 'i.'), 'contain') (('we', 'input_dim'), 'have') (('feature gender', 'values'), 'be') (('number', 'much positive ones'), 'look') (('TBG', 'null values'), 'see') (('deep learning algorithms', 'patients data'), 'help') (('why we', 'mean'), 'see') (('We', 'Deep Learning'), 'be') (('it', 'data'), 'get') (('why we', 'median'), 'show') (('output training methodology', 'such input'), 'determine') (('project we', 'hypothyroid disease'), 'path') (('person', 'T3 T4 such etc'), 'contain') (('Evaluating', 'Accuracy F1 score such recall'), 'evaluate') (('Training', '0'), 'train') (('Building', 'target variable'), 'be') (('However Arti\ufb01cial neural networks', 'diagnosis'), 'show') (('person', 'various metrics'), 'learn') (('Importing', 'Python'), 'start') (('We', 'output i.'), 'use') (('imputed data', 'column'), 'check') (('Accuracy We', '98'), 'get') (('So we', 'model'), 'use') (('We', 'input data features'), 'use') (('we', 'pandas'), 'load') (('Visualize', 'pandas library'), 'visualize') (('Most', 'practice'), 'determine') (('Predicting', 'trained model'), 'read_csv') (('identification', 'essential yet dif\ufb01cult clinical diagnosis'), 'remain') "}