{"name": "data preparartion hubmap ", "full_name": " h1 HuBMAP Hacking the Kidney h1 Identify glomeruli in human kidney tissue images h1 Table of contents h1 1 Introduction h1 2 Import Packages h1 3 Loading Data and Overview h2 3 1 Train Data h2 3 2 HuBMAP metadata h2 3 3 Test Data h2 3 4 Train Images h2 3 5 Test Images h3 Utility File h1 4 Image Segmentation Mask h2 4 1 Image Tiff file h3 mask h2 4 2 Annotation json file h4 Glomerulus segmentation file h4 Anatomical structure file h1 5 EDA h2 5 1 Individual Features h2 5 2 Pandas Metadata Profiling h1 6 Creating the dataset for training h2 6 1 Idea h3 Image Tiling h4 Idea h4 Input h4 Output h2 6 2 Tiling h2 6 3 Visualisation h1 8 Data Preparation h2 8 1 Filtering low band density h3 7 1 1 selecting images with tissues h3 7 1 2 Visualisation h2 8 1 Augmentation ", "stargazers_count": 0, "forks_count": 0, "description": "1 selecting images with tissues Table of contents 0. 1 Resolution of images are huge and making it hard to analyse and use them to train any model. 1 Filtering low band density Table of contents 0. Also it has mask data in encoding column. 4 Train Imaegs 8 3. Loading Data and overview 3 3. Import Packages 2 3. Data Preparation 20 Filtering low band density 21 Augmentation 22 1. 2 HuBMAP metadata Table of contents 0. To make things easy technique of tiling can be used. I ll start by using the image with the smallest resolution i. Tiling Table of contents 0. Data Preparation Table of contents 0. HuBMAP Hacking the Kidney Identify glomeruli in human kidney tissue images Table of contents 1. csv files containing train test anonymous patient dataThere are addition two folders directories containing images in. Images with 0 mask and located in the firs last 2 rows columns are totally useless for a further model training. 2 Visualisation Table of contents 0. tiff Image Tiling For the beginning I will split aaa6a05cc. 1 Train Data 5 3. It includes anonymized patient data. maskWe can decode mask from encoding column of train. 1 There are 8 training set. Pandas Metadata Profiling Table of contents 0. They are intended to help us identify the various parts of the tissues 5. 1 We are given histological images of the kidney. Even in this case I will still have some 0 mask images it also will be useful for the model Idea taking a random tile size preferred 256 X 256 or 512 X 512 aligning the tile with the image and cropping out save the cropped file to the designated location move the tile forward and repeat the process repeat the same process with the corresponding annotation file Input image file train. 4 Train Images Table of contents 0. 1 There are 5 test set 3. 1 Utility File 4 Image Segmentation Mask Table of contents 0. We are given histological images of the kidney and annotation information representing the glomerular segmentation. csv for annotation Output A file containing info about created dataset A zip file containg tiled out images and mask 6. 1 Train Data Table of contents 0. This csv includes ids corresponding to data in train directory. Visualisation Table of contents 0. Loading Data and Overview Table of contents 0. We can load this data with tifffile module. 8 data are for training and rest are test. Image Segmentation Mask 10 4. Individual FeaturesThere are 13 data. Augmentation Table of contents 0. Glomerulus segmentation file According to the description of dataset the same information as the rle encoded mask is stored in the. Import Packages Table of contents 0. Creating the dataset for training Table of contents 0. com exploratory data analysis with pandas profiling de3aae2ddff3 loading the CSVs Those folders will store our images This list will contain information about all our images defining tile size we can decreses the tile size to 256 X 256 to get even more number of images after tiling The break down starts here Creating the meta file Count of Split images https albumentations. Introduction Table of contents 0. Creating Dataset for Training 16 Idea 17 Tiling 18 Visualisation 19 8. tiff and store all files into the folder split Images will be stored in the folder split images Mask files will be stored in the folder split masks Also I m going to implement filtering. This data is encoded with RLE encoding. 1 We aim to develop a segmentation algorithm to identify the Glomerulus in the kidney. 1 tiff files are kidney image data. EDA Table of contents 0. json files include unencoded annotations. 2 Annotation json file Table of contents 0. 3 Test Data 7 3. 1 This file includes additional information including anonymized patient data about each image 3. These images are tiff format. 1 Image Tiff File 11 4. com paulorzp rle functions run lenght encode decode https towardsdatascience. 2 Annotation json file 12 6. 5 Test Images Table of contents 0. EDA 13 Individual Features 14 Pandas Metadata profiling 15 7. 1 Image Tiff file Table of contents 0. Each data has 16 colmuns. Idea Table of contents 0. csv file Anatomical structure file This file contains anatomical structure segmentations. 1 Augmentation is done only on images with glomsValidation samples are split and kept aside and it is not used for augmentation to avoid leakage of train data to val data basic visualize image preprocessing kaggle datasets from kaggle_datasets import KaggleDatasets import segmentation_models as sm https www. 2 HuBMAP Metadata 6 3. Utility Functions 4 4. tiff format encoded annotations in. 3 Test Data Table of contents 0. 1 We have also two kinds of annotation files. Also we can use anatomical structure segmentation information and additional information including anonymized patient data about each image. ", "id": "rishabhdev070/data-preparartion-hubmap", "size": "5179", "language": "python", "html_url": "https://www.kaggle.com/code/rishabhdev070/data-preparartion-hubmap", "git_url": "https://www.kaggle.com/code/rishabhdev070/data-preparartion-hubmap", "script": "mask2rle albumentations pathlib plotImages2 train_test_split IPython.display kaggle_datasets tensorflow.keras.layers LearningRateScheduler ImageDraw wandb.keras tensorflow.keras.losses Image numpy tensorflow.keras.models seaborn Adam pandas_profiling Path binary_crossentropy draw_structure glob Callback backend as K Image as displayImage read_single tqdm flatten augment_data KaggleDatasets tensorflow ReduceLROnPlateau tensorflow.keras.utils Window KFold matplotlib.pyplot tensorflow.keras.callbacks ModelCheckpoint kaggle_secrets backend PIL sklearn.model_selection tifffile pandas EarlyStopping tqdm.notebook load_model Model get_custom_objects tensorflow.keras display clear_output UserSecretsClient WandbCallback tensorflow.keras.optimizers rle2mask read_data segmentation_models rasterio.windows ", "entities": "(('I', 'resolution smallest i.'), 'start') (('aside it', 'sm https www'), 'do') (('easy technique', 'tiling'), 'make') (('rows last 2 columns', 'model totally further training'), 'be') (('two folders', 'images'), 'be') (('13 Individual', '15 7'), 'EDA') (('we', 'images https albumentations'), 'com') (('Loading', 'contents'), '0') (('forward process', 'annotation file Input image file corresponding train'), 'have') (('HuBMAP Hacking', 'contents'), 'Identify') (('us', 'tissues'), 'intend') (('8 data', 'training'), 'be') (('We', 'glomerular segmentation'), 'give') (('Also we', 'image'), 'use') (('file', 'image'), 'include') (('I', 'tiff Image beginning'), 'Tiling') (('Also it', 'encoding column'), 'have') (('com paulorzp rle functions', 'lenght encode decode https towardsdatascience'), 'run') (('We', 'tifffile module'), 'load') (('We', 'kidney'), '1') (('Output file', 'images'), 'csv') (('Also I', 'filtering'), 'store') (('rle', 'the'), 'file') (('csv file structure Anatomical file', 'structure anatomical segmentations'), 'file') (('csv', 'train directory'), 'include') (('json files', 'unencoded annotations'), 'include') (('maskWe', 'train'), 'decode') (('We', 'annotation files'), '1') (('1 We', 'kidney'), 'give') (('it', 'model'), 'be') "}