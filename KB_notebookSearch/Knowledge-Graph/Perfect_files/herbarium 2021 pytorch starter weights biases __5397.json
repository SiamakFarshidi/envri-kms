{"name": "herbarium 2021 pytorch starter weights biases ", "full_name": " h2 Disclaimer h1 Table of Content h1 Packages and Basic Setup h1 Label Encoder h1 Dataset DataLoader and K Fold h2 Image Augmentation h2 StratifiedKFold h1 The Model u200d h2 Transfer Learning h2 Resnet18 h1 Training h1 Resources ", "stargazers_count": 0, "forks_count": 0, "description": "This transaction is also known as knowledge transfer. Training Training Packages and Basic SetupIn the following hidden code cell we Import the required libraries Main ones being torch https pytorch. It takes a lot of time to generate folds that s we use Weights and Biases Artifacts to store our folds. Artifacts also track the training pipelines as DAGs. com yasufuminakama s kernel from last year s competition Herbarium 2020 PyTorch Resnet18 train https www. Each element of our dataset returns Image Encoded Label Image Augmentation Applying Standard Image Augmentation Techniques such as Resize Normalize and conversion to torch. 5M images representing nearly 65 000 species from the Americas and Oceania that have been aligned to a standardized plant list LCVP v1. be jxmzY9soFXg Stratified K Fold What It Is How to Use It https towardsdatascience. html for Event LoggingAs we can see the DataFrame contains the following columns file_name str Contains the Relative Path to the Images height int The Height of the Image width int The Width of the Image id int The Image ID license int Either 0 1 or 2 category_id int Our Target Variable determining the species corresponding to the Image Label EncoderWe use the LabelEncoder https scikit learn. Packages and Basic Setup packages 2. org torchvision https pytorch. values to get the file_name and then use cv2 to read the image. The Model Model 5. org 3 library logging. Tensor For Cross Validation Device Configuration Setting RandomSeed for Reproducibility Creating a logger Specify the format Create a StreamHandler Instance Create a FileHandler Instance Create a logging. com stratified k fold what it is how to use it cf3d107d3ea2 Weights and Biases Getting Started https wandb. Dataset DataLoader and K FoldThe following code cell aims to convert the Herbarium dataset into a torch torch. The Herbarium 2021 Half Earth Challenge dataset includes more than 2. be ARI4Cz awo Video 2 Python Tutorial Logging Advanced Loggers Handlers and Formatters https youtu. In the __getitem__ method we use df. Training looping over our data iterator and feed the inputs to the network and optimize. We create a subclass which overwrites the __getitem__ and __len__ method for it to work well with the torch. Logger Instance Logging Into Weights and Biases Basic Parameters for the Model Create a Instance of LabelEncoder Fits the label encoder instance To Transform labels to normalized encoding Only allows transforms for train and valid Data Transformations for Training set Data Transformations for Validation set For Debugging Create a seperate train_labels variable Create StratifiedKFold Instance Creating Splits Exporting to CSV save it as model artifact on W B Creating Train and Valid sets Create Training Dataset Create Validation Dataset Creating a instance of a Resnet18 pretrained Model Add a Adaptive Average Pooling Layer Add a Fully connected Layer with N_CLASSES as the output dimension moves the model to the device Creating Optimizers and Schedulers Loss Function Sets the model in training mode Sets gradients of all model parameters to zero Move Image and Labels to device Forward Pass Calculate Loss Log our Training Loss to W B Backpropagation Update Average Loss Set Model in Eval mode Move Image and Labels to device To perform inference without Gradient Calculation Calculate Loss Log our Validation Loss to W B Update Average Validation Loss Updates Learning Rate wrt to the Average Validation Loss Calculate F1 Score Log our F1 Score to W B Prints Stats Update Best Score. Think of an Artifact as of a folder of data to which we can add individual files and then upload to the cloud as a part of our W B project which also supports automatic versioning of datasets and models. This helps solve the problem of vanishing gradients. instead of creating a DNN dense neural network from scratch the model will transfer the features it has learned from the different dataset that has performed the same task. Label Encoder label encoder 3. All Dataset objects in pytorch represent a map from keys to data samples. Here s an example of a artifacts graph. html Print the device configuration Set Random Seed to ensure reproducibility Create a Logger https docs. Resnet18A residual network or ResNet for short is a DNN that helps to build deeper neural networks by utilizing skip connections or shortcuts to jump over some layers. org stable modules generated sklearn. If the transform bool is set to True we apply the transforms. Dataset DataLoader and K Fold data 4. html and sklearn https scikit learn. The numbers denote layers although the architecture is the same. DisclaimerThis kernel is heavily inspired from yasufuminakama https www. png In the end we just add a Adaptive Pooling Layer and a Fully Connected Layer with output dimensions equal to the number of classes. preprocessing in order to encode target labels with value between 0 and n_classes 1. com yasufuminakama herbarium 2020 pytorch resnet18 train Table of Content1. You can store different versions of your datasets and models in the cloud as Artifacts. Tensor StratifiedKFoldStratified kfold cross validation is an extension of regular kfold cross validation but specifically for classification problems where rather than the splits being completely random the ratio between the target classes is the same in each fold as it is in the full dataset. There are different versions of ResNet including ResNet 18 ResNet 34 ResNet 50 and so on. The Herbarium 2021 Half Earth Challenge is to identify vascular plant specimens provided by the New York Botanical Garden NY Bishop Museum BPBM Naturalis Biodiversity Center NL Queensland Herbarium BRI and Auckland War Memorial Museum AK. Resources Logging Tutorial Series by Corey Schafer Video 1 Python Tutorial Logging Basics Logging to Files Setting Levels and Formatting https youtu. We choose to use StratifiedKFold because we have some class imbalance in our Dataset. gif The Model Transfer LearningThe main aim of transfer learning TL is to implement a model quickly i. ai site getting started Compete More Effectively on Kaggle using Weights and Biases https youtu. be Y7rjzfpWSo8 Import Statements To set Random Seed for Reproducibility For Image Processing For Reading in the JSON file The Main Machine Learning Framework To set Random Seed for Reproducibility For Event Logging For LabelEncoder and Metrics For creating a pretrained model For Numerical Processing For creating DataFrames For Image Augmentations For Creating ProgressBar For the Label Encoder For Converting to torch. ", "id": "sauravmaheshkar/herbarium-2021-pytorch-starter-weights-biases", "size": "5397", "language": "python", "html_url": "https://www.kaggle.com/code/sauravmaheshkar/herbarium-2021-pytorch-starter-weights-biases", "git_url": "https://www.kaggle.com/code/sauravmaheshkar/herbarium-2021-pytorch-starter-weights-biases", "script": "preprocessing # For the \ud83c\udff7 Label Encoder albumentations.pytorch numpy seed_torch tqdm ToTensorV2 # For Converting to torch.Tensor get_transforms sklearn kaggle_secrets StratifiedKFold # For Cross Validation sklearn.model_selection pandas TrainDataset(torch.utils.data.Dataset) init_logger tqdm # For Creating ProgressBar __len__ UserSecretsClient __init__ __getitem__ ", "entities": "(('Half Earth Herbarium 2021 Challenge', 'New York Botanical Garden NY Bishop Museum BPBM Naturalis Biodiversity Center NL Queensland Herbarium BRI'), 'be') (('it', 'full dataset'), 'be') (('determining', 'LabelEncoder https scikit'), 'html') (('You', 'Artifacts'), 'store') (('which', 'datasets'), 'think') (('Artifacts', 'DAGs'), 'track') (('it', 'https wandb'), 'stratify') (('transaction', 'knowledge also transfer'), 'know') (('we', 'folds'), 'take') (('Half Earth Challenge Herbarium 2021 dataset', 'more than 2'), 'include') (('Dataset objects', 'data samples'), 'represent') (('Main ones', 'required libraries'), 'training') (('Learning Rate', 'Stats Update Best Score'), 'log') (('that', 'layers'), 'be') (('Dataset DataLoader', 'torch torch'), 'aim') (('we', 'transforms'), 'apply') (('we', 'classes'), 'png') (('we', 'Dataset'), 'choose') (('_ _ _ len _ _ it', 'well torch'), 'create') (('Model Transfer LearningThe main aim', 'model'), 'gif') (('Set', 'Logger https docs'), 'Print') (('architecture', 'layers'), 'denote') (('element', 'torch'), 'Image') (('It', 'https towardsdatascience'), 'fold') (('Tensor', 'logging'), 'specify') (('DisclaimerThis kernel', 'yasufuminakama https heavily www'), 'inspire') (('This', 'vanishing gradients'), 'help') (('that', 'same task'), 'transfer') (('that', 'plant standardized list'), 'image') "}