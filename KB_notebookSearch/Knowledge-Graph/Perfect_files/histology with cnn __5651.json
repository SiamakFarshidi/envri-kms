{"name": "histology with cnn ", "full_name": " h1 Import the necessary libraries and load the data h1 Load the data and explore a few images ", "stargazers_count": 0, "forks_count": 0, "description": "From what I can see stroma and complex cells are very similar I m no hematologist. com neural networks crash course. png Image source https medium. com What is the intuition behind SoftMax function as the final activation function that will give the probability of the image belonging to each of the classes cell types. Now I will use LabelBinarizer to make our outputs either 0 or 1. The convolutional layer will apply a filter also called a kernel to map the input image into another kind of image in the new layer as depicted in the image below Conv2 https cdn images 1. io convolutional networks and this one https medium. org an intuitive guide to convolutional neural networks 260c2de0a050 Here the numbers in the filter are the weights our algorithm will try to predict in order to get the best results possible. 3 was the optimal value as far as I could find out. This kind of pooling takes the highest number in a given kernel size the size of the colored squares on the input image below and outputs it to the next layer. read_csv deal with paths deal with paths deal with images read images from files make plots pretty plots P get unique cell types get the first row containing an image of cell_type cell list containing one image of each type create the subplots show the images and label them loads RGB image as PIL. In the second layer type we do what is called pooling which can be commonly seen following every one or two convolutional layers. Here I ll be using Keras tensorflow backend to create a Convolutional Neural Network CNN that I hope will be capable of discriminating these cell types well. The test accuracy is about 77 83 and validation loss ranging from 0. Not bad at all for a pretty straightforward model trying to identify 7 types of cells. You may notice that all the nine elements from the input image were mapped into a single one in the new layer. So let s say a cell is MUCOSA. Now I ll run the CNN itself. org an intuitive guide to convolutional neural networks 260c2de0a050 so I won t go deep into the theory behind it here. Our dataframe is already prepared for us to classify an image into one of the cell_type. Conv http adeshpande3. Import the necessary libraries and load the data Load the data and explore a few imagesThis step was done using Kevin s notebook https www. Let s load an image for each cell_type to see how they look like. For those unfamiliar with the concept each pixel in the image is represented by a 3 sized array where each element represents the intensity of red green blue colors ranging from 0 to 255. com max 800 1 EuSjHyyDRPAQUdKCKLTgIQ. com kmader histology mnist loading and processing data methods. Below we can see a maxpooling layer. I also split the dataset into training validation and test tensors. The architecture will be 3 Conv2D Dropout Maxpooling 4 times followed by a global maxpooling. When we run our model it will give probabilities like 0 0. I hope this small notebook is helpful to people trying to learn about CNN and how to make them in Keras using this wonderful dataset linear algebra data processing CSV file I O e. and perhaps our predictor will be more confused when looking at these two types. images but I couldn t reshape it into a 4 d input. I tried to use a simpler network such as using 1 Conv2D Dropout Maxpooling but the model wasn t able to learn at all. org an intuitive guide to convolutional neural networks 260c2de0a050 After using a given number of convolutional pooling layers we can feed the output into a fully connected layer which is the usual layer in a Multilayer Perceptron MLP https machinelearningmastery. I tried to feed the Keras model directly with df. Below I ll just point out a few relevant aspects about CNNs so we can follow up the reasoning and build a basic one. org contents convnets. com max 800 1 vbfPq HvBCkAcZhiSTZybg. This is done to reduce dimensionality so the number of parameters used to train the network is reduced. png Image source https adeshpande3. For our problem is a multiclass classification we ll use softmax https www. I ve made some tests using higher and lower dropouts but 0. For instance our outputs can be STROMA DEBRIS ADIPOSE MUCOSA EMPTY TUMOR LYMPHO COMPLEX. Image type to 3D tensor with shape 150 150 3 convert 3D tensor to 4D tensor with shape 1 150 150 3 and return 4D tensor. Now all our images were read and are displayed as numpy arrays. maxpool https cdn images 1. 0 so the cell could be identified as mucosa with 70 of certainty. At the end I run the outputs through a fully connected layer to get the probabilities. This operation of multiplying the filter elements by a few elements of an image is what give the name to this kind of network roughly saying this is what a convolution is. As a direct effect the training time and overfitting issues are reduced as well. The objective now is to make a more robust architecture to improve the accuracy my goal is to at least get 85. io A Beginner 27s Guide To Understanding Convolutional Neural Networks Basically to build a simple CNN we use three kind of layers convolutional pooling and fully connected. There are lots of tutorial on the web in this topic such as this one http cs231n. We can see here the 7 existing cell types in the dataset. First let s create a 4 rank tensor see it as a 4 dimensional array. If anyone has an idea how to do it I d be glad to get feedback So the functions below just get the path to the image and load it into the shape 150 150 3 using the image package from keras. For a more mathematical definition you can check Ian Goodfellow s book chapter 9 https www. Then after using LabelBinarizer the label would be 0 0 0 1 0 0 0 0. 5 depending on weight s initialization. Image type convert PIL. ", "id": "hrmello/histology-with-cnn", "size": "5651", "language": "python", "html_url": "https://www.kaggle.com/code/hrmello/histology-with-cnn", "git_url": "https://www.kaggle.com/code/hrmello/histology-with-cnn", "script": "LabelBinarizer keras.layers keras.models train_test_split numpy MaxPooling2D seaborn paths_to_tensor Dropout randint Dense glob GlobalAveragePooling2D keras.callbacks tqdm ImageFile tensorflow random skimage.io matplotlib.pyplot ModelCheckpoint GlobalMaxPooling2D Sequential set_random_seed PIL path_to_tensor pandas sklearn.model_selection glob #deal with paths np_utils EarlyStopping Conv2D keras.preprocessing imread #read images from files get_first_cell_images keras.utils Flatten image sklearn.preprocessing ", "entities": "(('a few step', 'notebook https www'), 'import') (('test accuracy', 'validation about 77 83 0'), 'be') (('we', 'layers'), 'io') (('network', 'parameters'), 'do') (('I', 'Conv2D Dropout such 1 Maxpooling'), 'try') (('convolutional layer', 'https cdn Conv2 images'), 'apply') (('outputs', 'instance'), 'be') (('I', 'training validation'), 'split') (('t', 'd 4 input'), 'image') (('complex very I', 'hematologist'), 'be') (('such one', 'topic'), 'be') (('architecture', 'Dropout 4 times global maxpooling'), 'be') (('So functions', 'keras'), 'have') (('so we', 'basic one'), 'point') (('best results', 'order'), 'org') (('already us', 'cell_type'), 'be') (('perhaps predictor', 'more when two types'), 'be') (('training time overfitting issues', 'direct effect'), 'reduce') (('First s', '4 dimensional array'), 'let') (('goal', 'at least 85'), 'be') (('it', '0'), 'give') (('subplots', 'PIL'), 'deal') (('kind', 'next layer'), 'take') (('convolution', 'network'), 'be') (('I', 'probabilities'), 'run') (('so cell', 'certainty'), '0') (('Image type', '1 150 150 3 4D tensor'), 'convert') (('where element', '255'), 'represent') (('I', 'cell types'), 'use') (('t', 'it'), 'org') (('Now images', 'numpy arrays'), 'read') (('Now I', 'outputs'), 'use') (('which', 'commonly one convolutional layers'), 'in') (('which', 'Multilayer Perceptron MLP https usual machinelearningmastery'), 'org') (('that', 'classes cell types'), 'com') (('they', 'how'), 'let') (('you', 'Ian https book chapter 9 www'), 'check') (('I', 'directly df'), 'try') (('multiclass we', 'softmax https www'), 'be') (('ve tests', 'higher dropouts'), 'make') (('small notebook', 'dataset linear algebra data CSV wonderful processing file'), 'hope') (('We', 'dataset'), 'see') (('nine elements', 'new layer'), 'notice') "}