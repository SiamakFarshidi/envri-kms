{"name": "eeg sleep full pipeline ", "full_name": " h4 Install the required packages and libraries Restart kernel after installing for updated import namespace h4 Check file naming convention h1 Pipeline design h4 1 Inspect sample h4 2 Load datasets h4 3 Data quality check and cleaning h4 4 Data Preprocessing and Feature Extraction h4 5 Modelling h4 6 Reaults Discussion h4 7 Conclusion h4 8 References and Appendix h3 High level diagram of the steps h2 Step 1 Inspect sample h4 Comment h4 Inspect the files failed to be loaded h4 Comment h2 Step 2 Load datasets h3 h4 Comment h4 subject id encoding h4 Check class distribution over subject id h4 Comment h2 Step 3 Data quality check and cleaning h3 3 1 Tukey fences for univariate outliers h3 Comment h3 3 2 Missing data handling h3 3 3 High level statistics h3 3 4 Class distirbution check and handling h4 Comment h4 Class value encoding h3 3 5 Summary h3 3 6 Splitting the dataset Hold out test dataset h3 Comment h2 Step 4 Data Preprocessing and Feature Extraction h3 4 1 Project Background h4 Description h4 Goal Detect whether a person is in deep sleep or not h4 Objectives targets following the iterative CRISP DM data exploration framework h4 Without previous experience in handling EEG data the targets and estimated time cost are listed below h3 4 2 Context background h4 Literature Review Due to time constrait it is not in great depth h4 Conventions in EEG data modelling h2 Implementation Plan h3 Step 4 3 Data Cleaning h4 Description h4 Implementation Plan h4 Time series standardisation and normalization h4 Test h4 Apply h3 Global Average Pooling GAP for Convolution h4 Eyes Opened condition vs Eye Closed condition h4 For Eyes Opened and Eyes Closed conditions across all channels h4 Comment h4 Moving Average for spikes smoothing h3 Passband Filter to get frequency between 1 Hz and 120 Hz h4 Shape of the filter h4 Demo h4 Apply to our sample data h4 Apply to channel 1 because it has more fluctuations h3 Summary of data cleaning h3 Step 4 4 Signal Characterization h4 Implementation Plan h4 Fast Fourier Transform FFT for main frequencies profile h4 Test h4 Plot PSD for amplitudes of different frequencies h4 After normalisation h4 After convolution h4 After bandpass filter h4 After BP NORM MA h4 Correlations between channel h4 Comment h3 4 5 Features Extraction h4 4 5 1 Extract statistical features with tsfresh h4 Test h4 Batching and processing segmentations separately h4 Comment h3 4 5 2 Facebook s Kats package for time series feature extraction h4 Test h3 Build Feature selection h3 Cleaning of extra features h4 Replace inf or inf with 0s h4 Drop 0s columns h3 Standardisation of added features h3 Feature importance and selection h3 Feature selection with univariate statistical tests h4 Comment h4 Comment h3 Apply feature extraction and selection pipeline over the entire dataset h4 Test h3 Wrapper function for feature extraction feature selection h3 Apply at Scale h3 Step 5 Modelling h3 Baseline Random guess h2 Evaluation h4 Confusion matrix with Accuracy Precision Recall weighted F1 score h3 Model Candidates h4 Multivariate time series classification h3 sktime h3 Results Comparison h4 Save models h2 Conclusion h2 References ", "stargazers_count": 0, "forks_count": 0, "description": "Power Spectral Density PSD Especially for the characterisation random vibration signals. 2 Appendix High level diagram of the steps image. For our purpose we would look at a more lightweight feature generation package. pattern recognition approach. Data Preprocessing and Feature Extraction 4. 8 whereas the subject with the lowest imbalanced has only 0. We treat the con42 data as corrupted and ignore it for now. White noise high frequency background noise that is much higher than our normal brain frequency of 0. Cleaning of extra features Replace inf or inf with 0s Drop 0s columns Standardisation of added features Feature importance and selection Feature selection with univariate statistical tests Comment The 63 features above are selected based on univariate statistical tests. It can be seen as a preprocessing step to an estimator. If an EEG signal is recorded at a sampling frequency of 100 Hz the FFT can separate the signal into features in the range of 0 100 Hz. It is great at analyzing vibration when there are a finite number of dominant frequency components. Fast Fourier Transform FFT 4. 3 with a std of 6. Use the first 12 features of the feature set found by SelectKBest feature selector since the feature set was sorted by importance. Calculate correlation coefficients matrix across all EEG channels. psd snippet Fs len snippet plt. classifiers ensemble_forest fit_columns_ensemble_model X_train y_train res ensemble_forest classifiers ensemble_forest. Log Loss Binary Crossentropy where y_pred probabilities and y_true are binary class labels the measure of the ability of a classifier to distinguish between classes used as a summary of the ROC curve. Features ExtractionIntro Feature extraction is an important step in the process of electroencephalogram EEG signal classification. 05 nsamples T fs Butter bandpass filter Plot filtered results Min frequency Max frequency Sampling rate Min frequency Max frequency Sampling rate Check effects Check effects Check effects Number of sample points sample spacing y np. Plan for the experiments tsfresh A python package that automates the extraction of empirically tested to be relevant features. Each with different class ration and sample sizes. Given its exquisite temporal sensitivity the main utility of EEG is in the evaluation of dynamic cerebral functioning. 675\ud835\udf0e from mean then it is using 675\ud835\udf0e 1. html Apply feature extraction and selection pipeline over the entire dataset Test Wrapper function for feature extraction feature selection Apply at Scale Step 5. Normalization Standardization 4. org stable modules generated sklearn. Convolution 4. com kaggle docker python For example here s several helpful packages to load linear algebra data processing CSV file I O e. A less intensive alternative is needed for the feature extraction stage. k 3 indicates data that is far out. Class distirbution check and handling 3. Pipeline design 1. fs len signal Filter a noisy signal. The sample size depends on the duration of collecting data 250 records second for each subject and condition duration was not same. Reason As one of the traditional and verified techniques capable of extracting features from EEG signals. ModellingChecklist Data formatting for models Baseline Evaluation Model Candidates Results Comparison Summary Baseline Random guess Evaluation Confusion matrix with Accuracy Precision Recall F1 score Log Loss Binary Crossentropy Area Under the Curve AUC Confusion matrix with Accuracy Precision Recall weighted F1 score Model Candidates Multivariate time series classification sktime Offers three main ways of solving multivariate time series classification problems 1. html univariate feature selection Comment Based on PCA variance explained using 12 features could explain 95 of variance. Summary of Project 7. neural network approach with autoencoder. Moving Average 4. Further details about using PCA for finding feature number to explain variance. Nonparametric Tukey Fences are robust methods in detecting outliers. join dirname OpenBCI RAW con42_ec. Sample signal construction x np. Refernce https scikit learn. Install the required packages and libraries Restart kernel after installing for updated import namespace Check file naming convention There can be typo or inappropriate files being shared across. The data was collected from COMSATS university Islamabad. Some signals contain trends and offsets. To think about this decision we can think about the end cases and some options. Concatenation of time series columns into a single long time series column via ColumnConcatenator and apply a classifier to the concatenated data 2. psd snippet Fs len snippet Generate a mask for the upper triangle Set up the matplotlib figure Generate a custom diverging colormap Draw the heatmap with the mask and correct aspect ratio center 0 Calculate correlation coefficients matrix across all EEG channels. Project Background 4. Summary of the above 3. Facebook s Kats package for time series feature extraction Test Build Feature selection Using 1 subset as a trial run to test feature selection mechanism. The files have varied number of of sample sizes which means the duraction of recording varied. dump model open filename wb. Power Spectral Density PSD 4. Class value encoding 3. Construct TimeSeriesData object feature ranking For it to includes all the features must be less than no. Fast Fourier Transform FFT for main frequencies profile Test Plot PSD for amplitudes of different frequenciesRef https matplotlib. subject_id encoding The actual name of subjects even just the first name are personal identifiable information which should always be masked dropped or encoded before sharing across or processing. Environmental noise The effects of the surround stimulants to our brain wave such as sounds of someone walking by the movement of shadows or reflection on window or screen when someone is moving nearby the sound of air conditioner. 5k upper bound for standardisation. It describes how the power of your signal is distributed over frequency. html https scikit learn. Inspect the files failed to be loaded Comment There is no ec complement for OpenBCI RAW con42_eo. 5 IQR Upper Quartile 1. Project Background DescriptionThis is the eight channel EEG raw data collected from human brain under controlled environment having no internal or external noise. 5 Hz to 120 Hz referring to delta wave to gamma wave with gamma wave conventionally having 40 Hz as the experimental signal upper bound. The EEG is an electrophysiological technique for the recording of electrical activity arising from the human brain. read_csv Input data files are available in the read only. First set of data was taken when the subject had eyes open and second set was taken when eyes of the subject were closed. if n_component parameter is not set it does n_components min n_samples n_features. Tukey fences for univariate outliers 3. Signal Entropy To evaluate the randomness of the signal from each channel Reason Applying the concept of entropy to time series like electroencephalography EEG is a way to quantify in a statistical sense the amount of uncertainty or randomness in the pattern which is also roughly equivalent to the amount of information contained in the signal. Comment Most of the data samples are matched with subject_id as keys each with ec and eo as samples. Confusion matrix tn fp fn tp Precision Recall F1 score that summarise precision and recall with 1 1 importance ratio. Bespoke estimator specific methods for handling multivariate time series data e. Class distirbution check and handling Comment From the 39 subjects each with both eo and ec classes the average class differences is 4. Some files contain mostly negative values across the channels. Therefore we can lay out the spectrum of the signals that combine to form the resultant signals. 2 files were not loaded further inpsection of them is needed. Context Background 4. It could be helpful as a thorough and more exhausive search. Average sample size Total 161 745 ec 79 789 eo 81 956 On Average it is 49. For the con19_mubasira and con19_mubashira the names are similar with complementary ec and eo. Class imbalanced condition is not significant for class imputation to be beneficial. Check class distribution over subject_id Comment There are outliers in sequence lenghts over subject_id for both classes. Signal Characterization 4. Fast Fourier Transform FFT To set cut off frequency or passband filter to remove noisy signal by frequencies. Missing data handling 3. items filename f model_name _ version. org matplotlib pyplot psd in python After normalisation After convolution After bandpass filter After BP NORM MA Correlations between channel Comment As more filters have been applied the correlation between channel 3 0 channel 3 2 and channel 5 4 decreased. There are 3 main sources of noise and artifects for EEG data 1. Implementation Plan Normalization and Standardisation Convolution Global Average Pooling Global Max Pooling Moving Average Passband Filter Using subject id 0 and class 0 as sample to inspect effects Time series standardisation and normalization Test Apply Global Average Pooling GAP for Convolution Eyes Opened condition vs Eye Closed condition For Eyes Opened and Eyes Closed conditions across all channels Comment Some signals contain a lot of spikes and constant segments. 2 Context backgroundEEG The first known neurophysiologic recordings of animals were performed by Richard Caton in 1875. png Step 1 Inspect sample Using top 4 rows and describe to undertstand the expected scale of each column Comment We sampled 10 files to inspect their first 4 rows and the high level statistics of their columns. Conventions in EEG data modelling Normalization should be done at individual level before aggregation of data from different subjects. finding shapelets in multidimensional spaces still work in progress. Conclusion Imputation is not needed but could be an option for further optimisation. How about using Tukey s fences Lower Quartile 1. Reason To gain a better physical understanding of how much the frequencies contribute to the resultant signals in terms of power. html Suggested alternatives Autoencoder 4. samples due to covariance matrix calculation n_components need to be set explicitly. Statistically the upper bound by Tukey s rule uses Q3 1. Here we conduct experiments on features extraction by statistical appraoch with tsfresh. Evaluation Pipeline Setting 5. Filter a noisy signal. The hardware collecting the data was CYTON 8th channel device. com alan turing institute sktime This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python Docker image https github. Taking a certain quantile while keeping 90 of data. Signal Entropy 4. png attachment 3fa2f2ac 0677 42c6 8660 39bc7b31acd7. Baseline Setting 5. The highest class imbalanced subject has class difference of 32. Extract statistical features with tsfresh Test Batching and processing segmentations separately Comment Due to the explosion of features and the lack of flexibiity of adjusting the number of features with the limited computing resources specifically RAM here are some of the options to approach this 1. Tukey fences for univariate outliers John Tukey suggested an intuitive statistically proven test for outliers with the following guidelines k 1. Where the beta let us tune the weights on precision recall ratio for score. 6 Splitting the dataset Hold out test dataset Comment A test set is hold out for downstream results without accidentally being used in training. Basically any change in the surroundings that trigger any micro reactions. 5 IQR for outlier removal of sequence lenghts We don t need the lower bound but we can use the upper bound. References and Appendix 8. html https matplotlib. Taking the shortest sequence as input size we are potentially missing a lot of valuable training data for model improvements. txt delimiter t header None. Its data format is different to others t delimited instead of and 19 columns instead of 8. Comment Some extremely long tailed sequences are trimmed to the Tukey s 1. ones int nsamples Min frequency Max frequency Sampling rate Sample rate and desired cutoff frequencies in Hz. Inspect sample 2. Ref 1 Electroencephalography EEG An Introductory Text and Atlas of Normal and Abnormal Findings in Adults Children and Infants Internet. io en latest api tsfresh. An effective feature selection method. input directory For example running this by clicking run or pressing Shift Enter will list all files under the input directory Feature Extraction Modelling Evaluation You can write up to 20GB to the current directory kaggle working that gets preserved as output when you create a version using Save Run All You can also write temporary files to kaggle temp but they won t be saved outside of the current session Constants Check eye closed for con42 display pd. gov books NBK390346 Implementation Plan Step 4. For every subject two set of data was made. 5 IQR If Q3 is 0. Objectives targets following the iterative CRISP DM data exploration framework Without previous experience in handling EEG data the targets and estimated time cost are listed below T1 Input data formatting 15m T2 1st stage EDA visualisation 30m Background review for context and options 2h T3 Initial preprocessing 30m T4 2nd stage EDA visualisation 30m T5 Design Evaluation Metrics 45m T6 Baseline Model and Pipeline 30m T7 Models Investigation 1h30m 2h T8 Models Building and Comparison 1h45m Total time estimated 8h15m 9h45m 4. Each subject has data for both ec and eo and there is no missing data. Data quality check and cleaning 3. Reaults Discussion 6. Signal Characterization Implementation Plan 1. Features Extraction 4. Documentation for the calculated features https tsfresh. The eye opened data has larger sample size than eye closed with more significant difference in max values. From the samples the column 8 is an empty column it is expected because we only have 8 channels in placed columns 0 7. Column wise ensembling via ColumnEnsembleClassifier in which one classifier is fitted for each time series column and their predictions aggregated 3. predict X_test import pickle model_folder version 0_1_0 for model_name model in classifiers. The original correlation might be induced by background noise. head 2 Console No such file Remove non letters from label_class Check if any filename that failed Display data head Confirmed that there is no data available in column 8 dropping it Inspected the aggregated dataset Create subject_id integers mapping Replace the subject_id with their assigned integer Now subject ids of the dataset are numerical ids To be used in padding Drop the subjects with missing data Convert class counts to percentage for comparison Check effects Check effects Sample rate and desired cutoff frequencies in Hz. Autoencoder 5. Biological noise Frequency flutuations that are originated by heartbeats blinkings body temperature and mood etc. Reference https scikit learn. High level statistics 3. 1 Results Comparisons 6. Further Improvement and Investigations 8. Some samples have first row with 0s across the channels. Splitting the dataset hold out test dataset 4. Building Model Candidates 5. If there is a memory problem in loading all data at once we can opt for batch processing strategy. Goal Detect whether a person is in deep sleep or not. Data is composed of 90 students and 10 teachers. Moving Average for spikes smoothing Passband Filter to get frequency between 1 Hz and 120 Hz Shape of the filter Demo Apply to our sample data Apply to channel 1 because it has more fluctuations Summary of data cleaning Step 4. However the speed is concerning for this feature generation method since a lot of redundant features have to be generated first. The higher the beta the higher importance placed on the precision of the predictions. Each Column is a channel value so there are 8 channels Use them as variables The End of file name tell us if eye is close or open Use this as class For example EO means eye open and EC means eye closed Note According to the data provider The sampling rate is 250 records per second. ones N 3 Number of sample points sample spacing plt. Results Aggregation 6. Data Cleaning Description As part of the preprocessing the aim of data cleaning is to maximise the signal to noise S N ratio. Feature processing Define feaute search space Feature selection Feature selections Accuracy Balanced accuracy When true the result is adjusted for chance so that random performance would score 0 while keeping perfect performance at a score of 1. Load datasets 3. sktime Results Comparison Save models Conclusion References sktime https github. Step 2 Load datasets Loading with the insights from the previosu step. For modelling we need to define input sequence length. Channels correlations 4. 1 Literature Review Due to time constrait it is not in great depth. predict X_test classifiers mr_seql fit_mr_seql_model X_train y_train res mr_seql classifiers mr_seql. Each subject should have two datasets con id _ name _ eo ec. 5 indicates an outlier. org stable auto_examples decomposition plot_pca_iris. If Taking the longest sequence as input size we ensure the full utilization of available data but the padding of all other shorter sequences mean sparse data. Get statistical features 4. The advent of recording the electrical activity of human beings took another half century to occur. Data Cleaning Not in the following order applying the following with different combinations. Passband Filter With domain heuristics 4. org stable gallery lines_bars_and_markers psd_demo. Correlations between channels Finding the correlations between channels to observe the existance of collinearities. With this assumption in mind let s put them together for analysis. Hans Berger a German psychiatrist pioneered the EEG in humans in 1924. org stable modules feature_selection. Plot the frequency response for a few different orders. Summary Now we have data from 39 subjects. ", "id": "haydncic/eeg-sleep-full-pipeline", "size": "16635", "language": "python", "html_url": "https://www.kaggle.com/code/haydncic/eeg-sleep-full-pipeline", "git_url": "https://www.kaggle.com/code/haydncic/eeg-sleep-full-pipeline", "script": "pred_random_guess extract_features scipy.fft sktime.classification.shapelet_based passband_filter recall_score get_key_features fit_columns_ensemble_model format_model_input TsFeatures tukey_fences visualize_corr train_val_split EfficientFCParameters fit_concat_forest_model matplotlib.pyplot precision_score TimeSeriesData sktime.classification.dictionary_based sklearn.pipeline tsfresh Pipeline fbeta_score extract_kats_features normalize_df fftfreq BOSSEnsemble kats.consts sklearn.feature_selection flatten_df accuracy_score Tuple chi2 TimeSeriesForestClassifier lfilter moving_average random butter_bandpass_filter MinMaxScaler get_statistical_features butter freqz pandas SelectKBest butter_bandpass norm_standard_window sktime.classification.compose plot_fft sktime.classification.interval_based get_feature_by_var_exp eval_results confusion_matrix ColumnEnsembleClassifier numpy seq_convolution MrSEQLClassifier fit_concat_shaplet_model randint ColumnConcatenator tsfresh.feature_extraction sktime.transformations.panel.compose fft filter_wrapper convert_col_df typing scipy.signal standardize_df fit_mr_seql_model sklearn.metrics MinimalFCParameters train_test_split seaborn f1_score tqdm roc_auc_score passband_filter_wrapper kats.tsfeatures.tsfeatures PCA tqdm.auto sklearn.model_selection get_feature_explains extract_select_features_wrapper balanced_accuracy_score sklearn.decomposition log_loss sklearn.preprocessing ", "entities": "(('we', 'feature generation more lightweight package'), 'look') (('signals', 'spikes'), 'average') (('we', 'end cases'), 'think') (('Comment Most', 'samples'), 'match') (('original correlation', 'background noise'), 'induce') (('padding', 'sparse data'), 'mean') (('feature set', 'importance'), 'use') (('Step 2 Load', 'previosu step'), 'dataset') (('python that', 'extraction'), 'plan') (('files', 'ec RAW OpenBCI con42_eo'), 'inspect') (('lot', 'redundant features'), 'concern') (('We', 'it'), 'treat') (('duraction', 'recording'), 'have') (('sample size', 'second subject duration'), 'depend') (('we', 'placed columns'), 'be') (('Check effects Check effects Number', 'sample points'), 'nsamples') (('names', 'complementary ec'), 'be') (('test', '4'), 'hold') (('classifiers ensemble_forest X_train y_train', 'ensemble_forest classifiers'), 'fit_columns_ensemble_model') (('read_csv Input data files', 'read'), 'be') (('Context 2 first known neurophysiologic recordings', '1875'), 'backgroundEEG') (('we', 'batch processing strategy'), 'be') (('t', 'instead of 19 instead 8'), 'be') (('html Apply', 'Scale Step'), 'apply') (('main utility', 'dynamic cerebral functioning'), 'be') (('fp fn tp Precision Recall F1 that', 'importance 1 1 ratio'), 'score') (('advent', 'half century'), 'take') (('more filters', 'channel 3 0 channel'), 'psd') (('personal identifiable which', 'subjects'), 'subject_id') (('random performance', '1'), 'selection') (('when eyes', 'subject'), 'take') (('fit_mr_seql_model X_train y_train', 'mr_seql'), 'predict') (('hardware', 'data'), 'be') (('how power', 'frequency'), 'describe') (('upper triangle', 'EEG channels'), 'Generate') (('highest class imbalanced subject', '32'), 'have') (('German psychiatrist', '1924'), 'pioneer') (('ones int', 'Hz'), 'nsamples') (('Features ExtractionIntro Feature extraction', 'electroencephalogram EEG signal classification'), 'be') (('further inpsection', 'them'), 'load') (('F1 score Model Candidates Multivariate time series classification sktime', 'multivariate time series classification problems'), 'Data') (('n_components', 'covariance matrix due calculation'), 'need') (('that', 'micro reactions'), 'change') (('that', '0'), 'noise') (('shapelets', 'still progress'), 'find') (('person', 'deep sleep'), 'Detect') (('It', 'estimator'), 'see') (('how much frequencies', 'power'), 'reason') (('data', 'COMSATS university Islamabad'), 'collect') (('when someone', 'air conditioner'), 'noise') (('It', 'thorough more search'), 'be') (('Log Loss Binary y_pred where probabilities', 'ROC curve'), 'Crossentropy') (('subject', 'ec'), 'have') (('Now ids', 'Hz'), 'head') (('We', 'level high columns'), 'sample') (('specifically here some', '1'), 'extract') (('we', 'model improvements'), 'take') (('it', 'no'), 'be') (('predictions', '3'), 'ensembling') (('it', 'min'), 'do') (('feature selection html univariate Based', 'variance'), 'comment') (('we', 'upper bound'), 'IQR') (('Conventions', 'different subjects'), 'do') (('noise Frequency Biological that', 'heartbeats blinkings body temperature'), 'flutuation') (('Here we', 'tsfresh'), 'conduct') (('inappropriate files', 'libraries Restart import namespace Check file updated naming convention'), 'install') (('Design Evaluation m T6 Baseline T7 Models m T8 Models 30 m T5 45 30 Investigation 1h30 2h Building 1h45 m Total time', '8h15 m 9h45'), 'list') (('us', 'score'), 'let') (('It', 'kaggle python Docker image https github'), 'sktime') (('Constants Check eye', 'con42 display pd'), 'list') (('we', 'input sequence length'), 'need') (('less intensive alternative', 'feature extraction stage'), 'need') (('63 features', 'above univariate statistical tests'), 'clean') (('extremely long tailed sequences', '1'), 'comment') (('sampling rate', '250 second'), 'be') (('neural network', 'autoencoder'), 'approach') (('it', 'great depth'), '1') (('eye', 'max values'), 'open') (('It', 'frequency when finite dominant components'), 'be') (('that', 'resultant signals'), 'lay') (('Statistically upper', 'Q3'), 'use') (('1 it', 'Step'), 'Apply') (('subject', 'only 0'), '8') (('John Tukey', 'following guidelines'), 'suggest') (('samples', 'channels'), 'have') (('Summary Now we', '39 subjects'), 'have') (('ec class average differences', 'eo'), 'check') (('EEG', 'human brain'), 'be') (('Fast Fourier Transform FFT', 'frequenciesRef https different matplotlib'), 'profile') (('s', 'together analysis'), 'let') (('files', 'channels'), 'contain') (('Project Background DescriptionThis', 'internal noise'), 'be') (('Data', '90 students'), 'compose') (('which', 'signal'), 'Entropy') (('test Comment test set', 'accidentally training'), '6') (('FFT', '0 100 Hz'), 'separate') (('subject', 'two datasets'), 'have') (('Conclusion Imputation', 'further optimisation'), 'need') (('Nonparametric Tukey Fences', 'robust outliers'), 'be') (('subject two set', 'data'), 'make') (('Fast Fourier Transform FFT', 'frequencies'), 'set') (('it', '956 Average'), 'size') "}