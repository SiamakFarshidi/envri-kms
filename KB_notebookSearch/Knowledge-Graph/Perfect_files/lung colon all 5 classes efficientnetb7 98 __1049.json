{"name": "lung colon all 5 classes efficientnetb7 98 ", "full_name": " h1 Approach h3 I m gonna use Transfer Learing specifically the EfficientNetB7 architecture to train a single model Since I m lazy I m gonna copy and merge the folders Perhaps the worst approach It s gonna take a while to copy all images h3 Other approaches you can take h4 1 Create two seperate keras generator functions ImageDataGenerator and wrap them using a simple function like this h4 2 Build and Train two different models h4 3 Probably the best approach is to iterate through the folders in order to create a dataframe of the filepaths and then feed it to the ImageDataGenerator h1 Imports h1 Data Preparation h1 Showing Sample Images h1 Generating Data h1 Classification Report h1 Confusion Matrix h1 TODO ", "stargazers_count": 0, "forks_count": 0, "description": "Probably the best approach is to iterate through the folders in order to create a dataframe of the filepaths and then feed it to the ImageDataGenerator. summary Compute confusion matrix Plot non normalized confusion matrix. Approach I m gonna use Transfer Learing specifically the EfficientNetB7 architecture to train a single model. Since I m lazy I m gonna copy and merge the folders Perhaps the worst approach It s gonna take a while to copy all images Other approaches you can take 1. Create two seperate keras generator functions ImageDataGenerator and wrap them using a simple function like this https stackoverflow. Imports Data Preparation Showing Sample Images Generating Data Classification Report Confusion Matrix TODO Either set restore_best_weights True for the early stopping or use ModelCheckpoint in order to save the model in its best state Use an efficient method to read the data Copying the folders into a single folder 80 20 Split 224 x 224 The minimum for EfficientNetB7 you can go as high as 600 x 600 model. com questions 46313525 how do i combine two keras generator functions. Build and Train two different models. ", "id": "tenebris97/lung-colon-all-5-classes-efficientnetb7-98", "size": "1049", "language": "python", "html_url": "https://www.kaggle.com/code/tenebris97/lung-colon-all-5-classes-efficientnetb7-98", "git_url": "https://www.kaggle.com/code/tenebris97/lung-colon-all-5-classes-efficientnetb7-98", "script": "classification_report EfficientNetB7 keras tensorflow.keras.layers confusion_matrix accuracy_score tensorflow.keras.models numpy ImageDataGenerator Dense glob preprocess_input GlobalAveragePooling2D plot_confusion_matrix tensorflow.keras.applications.efficientnet tensorflow EfficientNetB7  as PretrainedModel matplotlib.pyplot tensorflow.keras.preprocessing.image tensorflow.keras.callbacks pandas EarlyStopping Model tensorflow.keras.preprocessing Input sklearn.metrics Flatten image ", "entities": "(('how i', 'keras generator two functions'), 'com') (('m', 'single model'), 'Approach') (('you', '1'), 'm') (('you', 'as high 600 600 model'), 'preparation') (('Probably best approach', 'ImageDataGenerator'), 'be') "}