{"name": "characters predictor using cnn approach ", "full_name": " h1 Here we will try to classify English Alphabets as shown above with the help of a powerful Convolutional Neural Network h1 Importing Required Libraries h1 Reading the Data h1 Splitting the Data into Images and Labels h1 Splitting the Data into Train and Test Sets h1 Reshaping the data into the format of Images h1 Encoding English Alphabets to Number from 0 25 h1 Getting to know about the Number of Alphabets present in the Data h1 Making the data suitable for the CNN h1 Converting the Values to Categorical Variables h1 Creating the CNN h1 Getting Summary of the Model Created h1 Compiling the Model h1 Starting the Training h1 Making Predictions h1 Creating Confusion Matrix h1 Plotting the Confusion Matrix ", "stargazers_count": 0, "forks_count": 0, "description": "This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python Docker image https github. com kaggle docker python For example here s several helpful packages to load linear algebra data processing CSV file I O e. Importing Required Libraries Reading the Data Splitting the Data into Images and Labels Splitting the Data into Train and Test Sets Reshaping the data into the format of Images Encoding English Alphabets to Number from 0 25 Getting to know about the Number of Alphabets present in the Data Making the data suitable for the CNN Converting the Values to Categorical Variables Creating the CNN Getting Summary of the Model Created Compiling the Model Starting the Training Making Predictions Creating Confusion Matrix Plotting the Confusion Matrix SO ACCORDING TO THE CONFUSION MATRIX OUR MODEL WORKED PRETTY WELL ON THE TEST DATASET THAT WE CREATED TO TEST IT. com static images models handwritten character 01. hidden layer hidden layer softmax layer Rounding off the predictions to 0s and 1s Labels for the CM Plotting the CM. flattened vector. jpg Here we will try to classify English Alphabets as shown above with the help of a powerful Convolutional Neural Network. csv file axis 1 for dropping column a vector of size 26 with all 0 values total count of each alphabet all alphabets RGB Channel of 1 RGB Channel of 1 input conv maxpool conv maxpool. read_csv Input data files are available in the read only. input directory For example running this by clicking run or pressing Shift Enter will list all files under the input directory You can write up to 20GB to the current directory kaggle working that gets preserved as output when you create a version using Save Run All You can also write temporary files to kaggle temp but they won t be saved outside of the current session displaying head of the. ", "id": "kartikeya47/characters-predictor-using-cnn-approach", "size": "878", "language": "python", "html_url": "https://www.kaggle.com/code/kartikeya47/characters-predictor-using-cnn-approach", "git_url": "https://www.kaggle.com/code/kartikeya47/characters-predictor-using-cnn-approach", "script": "keras.layers keras.models train_test_split to_categorical confusion_matrix sklearn.utils numpy SGD Adam Dropout Dense keras.callbacks MaxPool2D plot_confusion_matrix keras.optimizers ReduceLROnPlateau matplotlib.pyplot Sequential shuffle sklearn.model_selection pandas EarlyStopping Conv2D keras.utils sklearn.metrics Flatten ", "entities": "(('csv file', 'input conv maxpool conv 1 maxpool'), 'axis') (('jpg Here we', 'Convolutional Neural powerful Network'), 'try') (('t', 'the'), 'list') (('read_csv Input data files', 'read'), 'be') (('WE', 'TEST IT'), 'Importing') (('It', 'kaggle python Docker image https github'), 'come') (('com static images', 'handwritten character'), 'model') "}