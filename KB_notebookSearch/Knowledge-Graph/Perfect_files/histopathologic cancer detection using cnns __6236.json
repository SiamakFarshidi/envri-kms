{"name": "histopathologic cancer detection using cnns ", "full_name": " h1 Introduction h3 1 Understanding the Problem h3 Motivation h3 2 Understanding the Data h3 3 Understanding the Images h3 4 Understanding the Evaluation Metric h1 Loading Data and EDA h1 Visualizing Images h1 Sampling h1 Data Pre processing for our PyTorch h1 Defining Model Architecture h1 Training and Validation h1 Predictions on Test set h1 Visualizing Preditions h3 Authored By ", "stargazers_count": 0, "forks_count": 0, "description": "Understanding the Images You are predicting the labels for the images in the test folder. ROC is a probability curve and AUC represents degree or measure of separability. com kaggle competitions kaggle 11848 logos header. png t 2018 11 15 01 52 19 1. It tells how much model is capable of distinguishing between classes. 95 which shows the model is doing way better than just guessing it might be very much reliable if a few tweaks are to be made to take it even closer to 1. Data Augmentations are added for train data to improve performance. IntroductionThis notebook provides solution to Histopathologic Cancer Detection https www. png Loading Data and EDAHaving a look at the data just like any other image classification problem we have a csv file with image ids and labels. Histopathology is the study of the signs of the disease using the microscopic examination of a biopsy or surgical specimen that is processed and fixed onto glass slides. Understanding the Evaluation MetricThe evaluation metric is the Area Under ROC Curve which is also called AU ROC AOC Curve. Header Image https storage. Visualizing ImagesClassifying metastases is probably not an easy task for a trained pathologist and extremely difficult for an untrained eye when we take a look at the image. SamplingSince the train dataset contains 220. The diagnostic procedure for pathologists is tedious and time consuming as a large area of tissue has to be examined and small metastases can be easily missed. Authored By Abhinand http kaggle. We have otherwise maintained the same data and splits as the PCam benchmark. Our training data has a class distribution of 60 40 negative and positive samples which is not bad. I also found that these data were obtained as a result of routine clinical practices and similar to how a trained pathologist would examine similar images for identifying metastases. This is a perfect Computer Vision problem where we are tasked with the detection of cancer by identifying metastatic tissue in histopathologic scans of lymph nodes using Deep Learning. com c histopathologic cancer detection overview challenge on Kaggle. jpg AUC Curve https i. Data Pre processing for our PyTorchFirst we turn our data into PyTorch dataset then the data is sampled into train and validation sets. ROC AUC ROC Curve http gim. The directories train test contain the actual images. Defining Model ArchitectureI m using a Deep Convolutional Neural Network for this task building which is fairly straight forward in PyTorch if you understand how it works. This is one of many architectures I tried that gave better results. Here s what Kaggle says The original PCam dataset contains duplicate images due to its probabilistic sampling however the version presented on Kaggle does not contain duplicates. shuffle indices Create Samplers prepare data loaders combine dataset and sampler creating test data prepare the test loader Convolutional and Pooling Layers print x. The curve is plotted with True Positive Rates Vs the False Positive Rates along the x and y axes respectively. A positive label indicates that the center 32x32px region of a patch contains at least one pixel of tumor tissue. It could bring a great change altogether. This from the competition s description means that the centers of the images are the ones that really matter. This outer region is provided to enable fully convolutional models that do not use zero padding to ensure consistent behavior when applied to a whole slide image. org Data which contains 400 H E stained whole slide images of sentinel lymph node sections that were acquired and digitized at 2 different centers using a 40x objective. 025 images we can sample out a shuffled part of that in this case 160000 samples and train on them to make predictions later. By analogy higher the AUC close to 1 better the model is at distinguishing between patients with disease and no disease. Understanding the Data The train data we have here contains 220 025 images and the test set contains 57 468 images. com abhinand05 linear algebra data processing CSV file I O e. Histological assessment of lymph node metastases is part of determining the stage of breast cancer in TNM classification which is a globally recognized standard for classifying the extent of spread of cancer. com basveeling pcam which in the end is derived from the Camelyon16 Challenge dataset https camelyon16. As you might already know this is a binary classification problem. read_csv Matplotlib for visualization OpenCV Image Library Import PyTorch Import useful sklearn functions display 20 images Number of samples in each class Data paths Use 80000 positive and negative examples Concatenate the two dfs and shuffle them up Our own custom class for datasets We the get the following mean and std for the channels of all the images Set Batch Size Percentage of training set to use as validation obtain training indices that will be used for validation np. Higher the AUC better the model is at predicting 0s as 0s and 1s as 1s. To visualize different components of the tissue under a microscope the sections are dyed with one or more stains. AUC ROC curve is a performance measurement for classification problem at various thresholds settings. Obviously I don t know biology to understand this problem right away here is what I found online about histopathology. shape Life saving debugging step D check if CUDA is available create a complete CNN Move model to GPU if available Trainable Parameters specify loss function categorical cross entropy loss specify optimizer number of epochs to train the model keeping track of losses as it happen keep track of training and validation loss train the model move tensors to GPU if CUDA is available clear the gradients of all optimized variables forward pass compute predicted outputs by passing inputs to the model calculate the batch loss backward pass compute gradient of the loss with respect to model parameters perform a single optimization step parameter update Update Train loss and accuracies validate the model move tensors to GPU if CUDA is available forward pass compute predicted outputs by passing inputs to the model calculate the batch loss update average validation loss calculate average losses print training validation statistics Early Stopping Load Best parameters learned from training into our model to make predictions later Turn off gradients Create Submission file unnormalize convert from Tensor image and display obtain one batch of training images convert images to numpy for display plot the images in the batch along with the corresponding labels display 20 images. It is important to take into account that this data is only a subset of the original PCam dataset https github. The PCam s dataset including this one uses 10x undersampling to increase the field of view which gives the resultant pixel resolution of 2. However some relevant information about the surroundings might be left out with these small sized image samples I guess. It is one of the most important evaluation metrics for checking any classification model s performance. Training and Validation Predictions on Test set Visualizing Preditions How cool is that Now this model can be used to predict Cancer maybe even in real world the AUC score I was able to achieve with this model on test set is 0. Understanding the Problem Our goal is to create an algorithm to identify metastatic cancer in small image patches taken from larger digital pathology scans. Tumor tissue in the outer region of the patch does not influence the label. That makes using Machine Learning a great choice both in terms of accuracy and ease of usability. Motivation Lymph nodes are small glands that filter the fluid in the lymphatic system and they are the first place a breast cancer is likely to spread. ", "id": "abhinand05/histopathologic-cancer-detection-using-cnns", "size": "6236", "language": "python", "html_url": "https://www.kaggle.com/code/abhinand05/histopathologic-cancer-detection-using-cnns", "git_url": "https://www.kaggle.com/code/abhinand05/histopathologic-cancer-detection-using-cnns", "script": "torch.nn.functional torchvision.transforms DataLoader accuracy_score Image numpy TensorDataset torch.nn roc_auc_score CreateDataset(Dataset) matplotlib.pyplot forward PIL torch.utils.data.sampler CNN(nn.Module) pandas SubsetRandomSampler torch.optim torch.utils.data __len__ Dataset __init__ imshow sklearn.metrics __getitem__ ", "entities": "(('center 32x32px region', 'tumor tissue'), 'indicate') (('which', '2'), 'use') (('ROC', 'separability'), 'be') (('goal', 'pathology larger digital scans'), 'be') (('how trained pathologist', 'metastases'), 'find') (('curve', 'False Positive x axes'), 'plot') (('when we', 'image'), 'be') (('close to 1 better model', 'disease'), 'be') (('how it', 'fairly straight forward PyTorch'), 'ArchitectureI') (('that', '40x objective'), 'Data') (('better model', '1s'), 'high') (('that', 'images'), 'mean') (('It', 'classification performance'), 'be') (('com basveeling which', 'Challenge dataset https camelyon16'), 'pcam') (('then data', 'train sets'), 'process') (('025 we', 'predictions'), 'image') (('which', 'cancer'), 'be') (('You', 'test folder'), 'predict') (('Computer Vision perfect where we', 'Deep Learning'), 'be') (('that', 'slide when whole image'), 'provide') (('sections', 'one stains'), 'dye') (('data', 'https github'), 'be') (('I', 'image small sized samples'), 'leave') (('It', 'great change'), 'bring') (('which', '60 40 negative samples'), 'have') (('com kaggle competitions', 'logos 11848 header'), 'kaggle') (('how much model', 'classes'), 'tell') (('that', 'validation np'), 'display') (('very much few tweaks', 'even closer 1'), '95') (('220 here 025 images', 'test 57 468 images'), 'contain') (('train dataset', '220'), 'contain') (('however version', 'duplicates'), 's') (('Convolutional Layers', 'test loader'), 'indice') (('That', 'usability'), 'make') (('breast first cancer', 'lymphatic system'), 'be') (('which', 'ROC Curve'), 'be') (('that', 'better results'), 'be') (('I', 'online histopathology'), 'don') (('I', 'test set'), 'set') (('IntroductionThis notebook', 'Histopathologic Cancer Detection https www'), 'provide') (('Data Augmentations', 'performance'), 'add') (('AUC ROC curve', 'thresholds various settings'), 'be') (('surgical that', 'glass slides'), 'be') (('We', 'PCam benchmark'), 'maintain') (('small metastases', 'tissue'), 'be') (('predictions', '20 images'), 'create') (('we', 'image ids'), 'have') (('directories', 'train actual images'), 'contain') (('Tumor tissue', 'label'), 'influence') "}