{"name": "cnn using keras 100 accuracy ", "full_name": " h1 Description of the Sign Language MNIST Problem American Sign Language h1 Loading the ASL dataset h1 Data Visualization and Preprocessing h1 Data Augmentation h1 CONVOLUTIONAL NEURAL NETWORKS TO THE RESCUE h1 Training The Model h1 Analysis after Model Training ", "stargazers_count": 0, "forks_count": 0, "description": "png Loading the ASL dataset Data Visualization and Preprocessing The dataset seems balanced as for each training label enough training examples exist We perform a grayscale normalization to reduce the effect of illumination s differences. In the convolution operation we take a filter usually 2x2 or 3x3 matrix and slide it over the image matrix. This working can be seen in the following figure image. CONVOLUTIONAL NEURAL NETWORKS TO THE RESCUE A Convolutional Neural Network is a special type of an Artificial Intelligence implementation which uses a special mathematical matrix manipulation called the convolution operation to process data from the images. The training data 27 455 cases and test data 7172 cases are approximately half the size of the standard MNIST but otherwise similar with a header row of label pixel1 pixel2. ASL is expressed by movements of the hands and face. Some popular augmentations people use are grayscales horizontal flips vertical flips random crops color jitters translations rotations and much more. For the data augmentation i choosed to Randomly rotate some training images by 10 degreesRandomly Zoom by 10 some training imagesRandomly shift images horizontally by 10 of the widthRandomly shift images vertically by 10 of the heightI did not apply a vertical_flip nor horizontal_flip since it could have lead to misclassify. The coresponding numbers in both matrices are multiplied and and added to yield a single number describing that input space. png attachment image. Label Count Normalize the data Reshaping the data from 1 D to 3 D as required through input by CNN s With data augmentation to prevent overfitting set input mean to 0 over the dataset set each sample mean to 0 divide inputs by std of the dataset divide each input by its std apply ZCA whitening randomly rotate images in the range degrees 0 to 180 Randomly zoom image randomly shift images horizontally fraction of total width randomly shift images vertically fraction of total height randomly flip images randomly flip images. The original hand gesture image data represented multiple users repeating the gesture against different backgrounds. To create new data an image pipeline was used based on ImageMagick and included cropping to hands only gray scaling resizing and then creating at least 50 variations to enlarge the quantity. A convolution does this by multiplying two matrices and yielding a third smaller matrix. This process is repeated all over the image. pixel784 which represent a single 28x28 pixel image with grayscale values between 0 255. Approaches that alter the training data in ways that change the array representation while keeping the label the same are known as data augmentation techniques. It is the primary language of many North Americans who are deaf and hard of hearing and is used by many hearing people as well. Once our model is ready we fit the training dataset. The idea is to alter the training data with small transformations to reproduce the variations. com kaggle docker python For example here s several helpful packages to load in linear algebra data processing CSV file I O e. png Training The Model Analysis after Model Training Some of the Correctly Predicted Classes This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python docker image https github. Description of the Sign Language MNIST Problem American Sign Language American Sign Language ASL is a complete natural language that has the same linguistic properties as spoken languages with grammar that differs from English. Moreover the CNN converges faster on 0. By applying just a couple of these transformations to our training data we can easily double or triple the number of training examples and create a very robust model. The Network takes an input image and uses a filter or kernel to create a feature map describing the image. The dataset format is patterned to match closely with the classic MNIST. Each training and test case represents a label 0 25 as a one to one map for each alphabetic letter A Z and no cases for 9 J or 25 Z because of gesture motions. read_csv Input data files are available in the. The Sign Language MNIST data came from greatly extending the small number 1704 of the color images included as not cropped around the hand region of interest. Preview of first 10 images Data AugmentationIn order to avoid overfitting problem we need to expand artificially our dataset. We can make your existing dataset even larger. For example running this by clicking run or pressing Shift Enter will list all files under the input directory Any results you write to the current directory are saved as output. ", "id": "madz2000/cnn-using-keras-100-accuracy", "size": "3838", "language": "python", "html_url": "https://www.kaggle.com/code/madz2000/cnn-using-keras-100-accuracy", "git_url": "https://www.kaggle.com/code/madz2000/cnn-using-keras-100-accuracy", "script": "LabelBinarizer classification_report keras.layers keras.models train_test_split confusion_matrix keras.preprocessing.image numpy seaborn Dropout ImageDataGenerator BatchNormalization Dense keras.callbacks MaxPool2D ReduceLROnPlateau matplotlib.pyplot Sequential sklearn.model_selection pandas Conv2D sklearn.metrics Flatten sklearn.preprocessing ", "entities": "(('It', 'python docker image https kaggle github'), 'Training') (('convolution', 'third smaller matrix'), 'do') (('process', 'all image'), 'repeat') (('idea', 'variations'), 'be') (('we', 'very robust model'), 'double') (('which', 'images'), 'be') (('who', 'many people'), 'be') (('We', 'differences'), 'seem') (('we', 'training dataset'), 'be') (('dataset format', 'closely classic MNIST'), 'pattern') (('read_csv Input data files', 'the'), 'be') (('which', '0'), 'pixel784') (('image pipeline', 'quantity'), 'use') (('we', 'artificially dataset'), 'preview') (('coresponding numbers', 'input space'), 'be') (('grayscales horizontal vertical flips', 'crops color jitters translations rotations'), 'be') (('training case', 'gesture 25 motions'), 'represent') (('you', 'output'), 'list') (('we', 'image matrix'), 'take') (('working', 'figure following image'), 'see') (('it', 'misclassify'), 'choose') (('hand gesture image original data', 'different backgrounds'), 'represent') (('training data', 'label pixel1 pixel2'), 'be') (('Network', 'image'), 'take') (('that', 'English'), 'be') (('vertically fraction', 'randomly images'), 'Normalize') (('Sign Language MNIST data', 'interest'), 'come') (('that', 'data augmentation techniques'), 'approach') (('ASL', 'hands'), 'express') "}