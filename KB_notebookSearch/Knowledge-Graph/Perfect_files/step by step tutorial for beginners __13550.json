{"name": "step by step tutorial for beginners ", "full_name": " h1 Table of Contents h1 A Thank You Note h1 Article on medium publication h1 What would be the workflow h1 Problem Identification h1 What data do we have h1 Exploratory data analysis h1 Feature engineering h1 Creating a Model h1 Model Evaluation h1 Conclusion ", "stargazers_count": 0, "forks_count": 0, "description": "There are several classification you can select. com datadriveninvestor k fold cross validation 6b8518070833https www. com blog 2018 05 improve model performance cross validation in python r Now we have the training and test datasets available and we can start training the model. iloc i median_age This is somewhat arbitrary. Note that Parch 3 and Parch 1 shows higher survival probabilities. Additional analysis Let s create few additional charts to see how different variables are related. It is not an actual classifier but a wrapper for set of different ones that are trained and valuated in parallel in order to exploit the different peculiarities of each algorithm. We will use it as it is. Let s extract the first digit and compare it with survival probability. jpg So it is a classification problem and you are expected to predict Survived as 1 and Died as 0. Please refer to versions 25 or earlier to review the same. com content uploads 2016 04 blog twenty one business icebergs sink business 280416. This situation is called overfitting. com rf image_large Pub p9 AJC 2018 07 12 Images newsEngin. Problem Identification What data do we have Exploratory data analysis Data preparation including feature engineering Developing a model Model evaluation Conclusions That s all you need to solve a data science problem. I tried various ML algorithms but I found the voting method most useful based on the variables I had. Please leave comments feedback. Fill the age with median age of similar rows according to Sex Pclass Parch SibSP or use a quick machine learning algorithm to predict the age values based on Age Title Fare SibSPI used both of them to test which one works better. Split the dataset into k groups2. Sex Create dummy variables Age Missing value treatment followed by creating dummy variables SibSP Drop the variable Parch Drop the variable as most of the values are 0 Ticket Create dummy variables post feature engineering Fare Missing value treatment followed by log normalization Cabin Create dummy variables post feature engineering Embarked Create dummy variables PassengerID Pclass Name Title Fare Age There are 2 ways of handling the missing age values. Summarize the performance of the model using the sample of model evaluation scoresYou can access following link and read about Cross Validation in detail. I will be trying the classic LESS IS MORE approach. Name Can be used to create new variable Title by extracting the salutation from name. Let s plot feature importance by various algorithms Voting Classifier Voting is one of the simplest method of combining the predictions from multiple machine learning models. Cabin Embarked Creating a Model Cross Validation Strategy CV. Cabin Alphanumeric variable. While Title Age feature represents the Age category of passengers the features like Fare PClass Cabin etc. One of the code will be markdown to avoid confusion. It shows that a good number of babies young kids survived. 2nd approach to treat the Age feature Sex Creating Family Size variable using SibSp Parch SibSp Parch Ticket Tickets are of 2 types here. Kee one group as a hold out or test data set b. Support Vector Classifier 4. drop labels source Sex_male Fsize LargeF SibSp_8 Parch_9 T_WEP Cabin_T Emb_Q axis 1 inplace True You may want to drop some variables to avoid dummy variable trap X_train train. Approximately 62 of Pclass 1 passenger survived followed by 47 of Pclass2. Fare Let s check the distribution first. Multi layer Perceptron classifier 5. What data do we have Data. This might be a representation of class compartment. AdaBoost Classifier Model Evaluation model. See the mix of variable types. Such a model would have learned everything about the training data and would give result in a near perfect test score as it has already seen the data. We need to transform this variable using log function and make it more normally distributed. Type 1 has only number and Type 2 is a combination of some code followed by the number. The same model would fail terribly when tested on unseen data. It would help me improve. Name Not relevant from analysis modeling perspective. an estimator regressor or classifier 2. Write down things like what are you expected to do what data you might need or let s say what all algorithms you plan to use. Embarked represents port of embarkation. Feature engineering FE. We have to pass these as arguments. To avoid it it is common practice when performing a supervised machine learning experiment to hold out part of the available data as a test set X_test y_test. Based on findings we can conclude that Age Gender features representing social economic status were primary factors affecting the survival of passenger. Different hyper parameters can result in different model with varying performance accuracy. Here we are combining the predictions from models that we built and predict based on votes. Logistic Regression 7. Understand the problem first and draft a rough strategy on a piece of paper to start with. Once we have the datasets in Python environment we can slice dice the data to understand what we have and what is missing. Linear Discriminant Analysis 3. png Best Practice The most important part of any project is correct problem identification. As we all know that Learning the model parameters and testing it on the same data is a big mistake. Save the evaluation score 3. a method for searching or sampling candidates 4. Problem Identification Prob 20Ident. Though there are many ways to do the same analysis I have used the codes which I found more efficient and helpful. a cross validation scheme and5. A search consists of 1. The Fare variable is right skewed. png attachment model. This will help you to stay on track. As we do variable analysis try to replicate wherever applicable the code for test data and see if there is any major difference in data distribution. For each unique group a. iloc i SibSp combdata Parch combdata. png Title Sex_Female Fare PClass seems to be common features preferred for classification. Build the model on the training set and evaluate it on the test set d. Let s look at the distribution. Parch Parch indicates number of parents children aboard the Titanic. map lambda s 1 if s 2 else 0 combdata MedF combdata Fsize. Conclusion Conclusion. Based on value counts and average survival we can put all other ticket categories into a new category 4. Special thanks to Yassine. For example if my salary information is missing you can t simply replace the missing value with median salary of my whole organization. We will do this during feature engineering process. We can create more features using this Cabin variable. Decision Trees 8. How ET differes from RF 1 When choosing variables at a split samples are drawn from the entire training set instead of a bootstrap sample of the training set. Before you jump to How to do this part like typical Data Scientists understand What Why part. iloc i Parch combdata Pclass combdata. In my previous versions I have used ALL In approach using all variables with feature engineering for prediction. jpg Let s import necessary libraries bring in the datasets in Python environment first. iloc i Sex combdata SibSp combdata. Gradient Boosting Gradient boosting is one of the most powerful techniques for building predictive models. inspect the correlation between Ticket and Survived Let s look at the number of people for each type of tickets check the correlation again Create dummy variables Cabin Replace the missing Cabin number by the type of cabin unknown U Let s plot the survival probability by Cabin Drop the variables we don t need Import the required libraries You may want to drop some variables to avoid dummy variable trap test. png What we need to do to process following variables PassengerID No action required PClass Have only 3 numerical values. We are trying following to develop a baseline 1. If you liked this notebook and found this notebook helpful Please upvote and leave a comment Good 20Bye. png Cross Validation is one of the most powerful tool in Data Scientist s tool box. Embarked C Cherbourg Q Queenstown S SouthamptonLet s explore the variable with Survival rate. This section of code is for missing value treatment for age. The guided approach explained here will help you to understand how you should design and approach Data Science problems. I will give you one example here. Variable source is a kind of tag which indicates data source in combined data PassengerID Drop PassengerID Pclass Name Extract Salutation from Name variable Name Create 5 major categories analyze the survival rate inspect the correlation between Title and Survived Create dummy variable Fare Check the number of missing value Only 1 value is missing so we will fill the same with median Use the numpy fuction log1p which applies log 1 x to all elements of the column combdata Fare np. We will drop this feature later after creating a new variable as Title. 22048809_071418 titanic_Titanic Image 7 2. get_dummies combdata columns Sex Create a variable representing family size from SibSp and Parch Analyze the correlation between Family and Survived Create new feature of family size combdata Single combdata Fsize. Instead of directly replacing the missing values with the median value of complete data the script looks for nearby data which is similar in terms of Sex Pclass Parch and SibSp and then takes the median values of those observations. drop labels Survived Sex_male Fsize LargeF SibSp_8 Parch_9 T_WEP Cabin_T Emb_Q axis 1 Cross validate model with Kfold stratified cross val Modeling differents algorithms. To find out what paparmeters are resulting in best score we can use Grid Search method and use the optimum set of hyper parameters to build and select a good model. 2 Splits are chosen completely at random from the range of values in the sample at each split. Now the Titanic challenge hosted by Kaggle is a competition in which the goal is to predict the survival or the death of a given passenger based on a set of variables describing age sex or passenger s class on the boat. So here is the workflow. Sex Create dummy variables combdata pd. SibSP 1 and SibSP 2 shows higher chances of survival. Extra Trees Classifier 6. We will build couple of base models and then will use Grid Search method to optimize the parameters. As the analysis output below suggests Emabrked C shows high probabilities of survival. AdaBoost classifier Adaboost begins by fitting a classifier on the original dataset and then fits additional copies of the classifier on the same dataset but where the weights of incorrectly classified instances are adjusted such that subsequent classifiers focus more on difficult cases. jpg The insight below connects back to Ladies and Kids First scene of the movie. distplot combdata Fare fit norm bin Fare into five intervals with equal amount of people inspect the correlation between Fare bin and Survived Index of NaN age rows missing_index list combdata Age combdata Age. The idea behind SVM is to find a maximum marginal hyperplane MMH that best divides the dataset into classes. Table of Contents A Thank You Note. map lambda s 1 if 3 5 else 0 Analyze the Survival Probability by Fsize SibSp Drop the variable Parch Drop the variable Ticket Extracting the ticket prefix. Gradient Boosting Classifier 10. median if not np. map lambda s 1 if s 1 else 0 combdata SmallF combdata Fsize. The idea is just to show you the path try your own ways and share the same with others. Ticket This variable has alphanumeric value which might not be related to Survival directly but we can use this variable to create some additional features. Random Forest Classifier Similar to Extra Tree Classifier a Random Forest is a meta estimator that fits a number of decision tree classifiers on various sub samples of the dataset and uses averaging to improve the predictive accuracy and control over fitting. Use the groupby univariate bivariate analysis method to compare the distribution across Train Test data PassengerId Not relevant from modeling perspective so we will drop this variable later Pclass Pclass is categorical variable. The general approach is as follows 1. Article on medium publicationI also wrote an article on medium on the same topic. SVM generates optimal hyperplane in an iterative manner which is used to minimize the error. png Import the basic python libraries Read the datasets We have 891 observations 12 columns. com rp1611 model ensembles for survival prediction a3ecc9f7c2ae and access the blog. In boosting each new tree is a fit on a modified version of the original data set. represents the economic status. Sex Based on analysis below female had better chances of survival. Frankly speaking no one cares. png attachment analysis. Random Forest 9. index for i in missing_index median_age combdata Age. iloc i filled_age else combdata Age. If you compare the output you will see that missing value percentages do not vary much across train test datasets. 687 missing values in train 327 missing values in test data which needs to be treated. Support Vector Machines SVM builds a hyperplane in multidimensional space to separate different classes. The sub sample size is always the same as the original input sample size but the samples are drawn with replacement if bootstrap True default. jpg Based on data above female passengers had better chances of survival than male passengers Age Age. ExtraTrees Classifier ET is a meta estimator that fits a number of randomized decision trees on various sub samples of the dataset and then uses averaging method to improve the predictive accuracy and control over fitting. median filled_age combdata Age combdata Sex combdata. Exploratory data analysis analysis. Hyper parameters are key parameters that are not directly learnt within the estimators. You will look for people with similar experience type of work department etc and then will use the median salary of such a group. Wherever whenever required I have given due credit to my fellow Kagglers which they deserve for their hard work. It helps you to understand the performance of your model and fight with overfitting. Use the remaining groups as training data set c. Check missing values in train data set Check missing values in train data set Fill empty and NaNs values with NaN Analyze the count of survivors by Pclass Analyze the Survival Probability by Pclass Count the number of passengers by gender Analyze survival count by gender Analyze the Survival Probability by Gender Let s explore the distribution of age by response variable Survived We can also say that the older the passenger the lesser the chance of survival Analyze the count of survivors by SibSP Analyze probability of survival by SibSP Analyze the count of survivors by Parch Analyze the Survival Probability by Parch for some statistics Get the fitted parameters used by the function Now plot the distribution Let s check the unique values Analyze the count of survivors by Embarked variable Analyze the Survival Probability by Embarked Age Pclass Survival Age Embarked Sex Pclass Relation among Pclass Gender Survival Rate Relation among SibSP Gender Survival Rate Relation among Parch Gender Survival Rate Let s combining train test for quick feature engineering. SibSP This variable refers to number of siblings spouse onboard. You can click this clink https medium. png attachment Prob 20Ident. Most of these tickets belong to category 1 2 3 S P C. png attachment Conclusion. png One important aspect of machine learning is to ensure that the variables show almost the same trend across train test data. png Evaluating multiple models using GridSearch optimization method. What would be the workflow I will keep it simple crisp rather than using buzz words useless data science frameworks. We have 417 observations 11 columns no response Survived column. Adaboost Best score RFC Parameters tunning Best score Gradient boosting Best score Best score Feature importance Concatenate all classifier results Use voting classifier to combine the prediction power of all models Predict and export the results. K Nearest Neighbour 2. log1p combdata Fare Check the new distribution sns. isnan filled_age combdata Age. png attachment Good 20Bye. Boosting is a method of converting weak learners into strong learners by building an additive model in a forward stage wise fashion. Example Let s start with finding the number of missing values. If not it would lead to overfitting because model is representing a relationship which is not applicable in the test dataset. ", "id": "rp1611/step-by-step-tutorial-for-beginners", "size": "13550", "language": "python", "html_url": "https://www.kaggle.com/code/rp1611/step-by-step-tutorial-for-beginners", "git_url": "https://www.kaggle.com/code/rp1611/step-by-step-tutorial-for-beginners", "script": "Counter sklearn.discriminant_analysis sklearn.ensemble stats sklearn.svm skew #for some statistics RandomForestRegressor numpy seaborn cross_val_score MLPClassifier ExtraTreesClassifier SVC norm sklearn.neighbors sklearn.tree sklearn.neural_network GradientBoostingClassifier scipy sklearn.linear_model learning_curve StratifiedKFold matplotlib.pyplot DecisionTreeClassifier LinearDiscriminantAnalysis sklearn.model_selection pandas RandomForestClassifier LogisticRegression scipy.stats KNeighborsClassifier VotingClassifier AdaBoostClassifier GridSearchCV GradientBoostingRegressor collections ", "entities": "(('classification you', '0'), 'jpg') (('what', 'what'), 'slice') (('jpg', 'passengers Age male Age'), 'have') (('1 When choosing', 'training set'), 'differe') (('which', 'test 327 missing data'), 'value') (('Article', 'same topic'), 'write') (('you', 'algorithms'), 'write') (('Learning', 'same data'), 'know') (('Parch', 'survival 3 1 higher probabilities'), 'note') (('how you', 'Data Science problems'), 'explain') (('map lambda', 'Parch Ticket ticket variable prefix'), 's') (('same model', 'terribly when unseen data'), 'fail') (('that', 'classes'), 'be') (('meta that', 'fitting'), 'be') (('s', 'feature quick engineering'), 'check') (('it', 'X_test y_test'), 'be') (('We', 'feature engineering process'), 'do') (('value missing percentages', 'train test much datasets'), 'compare') (('I', 'which'), 'be') (('Pclass later Pclass', 'variable'), 'use') (('I', 'buzz data science simple rather words useless frameworks'), 'be') (('we', 'votes'), 'combine') (('key that', 'directly estimators'), 'be') (('score Feature classifier Best importance results', 'results'), 'Parameters') (('I', 'prediction'), 'use') (('s', 'Python environment'), 'let') (('This', 'class compartment'), 'be') (('variables', 'train test data'), 'be') (('one', 'them'), 'fill') (('s', 'missing values'), 'let') (('scoresYou', 'detail'), 'access') (('directly we', 'additional features'), 'have') (('which', 'observations'), 'look') (('Cross validate 1 model', 'val Modeling differents algorithms'), 'label') (('it', 'log function'), 'need') (('goal', 'boat'), 'be') (('You', 'X_train train'), 'Fsize') (('One', 'confusion'), 'be') (('Support Vector Machines SVM', 'different classes'), 'build') (('We', 'Survived column'), 'have') (('just path', 'others'), 'be') (('log1p combdata Fare', 'distribution new sns'), 'check') (('Boosting', 'forward stage wise fashion'), 'be') (('Title Age feature', 'Fare PClass Cabin etc'), 'represent') (('We', 'Title'), 'drop') (('which', 'column combdata Fare np'), 'be') (('png Best most important part', 'project'), 'practice') (('s', 'survival probability'), 'let') (('Sex', 'survival'), 'have') (('meta that', 'fitting'), 'Similar') (('you', 'data science problem'), 'identification') (('Data typical Scientists', 'What'), 'jump') (('we', 'good model'), 'use') (('average we', 'new category'), 'put') (('We', 'baseline'), 'try') (('variable analysis', 'data major distribution'), 'try') (('young kids', 'babies'), 'show') (('We', '891 observations'), 'Import') (('Name', 'name'), 'use') (('You', 'group'), 'look') (('hyper Different parameters', 'performance varying accuracy'), 'result') (('We', 'Cabin variable'), 'create') (('I', 'MORE approach'), 'try') (('that', 'algorithm'), 'be') (('notebook', 'helpful comment'), 'like') (('Approximately 62', 'Pclass2'), 'survive') (('required You', 'trap dummy variable test'), 'inspect') (('you', 'whole organization'), 'replace') (('such subsequent classifiers', 'more difficult cases'), 'begin') (('distplot combdata Fare', 'missing_index list combdata Age combdata Age'), 'fit') (('png Title Sex_Female Fare PClass', 'common classification'), 'seem') (('which', 'error'), 'generate') (('Embarked C Cherbourg Q Queenstown SouthamptonLet s', 'Survival rate'), 'S') (('samples', 'True default'), 'be') (('SibSp Parch SibSp Parch Ticket Tickets', '2 types'), 'feature') (('you', 'overfitting'), 'help') (('most', 'Cabin variables post feature variables Pclass Name Title Fare age Create dummy Embarked Create dummy 2 missing values'), 'create') (('1 only number', 'number'), 'have') (('we', 'model'), 'improve') (('get_dummies combdata Sex', 'family size combdata Single combdata Create new Fsize'), 'column') (('Most', 'S P 1 2 3 C.'), 'belong') (('Age Gender', 'passenger'), 'conclude') (('Voting Classifier Voting', 'machine learning multiple models'), 'let') (('it', 'already data'), 'learn') (('com datadriveninvestor k', 'cross validation 6b8518070833https www'), 'fold') (('We', 'parameters'), 'build') (('SibSP variable', 'siblings'), 'refer') (('section', 'age'), 'be') (('Gradient Boosting Gradient boosting', 'predictive models'), 'be') (('This', 'i'), 'iloc') (('Parch Parch', 'Titanic'), 'indicate') (('SibSP', 'survival'), 'show') (('I', 'most variables'), 'try') (('training data', 'remaining groups'), 'use') (('2 Splits', 'split'), 'choose') (('PClass', 'only 3 numerical values'), 'png') (('which', 'test dataset'), 'lead') (('they', 'hard work'), 'give') (('how different variables', 'few additional charts'), 'let') (('png Cross Validation', 'Data tool box'), 'be') (('Emabrked below C', 'survival'), 'suggest') "}