{"name": "histopathological cancer ieee ", "full_name": " h3 What files are available h3 Labels as per csv file h3 How many images are in each folder h3 Create a Dataframe containing all images h3 Check the class distribution h3 Display a random sample of train images by class h3 Create the Train and Val Sets h4 Balance the target distribution h3 Create a Directory Structure h3 Transfer the images into the folders h3 Set Up the Generators h3 Create the Model Architecture h3 Train the Model h3 Evaluate the model using the val set h3 Plot the Training Curves h3 Make a prediction on the val set h3 A note on Keras class index values h3 What is the AUC Score h3 Create a Confusion Matrix h3 Create a Classification Report h3 MAKE A TEST SET PREDICTION h3 Set up the generator h3 Make a prediction on the test images h3 Create a submission file h3 Reference Kernels ", "stargazers_count": 0, "forks_count": 0, "description": "Create a Directory Structure Transfer the images into the folders Set Up the Generators Create the Model Architecture I ve used the CNN architecture presented by fmarazzi in this kernel https www. com gpreda honey bee subspecies classification2. com gpreda honey bee subspecies classification adjust size here draw a number of images for each location figure_cols is also the sample size take a random sample of class 0 with size equal to num samples in class 1 filter out class 1 concat the dataframes shuffle train_test_split stratify y creates a balanced validation set. Gabriel Preda Honey Bee Subspecies Classification https www. Generate a classification report For this to work we need y_pred as binary labels not as probabilities Delete base_dir and it s sub folders to free up disk space. com fmarazzi baseline keras cnn roc fast 5min 0 8253 lb Train the Model Evaluate the model using the val set Plot the Training Curves Make a prediction on the val setWe need these predictions to calculate the AUC score print the Confusion Matrix and calculate the F1 score. make sure we are using the best epoch Are the number of predictions correct Should be 57458. Keras requires that the path should point to a folder containing images and not to the images themselves. Beluga Black and White CNNhttps www. Introduction In this kernel I will describe a workflow that allows 160 000 full size images to be used without crashing the kaggle kernel. html sphx glr auto examples model selection plot confusion matrix py Get the labels of the test images. It helps to turn on the GPU before creating any folders. tif extension therefore we add it here get the label for a certain image these must match the folder names source path to image destination path to image copy the image from the source to the destination check how many train images we have in each folder check how many val images we have in each folder End of Data Preparation Start of Model Building Note shuffle False causes the test dataset to not be shuffled Get the labels that are associated with each index get the metric names so we can use evaulate_generator Here the best epoch will be used. It infers the classes based on the folder structure. Put the predictions into a dataframe. test_dir test_images create test_dir create test_images inside test_dir check that the directory we created exists Transfer the test images into image_dir source path to image destination path to image copy the image from the source to the destination check that the images are now in the test_images Should now be 57458 images in the test_images folder Here we change the path to point to the test_images folder. tif This function will extract the id 00006537328c33e284c973d7b39d340809f7271b split into a list split into a list Get the predicted labels. display the loss and accuracy curves make a prediction This is how to check what index keras has internally assigned to each class. org stable auto_examples model_selection plot_confusion_matrix. What is the AUC Score Create a Confusion Matrix Create a Classification Report Recall Given a class will the classifier be able to detect it Precision Given a class prediction from a classifier how likely is it to be correct F1 Score The harmonic mean of the recall and precision. Francesco Marazzi Baseline Keras CNNhttps www. the number of images we use from each of the two classes removing this image because it caused a training error previously removing this image because it s black source https www. Important These index values may not match the index values we were given in the train_labels. The columns need to be oredered to match the output of the previous cell Get the true labels Get the predicted labels as probabilities Source Scikit Learn website http scikit learn. We were asked to predict a probability that the image has tumor tissue get the id column Delete the test_dir directory we created to prevent a Kaggle error. This is made possible by setting up a directory structure and then using generators to feed the data into the model for training validation and for prediction. If you use native Keras then you may get different results. That is why we are creating a folder test_images inside another folder test_dir. How many images are in each folder Create a Dataframe containing all images Check the class distribution Display a random sample of train images by class Create the Train and Val Sets Balance the target distributionWe will reduce the number of samples in class 0. MAKE A TEST SET PREDICTION Set up the generator Make a prediction on the test images Create a submission file Reference KernelsI found these kernels very helpful 1. Put the predictions into a dataframe This outputs the file names in the sequence in which the generator processed the test images. Essentially it punishes extreme values. tif extension therefore we add it here get the label for a certain image these must match the folder names source path to image destination path to image copy the image from the source to the destination Transfer the val images the id in the csv file does not have the. These need to match the order shown above. I ve used a and b folder name pre fixes to get keras to assign index values to match whatwas in the train_labels. Kaggle allows a max of 500 files to be saved. A note on Keras class index valuesKeras assigns it s own index value here 0 and 1 to the classes. com fmarazzi baseline keras cnn roc fast 5min 0 8253 lbThank you for reading. argmax returns the index of the max value in a row Print the label associated with each class Define the labels of the class indices. com gaborfodor black white cnn lb 0 773. From the confusion matrix and classification report we see that our model is equally good at detecting both classes. csv file I guessed that keras is assigning the index value based onfolder name alphabetical order. What files are available Labels as per csv file0 no tumor tissue1 has tumor tissue. We will train the model using 144 000 images and validate on 16 000 images. If you create the folder structure and then turn on the GPU or Internet all the folders you created will disappear. Create a new directory CREATE FOLDERS INSIDE THE BASE DIRECTORY now we create 2 folders inside base_dir train_dir a_no_tumor_tissue b_has_tumor_tissue val_dir a_no_tumor_tissue b_has_tumor_tissue create a path to base_dir to which we will join the names of the new folders train_dir val_dir CREATE FOLDERS INSIDE THE TRAIN AND VALIDATION FOLDERS Inside each folder we create seperate folders for each class create new folders inside train_dir create new folders inside val_dir check that the folders have been created Set the id as the index in df_data Get a list of train and val images Transfer the train images the id in the csv file does not have the. add the filenames to the dataframe Create an id column A file name now has this format test_images 00006537328c33e284c973d7b39d340809f7271b. CREATE A TEST FOLDER DIRECTORY STRUCTURE We will be feeding test images from a folder into predict_generator. I ve used tensorflow. ", "id": "shreyas13/histopathological-cancer-ieee", "size": "3088", "language": "python", "html_url": "https://www.kaggle.com/code/shreyas13/histopathological-cancer-ieee", "git_url": "https://www.kaggle.com/code/shreyas13/histopathological-cancer-ieee", "script": "numpy.random classification_report Activation train_test_split keras seed tensorflow.keras.layers confusion_matrix sklearn.utils tensorflow.keras.models numpy MaxPooling2D Adam Dropout ImageDataGenerator draw_category_images Dense roc_auc_score plot_confusion_matrix sklearn tensorflow ReduceLROnPlateau extract_id tensorflow.keras.preprocessing.image tensorflow.keras.callbacks ModelCheckpoint matplotlib.pyplot Sequential set_random_seed metrics shuffle sklearn.model_selection pandas EarlyStopping Conv2D roc_curve tensorflow.keras.optimizers sklearn.metrics Flatten ", "entities": "(('function', 'predicted labels'), 'extract') (('we', 'predictions'), 'make') (('how it', 'F1 correct harmonic recall'), 'be') (('it', 'sub disk space'), 'need') (('It', 'folders'), 'help') (('target', 'class'), 'be') (('path', 'images'), 'require') (('why we', 'folder test_dir'), 'be') (('i d', 'the'), 'extension') (('generator', 'test images'), 'output') (('These', 'order'), 'need') (('160 size 000 full images', 'kaggle kernel'), 'introduction') (('AUC score', 'F1 score'), 'cnn') (('then you', 'different results'), 'get') (('We', '16 000 images'), 'train') (('it', 'index own here classes'), 'note') (('com fmarazzi baseline keras', 'reading'), 'cnn') (('model', 'equally classes'), 'see') (('I', 'kernel https www'), 'create') (('you', 'then GPU'), 'disappear') (('max', '500 files'), 'allow') (('label', 'class indices'), 'return') (('This', 'prediction'), 'make') (('probabilities Source Scikit Learn website http scikit', 'predicted labels'), 'need') (('it', 'previously image'), 'number') (('we', 'train_labels'), 'match') (('kernels', 'submission file Reference KernelsI'), 'MAKE') (('file name', 'test_images'), 'add') (('It', 'folder structure'), 'infer') (('d test_dir we', 'Kaggle error'), 'ask') (('y', 'validation balanced set'), 'draw') (('html sphx glr auto examples model selection plot confusion matrix', 'test images'), 'get') (('keras', 'train_labels'), 'use') (('We', 'predict_generator'), 'CREATE') (('Here we', 'test_images folder'), 'create') (('index', 'the'), 'create') (('keras', 'onfolder based name alphabetical order'), 'file') (('tumor', 'tumor tissue'), 'be') (('Here best epoch', 'evaulate_generator'), 'extension') (('index keras', 'internally class'), 'display') "}