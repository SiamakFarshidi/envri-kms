{"name": "example wind analysis in python ", "full_name": " h1 Example Wind Resource Assessment Using Python h2 Packages h2 Get Wind Data h2 Site Data Exploratory Analysis h3 Data Structure h2 Anemoi h2 Shear analysis h2 Reference Data Exploratory Analysis h2 Long term analysis h3 MCP h2 Frequency distribution analysis ", "stargazers_count": 0, "forks_count": 0, "description": "One is to take the average of all the sensor combinations. We prefer to use Plotly s interactive charting https plot. AnemoiAnemoi is a wind specific analysis package in Python. Signal signal aggregation type valid options include AVG SD MIN MAX COUNT GUSTSensor name examples Anemometer installed at 59 m with a 350 degree orientation SPD_59_N_AVG All columns from an anemometer installed at 59 m with a 350 degree orientation SPD_59_N_AVG SPD_59_N_SD SPD_59_N_MIN SPD_59_N_MAX Wind vane installed at 57. We ll then concatnate our site and reference data to pass to anemoi s correlation methods. Documentation installation instructions and working examples on Binder can be found here https github. First we ll resample our mast data to daily. For this site we have two possible options to chose the representative annual shear. It assumes a datetime index with sensor data in the columns. 5_AVG Thermometer installed at 3 m with a 0 degree orientation T_3_N_AVG or T_3_AVGFor this demonstation mast we already have the combined average wind speeds and direction sensors as column labels so it is very straightforward to create an anemoi. Next what is the mean of monthly means momm wind speed at the top measurement height Shear analysisAnemoi is more developed in its shear analysis functionality because this module being the easiest to construct is being used to demostrate and launch the project. All of these are possible within Python but the last one isn t yet included in Anemoi. We re making good progress. PackagesFirst load the Python libraries used to perform a typical wind analysis. com srlightfoote AWEA_WRA_Working_Group blob master Example_Wind_Resource_Assessment_Using_R. Type type of sensor valid options include SPD DIR T P RH and VBAT2. We could then apply the shear for every 10 minute record that fell within a goodness of fit threshold and for every record outside our limits we could apply a lookup table of alpha values binned by direction season and time of day. Orthogonal distance regression is used by default but least squares and the robust linear model are also available. If you would like to help with development please let me know and we can work together. Get Wind DataNext we ll import some sample data from a single meterological mast installed at a site along with daily wind speed data from nearby reference stations. Anemoi automatically stores the metadata and takes advantage of panda s MultiIndex functionality to organize the sensor data This library is still under active development so please be patient. This is also a follow up to the AWEA Wind Resource Working Group s webinar on the open source ecosystem http www. As an aside this takes about seven seconds to loop through the 96 monthly correaltions which is about 40 of the overall time needed to run the entire notebook. It also assumes a specific sensor naming convention with the following form type_height_orientation_signal. tab file as our input to our wind flow model. The goal here is to illustrate how aspects of a typical wind resource assessment from meteorological data can be accomplished using open source tools. This can also be left blank or skipped with a double underscore. Correlations data synthesis and frequency distribution functionality are planned by the end of 2018. com coryjog anemoi blob master LICENSE and free for anyone to use. Along with average daily wind speeds from ten nearby reference stations. 9 ms 793 \u00b5s per loop mean std. 5 m with a 180 degree orientation DIR_57. There are a bunch of ways we could combine these predictions but for the sake of simplicity and for demonstration purposes we ll just take the simple mean of all the predictions. 6 difference in our wind speeds depending on the shear methodology we choose. COMB or SEL can be used to denote combined and selectively averaged signals. You can also see this by mousing over the normalized monthly rolling averages for 2014 and 2015. Now we have our long term hub height mean wind speeds. This is helpful information to know and can be passed along to the finaincal modeling team as a stress case or potential upside. Finally if we apply our alpha values to our long term mean wind speed at measurement height we calculate our long term hub height mean wind speed at the mast location. Frequency distribution analysisFinally we ve reached the last step in our typical assessment where we need to define the shape of our wind speed distribution. tab file and use it to initialize our wind flow model. We ll then apply our alpha value s to our long term mean wind speed to get our long term hub height mean wind speed at our mast locations. Namely a long term hub_height wind speed frequency distribution scaled to our hub height mean wind speed. All of them are below 1. The demostration mast only has a single orientation but if we had included the NW and SE facing anemometers the shear would have been calculated for each of these sensor combinations as well. The simplest methodology would be to assume our frequency distribution shape doens t change with height and scale our measurement height data to our long term hub height mean winds speed. Example Wind Resource Assessment Using PythonCory Jog 2018 06 06A Python adaptation of Stephen Lightfoote s original post in R https github. This kernel can also serve as a introduction for analysts in this case utilizing Python. Right now anemoi uses the IEC site calibration method of comparing the standard deviation of the wind speed ratios but this breaksdown when the slope is very far from unity. With this environment you get all the benefits of an open source scripting language such as auditability transparency scalability repeatability and disbributability with very little of the typical overhead needed to make sure an analysis can be transfered from one person or organization to another. Data StructureMeasured 10 minute data from multiple heights at a site met mast. The long term predictions represent the predicted long term mean wind speed at our mast at measurement height from each valid reference station Reference Station 1 8. A bit more complex would be to assume the shear between a sensor pair and apply that alpha value time series to our 59 m sensor data. Colors for plotting timeit 24. The other is to take the top sensor combination because it appears there is a risk of the shear relaxing with height and since we re extrapolating up to 120 m our final results will depend on our shear analysis. This is where a majority of the needed compute comes from and really this tiny relative to modern compute capabilities. com srlightfoote example wind analysis in r. We can see the percent adjustment each station predicts by normalizing by the measured mean wind speed. We ll do this by applying the monthly correlations to our data and then splicing with our measured data so that for any given day we take the measured data over the synthesized data. Here is an example of a daily correlation binned by month between our site and Reference Station 1. This can also help inform the uncertainty analysis which isn t covered in this notebook. Using representative data we ll walk through some of the typical steps taken to import visualize and analize meteorological data with the goal of estimating the long term wind regime at a given hub height. Maybe even better yet we could do both and explore the sensetivity between the two Reference Data Exploratory AnalysisNow we look at some of the data characteristics of our reference station data in order to ensure they are valid options for MCP. You ll probably notice the uncertainty calculation hasn t been fully tested. This is a highly subjective test but it would appear reference stations 9 and 10 display inconsistent behavior. Alternatively we could apply our correlations to the monthly mean reference data but this would de prioritize measure site data and isn t recommended. MetMast object and anemoi will return the alpha matrix between each anemometer grouped by orientation. 6 s 110 ms per loop mean std. ly python to analize the shear between sensor combinations. Now we can cycle through our reference stations to get the correlation results while leaving out Referene Stations 9 and 10 because of the suspected inconsistency discussed above. of 7 runs 1 loop each. All of our reference station predict and upwards adjustment which means our measured period was below the long term average. These are anonymous data for demostration purposes. mast_annual method you can pass an an. Now our first analysis quetsion is what does our wind and energy rose look like at this site A simple function to calculate the energy and wind roses has already been included in Anemoi. of 7 runs 10 loops each timeit 7. For our purposes we ll say 120 m. It is open sourced under the MIT License https github. You can also see more of his insperational work on his blog http www. This example uses a combination of vanilla data science libraries numpy pandas matplotlib scikit learn but also introduces a wind specific analysis library Anemoi https github. This is included in anemoi. There are many correlation methods available for simplicity we ll perform a daily correlation binned by month between our site and each reference station. Hopefully this demostrates how an analyst could use a notebook to go from quality controlled data to. The correlary is that typical wind resource assessment is no where near being considered big data. MetMast object from the pandas. org resource assessment. Orientation cardinal direction the sensor is installed valid options include N NE E SE S SW W NW. One even more complex option would be to fit a log law model to our data on a 10 minute basis using all our sensors. For this example we ll assume the top level anemomter combination. It requires you pass it wind speed and direction data and define which column corresponds to which sensor. tab files the typical intput to wind flow models in a single environment. All that to say there is very little value to this data outside of being a good example of a real data in a typical wind resource assessment workflow. These data have been cleaned and reconstructed so the recovery rate is very good for each sensor. Anemoi was inspired by Rob Story s Climatic library https github. Long term analysis MCPWe are now ready to correlate our site to our reference stations and estimate our long term mean wind speed at our measurement height. com wrobstory climatic which he developed while at Vestas. We ll then scale this to our long term hub height mean wind speed and produce a. There seems to be about a 1. Height sensor height in meters decimals are allowed 3. One top of that the location of the mast has been widtheld. For demonstration purposes we ll take the middle road and assume the shear profile between a single sensor combination on a 10 minute basis. We can now output this as a. 5_S_AVG or since orientation isn t that important for vanes DIR_57. Anemoi is built upon a specific DataFrame format. First are the annual profiles similar And then are there any concerning trends in the data that would indicate inconsistencies at the reference stations We can check this by normalizing the monthly mean wind speeds by the long term mean for each month. We can rejoice this makes things much more simple for us Now that we have the measure and correlate steps complete we need to apply our correaltions to our reference data to predict our site wind speeds. Anemoi is built upon these popular modules but with met mast data and wind resource assessment in mind. Again we can use the legend to turn on and off the normalized monthly rolling average traces. While these data have been collected from an actual installed met mast the sensor heights have been changed and the measured data have been scaled by an arbitrary factor. If you turn them off you can see the monthly anomalies become much tighter. As of June 2018 the primary focus has been on manipulating mast data and calculating annual shear. An analyst can turn on and off the sensor combinations using the legend. We again have multiple methods we could employ. Specifically we ll perform MCP to characterize the long term mean wind speed shear analysis to extrapolate to hub height and define the wind speed frequency distribution s shape. This has been done to disguise the absolute wind speeds and directions at the real site. Site Data Exploratory AnalysisNow to the meat of the Kernel which is to illustrate how to analyze and visualize typical steps within a wind resource assessment where the end goal is to characterise the long term wind regime at a given hub height. You can see the R equivalent here https www. Alright finally we have our desired output. ", "id": "coryjog/example-wind-analysis-in-python", "size": "12978", "language": "python", "html_url": "https://www.kaggle.com/code/coryjog/example-wind-analysis-in-python", "git_url": "https://www.kaggle.com/code/coryjog/example-wind-analysis-in-python", "script": "scipy seaborn sklearn plotly.plotly plotly.tools anemoi gamma scipy.optimize matplotlib matplotlib.pyplot rose_axis_settings plotly.graph_objs plotly.offline pandas scipy.special numpy ", "entities": "(('they', 'valid MCP'), 'do') (('we', 'again multiple methods'), 'have') (('we', 'predictions'), 'be') (('These', 'demostration anonymous purposes'), 'be') (('It', 'columns'), 'assume') (('long term', 'measurement height'), 'be') (('degree orientation Wind 350 SPD_59_N_MIN SPD_59_N_MAX vane', '57'), 'include') (('2018 primary focus', 'annual shear'), 'be') (('direction column', 'sensor'), 'require') (('Here example', 'site'), 'be') (('also more', 'www'), 'see') (('analysis', 'another'), 'get') (('Anemoi', 'DataFrame specific format'), 'build') (('One even more complex option', 'sensors'), 'be') (('here how aspects', 'source open tools'), 'be') (('We', 'correlation methods'), 'concatnate') (('MetMast object', 'orientation'), 'return') (('which', 'entire notebook'), 'take') (('This', 'also double underscore'), 'leave') (('minute Data StructureMeasured 10 data', 'site'), 'meet') (('measured period', 'term long average'), 'predict') (('matplotlib scikit', 'analysis also wind specific library'), 'use') (('Type type', 'SPD DIR T P RH'), 'include') (('isn t', 'notebook'), 'help') (('hub_height wind speed frequency Namely long term distribution', 'wind height speed'), 'mean') (('he', 'Vestas'), 'climatic') (('module', 'project'), 'be') (('Anemoi', 'mind'), 'build') (('height', 'mast locations'), 'apply') (('shear', 'sensor combinations'), 'have') (('All', 'isn last one yet Anemoi'), 'be') (('It', 'MIT License https github'), 'be') (('DataNext we', 'reference nearby stations'), 'get') (('You', '2014'), 'see') (('height', 'mast location'), 'calculate') (('monthly anomalies', 'them'), 'see') (('it', 'very anemoi'), 'instal') (('that', 'wind resource assessment typical workflow'), 'say') (('analyst', 'legend'), 'turn') (('recovery rate', 'very sensor'), 'clean') (('we', 'shear methodology'), 'difference') (('measured data', 'arbitrary factor'), 'meet') (('simple function', 'already Anemoi'), 'be') (('One', 'sensor combinations'), 'be') (('library', 'still active development'), 'store') (('we', 'level anemomter top combination'), 'assume') (('we', 'minute 10 basis'), 'take') (('First we', 'mast data'), 'resample') (('station', 'wind measured mean speed'), 'see') (('Height sensor height', 'meters decimals'), 'allow') (('PackagesFirst', 'wind typical analysis'), 'load') (('location', 'mast'), 'be') (('We', 'month'), 'be') (('We', 'charting https interactive plot'), 'prefer') (('This', 'real site'), 'do') (('Correlations data synthesis', '2018'), 'plan') (('we', 'hub given height'), 'use') (('This', 'source open ecosystem'), 'be') (('valid options', 'N NE E SE S SW W NW'), 'direction') (('It', 'following form'), 'assume') (('when slope', 'very far unity'), 'use') (('we', 'representative annual shear'), 'have') (('height', 'wind speeds'), 'have') (('we', 'synthesized data'), 'do') (('we', 'site'), 'be') (('term wind long speed', 'wind speed frequency shape'), 'perform') (('This', 'stress case'), 'be') (('term long predictions', 'Reference 1 8'), 'represent') (('You', 'R https equivalent here www'), 'see') (('tab', 'single environment'), 'file') (('AnemoiAnemoi', 'analysis wind specific Python'), 'be') (('Again we', 'normalized monthly rolling average traces'), 'use') (('final results', 'shear analysis'), 'be') (('finally we', 'desired output'), 'have') (('this', 'measure site data'), 'apply') (('where we', 'wind speed distribution'), 'reach') (('height', 'a.'), 'scale') (('least squares', 'default'), 'use') (('end where goal', 'hub given height'), 'AnalysisNow') (('correlate we', 'site wind speeds'), 'rejoice') (('Documentation installation instructions', 'https here github'), 'find') (('analysts', 'Python'), 'serve') (('where majority', 'compute really tiny modern capabilities'), 'be') (('we', 'development'), 'let') (('winds', 'speed'), 'be') (('COMB', 'combined selectively signals'), 'use') (('Anemoi', 'Rob library https Climatic github'), 'inspire') (('Now we', '9 suspected inconsistency'), 'cycle') (('we', 'day'), 'apply') (('how analyst', 'quality controlled data'), 'demostrate') "}