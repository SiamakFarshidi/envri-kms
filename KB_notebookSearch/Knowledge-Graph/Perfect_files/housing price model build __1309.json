{"name": "housing price model build ", "full_name": " h2 Feature Prep h1 Model Fit h2 Checkout Result h1 Model Interpretation h2 Score On Test ", "stargazers_count": 0, "forks_count": 0, "description": "Pink values mean the input is high and blue values mean the input is low in the range. This also included a search over the tweedie power and link function. Feature PrepBased upon EDA conducted in prior week selected the top 25 predictors on a univariate basis to use further Numeric features were median imputed quantile scaled to a normal distribution passed through polynomial transformations as well as piecewise transformations and then finally scalled between 0 1. Categorical features had missing values treated as a seperate attribute and then one hot encoded Model FitA hyperparameter search over the alpha parameter an l2 regularizer was conducted. This visual includes the full model pipeline including all transformations and the actual model prediction. Create features for numeric columns Features are normal distributed at this point so the z values For percentiles can be hard coded Numeric columns get imputed scaled then feature created scale 0 to 1 Categorical columns get one hot encoded Select columns into one of those groups l2 penalty Model Result Model that Predicts Median. Checkout ResultA check of the overall model predictions as well as predictions for some of the major variables was conducted. Model InterpretationThe SHAP package was used to get some high level inference about the predictive power and direction of the of the input variables. Everything seemed to be within a range of reasonable. Score On TestProduces a prediction on the test data which was then submitted to the competition. Surprisingly a slightly lower parameter than Gamma p 2 was selected. ", "id": "tylerrosacker/housing-price-model-build", "size": "1309", "language": "python", "html_url": "https://www.kaggle.com/code/tylerrosacker/housing-price-model-build", "git_url": "https://www.kaggle.com/code/tylerrosacker/housing-price-model-build", "script": "ColumnTransformer FeatureUnion sklearn.feature_selection plotnine.scales SimpleImputer plotnine.labels numpy pretty_up_table plotnine sklearn.compose log_rmse VarianceThreshold theme_classic labs sklearn.linear_model sklearn TweedieRegressor sklearn.model_selection pandas plotnine.themes set_config sklearn.pipeline sklearn.impute Pipeline scale_x_continuous score_model sklearn.metrics GridSearchCV make_scorer make_column_selector sklearn.preprocessing ", "entities": "(('input', 'range'), 'mean') (('as well predictions', 'major variables'), 'conduct') (('l2 regularizer', 'alpha parameter'), 'have') (('Feature PrepBased', 'piecewise as well then finally 0'), 'select') (('Model InterpretationThe SHAP package', 'input variables'), 'use') (('visual', 'transformations'), 'include') (('This', 'tweedie power function'), 'include') (('which', 'then competition'), 'score') (('Everything', 'reasonable'), 'seem') (('that', 'Median'), 'be') "}