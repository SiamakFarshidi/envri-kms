{"name": "chest x ray pneumonia cnn transfer learning ", "full_name": " h1 Chest X Ray Pneumonia Image Classification w Convolutional Neural Networks and Transfer Learning h1 Overview h1 Content h1 Dataset Information h2 If you find this notebook useful support with an upvote h1 Importing Packages and Dataset h1 Exploring the Data h1 Preparing the Data h1 Custom CNN h1 Transfer Learning h1 Fine Tuning h1 Performance Metrics h1 References h2 If you find this notebook useful support with an upvote ", "stargazers_count": 0, "forks_count": 0, "description": "Fine Tuning Our last approach is called Fine Tuning. What we do here is to set include_top to false removing the head responsible for assigning the classes in this other dataset and keep all the previous layers. org api_docs python tf keras preprocessing image ImageDataGenerator https keras. The images are split into a training set and a testing set of independent patients. Now we re going to load the images from the folders and prepare them to feed our models. In this dataset version 3 there is one folder representing the train set and another one for the test set. Now we are going to unfreeze a few of its last layers and continue the training tuning the weights from these layers according to our dataset. Custom CNNLet s define our first model from scratch and see how it performs. The diagnoses for the images were then graded by two expert physicians before being cleared for training the AI system. Now we are ready for the next stage creating and training the image classification models. Apart from the transformations defined in each generator the images are also resized based on the target_size set. io api applications resnet resnet152v2 function. With Keras Image Data Generator we can rescale the pixel values and apply random transformation techniques for data augmentation on the fly. Such capabilities are also confirmed by the high ROC AUC value. io api applications https keras. All chest X ray imaging was performed as part of patients routine clinical care. The train_datagen includes some transformations to augment the train set. Chest X Ray Pneumonia Image Classification w Convolutional Neural Networks and Transfer Learning OverviewThe goal of this notebook is to use Convolutional Neural Networks on Chest X Ray images to determine which samples are from patients with Pneumonia. We end this notebook by showing a few performance metrics. Reaching such recall with a relatively small dataset for training as this one while also reaching a pretty good recall is a good indicative of the model s capabilities. com tolgadincer labeled chest xray images Content Dataset Information Importing Packages and Dataset Exploring the Data Preparing the Data Custom Model Transfer Learning Fine Tuning Performance Metrics References Dataset Information This dataset contains 5 856 validated Chest X Ray images. In order to account for any grading errors the evaluation set was also checked by a third expert. Preparing the Data First we need to create a validation set. org guide keras transfer_learning https www. Images are labeled as disease NORMAL BACTERIA VIRUS randomized patient ID image number of a patient. For the analysis of chest x ray images all chest radiographs were initially screened for quality control by removing all low quality or unreadable scans. We begin by defining the data generators. The val_datagen is used to simply rescale the validation and test sets. Even without expertise on the medical field it s reasonable to assume that false negatives are more costly than false positives in this case. We apply those generators on each dataset using the flow_from_dataframe method. com tutorial on keras flow from dataframe 1fd4493d237c https github. We define two different generators. In this notebook the selected model was the ResNet152V2 available on the Keras Package link https keras. I use three different approaches for image classification 1 A simple CNN 2 Transfer Learning using a pretrained model with frozen layers as the base for feature extraction and 3 Fine Tuning unfreezing the last layers of the pretrained model. io api applications resnet resnet152v2 function If you find this notebook useful support with an upvote https vijayabhaskar96. In the last section all the layers from the pretrained model were frozen preserving the weights calculated during its training on the ImageNet dataset. Before we move on to the next section we will take a look at a few examples from each dataset. Chest X ray images anterior posterior were selected from retrospective cohorts of pediatric patients of one to five years old from Guangzhou Women and Children s Medical Center Guangzhou. Both are slightly imbalanced having more samples from the positive class Pneumonia with the training set being a little more imbalanced. This model was already trained in another dataset ImageNet. com mrdbourke tensorflow deep learning blob main 03_convolutional_neural_networks_in_tensorflow. com tutorial on keras flow from dataframe 1fd4493d237c Setting callbakcs Input shape width height color channels Block One Block Two Block Three Head Final Layer Output Input shape width height color channels Head Final Layer Output Freeze all layers except for the Check which layers are tuneable trainable. If you find this notebook useful support with an upvote Importing Packages and Dataset Exploring the Data Let s check the target distribution on each setThe distributions from these datasets are a little different from each other. To do that we apply a simple stratified split on the original train dataset using 80 for actual training and 20 for validation purposes. References https vijayabhaskar96. As expected the fine tuning approach has reached the best score. Note I m using the third version of the Chest X Ray dataset link https www. Performance Metrics The recall was close to 100. Transfer Learning The second approach called transfer learning consists of using a pretrained model as a feature extractor. Then we include our last few layers including the one responsible for generating the output. The train folder is later split in the notebook into train validation sets. ", "id": "jonaspalucibarbosa/chest-x-ray-pneumonia-cnn-transfer-learning", "size": "6091", "language": "python", "html_url": "https://www.kaggle.com/code/jonaspalucibarbosa/chest-x-ray-pneumonia-cnn-transfer-learning", "git_url": "https://www.kaggle.com/code/jonaspalucibarbosa/chest-x-ray-pneumonia-cnn-transfer-learning", "script": "numpy.random train_test_split keras seed callbacks accuracy_score tensorflow.keras.models numpy seaborn ImageDataGenerator set_seed layers tensorflow.random sklearn tensorflow get_pretrained matplotlib.pyplot tensorflow.keras.preprocessing.image get_model metrics sklearn.model_selection pandas Model tensorflow.keras matplotlib sklearn.metrics ", "entities": "(('train_datagen', 'train set'), 'include') (('Reaching', 'good capabilities'), 'be') (('chest radiographs', 'low quality'), 'screen') (('We', 'data generators'), 'begin') (('Performance recall', '100'), 'Metrics') (('com mrdbourke', 'deep learning blob main 03_convolutional_neural_networks_in_tensorflow'), 'tensorflow') (('chest X ray imaging', 'clinical care'), 'perform') (('dataset', 'Chest X Ray 5 856 validated images'), 'label') (('Such capabilities', 'ROC AUC also high value'), 'confirm') (('next stage', 'image classification models'), 'be') (('training set', 'class positive Pneumonia'), 'imbalanced') (('false negatives', 'case'), 's') (('val_datagen', 'simply validation sets'), 'use') (('com tutorial', 'dataframe https 1fd4493d237c github'), 'flow') (('do', 'previous layers'), 'be') (('images', 'testing independent patients'), 'split') (('First we', 'validation set'), 'need') (('evaluation set', 'also third expert'), 'in') (('diagnoses', 'AI system'), 'grade') (('samples', 'Pneumonia'), 'be') (('train folder', 'train validation sets'), 'split') (('we', 'fly'), 'rescale') (('I', 'Chest X Ray dataset link https www'), 'note') (('tuning fine approach', 'best score'), 'reach') (('Now we', 'models'), 'go') (('we', 'validation purposes'), 'apply') (('ResNet152V2', 'Keras Package link https available keras'), 'be') (('Now we', 'dataset'), 'go') (('layers', 'Check'), 'flow') (('Chest X ray images anterior posterior', 'Guangzhou one to five years old Women'), 'select') (('images', 'target_size also set'), 'resize') (('We', 'flow_from_dataframe method'), 'apply') (('Transfer 1 simple CNN 2 Learning', 'pretrained model'), 'use') (('you', 'upvote https'), 'io') (('We', 'performance a few metrics'), 'end') (('how it', 'scratch'), 'define') (('model', 'already dataset'), 'train') (('s', 'little other'), 'find') (('Then we', 'responsible output'), 'include') (('layers', 'ImageNet dataset'), 'freeze') (('we', 'dataset'), 'take') (('disease NORMAL BACTERIA VIRUS', 'patient'), 'label') "}