{"name": "bitfinexdataset ", "full_name": " h1 Quick look at the Bitfinex crypto currency dataset ", "stargazers_count": 0, "forks_count": 0, "description": "Take a look at the head of the BTC USD data Set up the sub plots Plot the data Define the parameters for the moving mean Load currency pairs and calculate the moving mean. We have to fill these gaps by filling them with the last value until a change occurs. Alright as we can see the timestamps have been converted to a human readable format and we have the open close high low and volume data present as well. So finally let s have a look at correlations between currency pairs. One common way is to calculate the log returns of each currency pair over time. For details about how this data was collected you can have a look at this articel https medium. Now let s load some data using our previously defined function. Next we will plot the log returns for the four datasets we loaded previously. Next let s have a look on what currency pairs are in the dataset and how many pairs there are in total. We want to look at several trading pairs later so let s define a function that loads data by pair names first. Now the question if these correlations are useful for trading or just an artifact that has no value at all is one of many questions ahead while building your trading algorithm. So to get started lets import some useful packages first. Below we define a function to calculate the log returns. And while we are at it lets also have a quick look at the head of the BTC USD dataset. com coinmonks how to get historical crypto currency data 954062d40d2d. However if we want to compare more crypto charts we need to think of something else. Now let s calculate the correlations and visualize the results in a heat map. So next we plot the closing price of the BTC USD and the ETH USD dataset. First for the entire dataset to see it in full and then we will zoom in more and more to check the 1 minute resolution. That is why we used two y axis in this example. We will load 10 pairs and plot their correlations in a heatmap. As we can see from the above plot it is hard to directly compare the BTC and ETH data. As can be seen from the above plot there seem to be some positive correlations. Have fun Data path Get names and number of available currency pairs Print the first 50 currency pair names Load data Convert timestamp to datetime Remove duplicate indices if present As mentioned in the description bins without any change are not recorded. First the raw log returns and in a second plot the moving mean to get a better understanding of how things developed over time. Quick look at the Bitfinex crypto currency datasetIn this kernel we will have a first look at the Bitfinex crypto currency dataset. ", "id": "tencars/bitfinexdataset", "size": "2129", "language": "python", "html_url": "https://www.kaggle.com/code/tencars/bitfinexdataset", "git_url": "https://www.kaggle.com/code/tencars/bitfinexdataset", "script": "log_return seaborn sklearn linear_model matplotlib.pyplot load_data pandas datasets numpy ", "entities": "(('com', 'crypto currency how historical data'), 'coinmonk') (('we', 'open close high low data'), 'alright') (('So finally s', 'currency pairs'), 'let') (('lets', 'BTC USD dataset'), 'have') (('currency pair Load data Convert Remove duplicate first 50 indices', 'change'), 'get') (('why we', 'example'), 'be') (('it', 'directly BTC data'), 'be') (('So started lets', 'useful packages'), 'import') (('you', 'articel https medium'), 'have') (('One common way', 'time'), 'be') (('Now s', 'previously defined function'), 'let') (('just that', 'trading ahead algorithm'), 'be') (('we', 'something'), 'however') (('So next we', 'ETH USD dataset'), 'plot') (('how things', 'time'), 'return') (('we', 'four datasets'), 'plot') (('currency pairs', 'how many total'), 'let') (('kernel we', 'Bitfinex crypto currency dataset'), 'look') (('Now s', 'heat map'), 'let') (('change', 'last value'), 'have') (('Below we', 'log returns'), 'define') (('that', 'pair names'), 'want') (('full then we', 'minute 1 resolution'), 'for') (('We', 'heatmap'), 'load') "}