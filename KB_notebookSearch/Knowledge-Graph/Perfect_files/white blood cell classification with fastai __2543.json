{"name": "white blood cell classification with fastai ", "full_name": " h1 White Blood Cell Classification with ResNet34 h1 The Dataset h2 Importance h1 Dataset loading h1 Training of model h1 Results h1 Future work h1 Acknowledgements ", "stargazers_count": 0, "forks_count": 0, "description": "Acknowledgements The techniques are inspired by fastai lesson 1. White Blood Cell Classification with ResNet34 The DatasetThis dataset contains 12 500 augmented images of various types of white blood cells JPEG with accompanying cell type labels CSV. If you have any input regarding how to improve model please leave a comment below Future work Note again that the dataset in the folder dataset2 master used here was already augmented along with the augmentations done by fastai. The previous training only trained the last layer of the model. The original dataset provides annotations for bounding box detection so we could try in future work to predict the bounding boxes. Dataset loading Training of modelWe will use transfer learning to train a ResNet34 model pretrained on the ImageNet dataset on our dataset instead. Interestingly the learning rate finder does not work it stops prematurely as loss wasn t decreasing when adjusting the learning rate and the training these earlier layers does not significantly improve the model. It would be interesting to see what the results would be just using the 366 files provided by the original dataset. We can try to unfreeze and train earlier layers of the model. In addition for some reason the model predicts neutrophil for monocyte but not the vice versa. Currently doctors utilize expensive automated counters like flow cytometers or manually count blood cells on a microscope slide. The cell types are Eosinophil Lymphocyte Monocyte and Neutrophil. com Shenggan BCCD_Dataset Thanks to Paul Mooney for the augmented dataset If you enjoyed this kernel please leave an upvote batch size image size. There are approximately 3 000 images for each of 4 different cell types grouped into 4 different folders according to cell type. Detecting the WBCs is the first step for achieving this goal. Therefore providing an automated way to detect and count WBCs would be advantageous. I have tried progressive resizing but that did not improve training. Original dataset from https github. ResultsWe will now analyze the results of the model. I will load the previously trained model and analyze how well it did. Overall the model is performing quite well There does seem to be some confusion between neutrophils and eosinophils. Importance White blood cell WBCs counting is an important indicator of health and is important for many diagnostic tests. We will use the amazing learning rate finder to determine the optimal learning rate for training. ", "id": "tanlikesmath/white-blood-cell-classification-with-fastai", "size": "2543", "language": "python", "html_url": "https://www.kaggle.com/code/tanlikesmath/white-blood-cell-classification-with-fastai", "git_url": "https://www.kaggle.com/code/tanlikesmath/white-blood-cell-classification-with-fastai", "script": "pandas fastai fastai.vision ", "entities": "(('we', 'bounding boxes'), 'provide') (('results', 'original dataset'), 'be') (('Currently doctors', 'microscope slide'), 'utilize') (('Overall model', 'quite well neutrophils'), 'perform') (('previous training', 'model'), 'train') (('techniques', 'fastai lesson'), 'inspire') (('ResultsWe', 'model'), 'analyze') (('you', 'upvote batch size image size'), 'com') (('We', 'training'), 'use') (('Dataset', 'dataset'), 'use') (('Importance White blood cell WBCs counting', 'many diagnostic tests'), 'be') (('earlier layers', 'significantly model'), 'work') (('that', 'training'), 'try') (('White Blood Cell DatasetThis dataset', 'cell type labels accompanying CSV'), 'Classification') (('We', 'model'), 'try') (('Therefore providing', 'WBCs'), 'be') (('Detecting', 'first goal'), 'be') (('vice', 'monocyte'), 'predict') (('how well it', 'previously trained model'), 'load') (('work again dataset', 'fastai'), 'leave') "}