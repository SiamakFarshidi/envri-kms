{"name": "ieee cancer detection ", "full_name": " h1 Import the necessary libraries and load the data h1 Load the data and explore a few images ", "stargazers_count": 0, "forks_count": 0, "description": "The architecture will be 3 Conv2D Dropout Maxpooling 4 times followed by a global maxpooling. linear algebra data processing CSV file I O e. read_csv deal with paths deal with paths deal with images read images from files make plots pretty plots P get unique cell types get the first row containing an image of cell_type cell list containing one image of each type create the subplots show the images and label them loads RGB image as PIL. Image type to 3D tensor with shape 150 150 3 convert 3D tensor to 4D tensor with shape 1 150 150 3 and return 4D tensor. At the end I run the outputs through a fully connected layer to get the probabilities. Now I ll run the CNN itself. Import the necessary libraries and load the data Load the data and explore a few imagesThis step was done using Kevin s notebook https www. com kmader histology mnist loading and processing data methods. Image type convert PIL. ", "id": "ibrahimshamma/ieee-cancer-detection", "size": "437", "language": "python", "html_url": "https://www.kaggle.com/code/ibrahimshamma/ieee-cancer-detection", "git_url": "https://www.kaggle.com/code/ibrahimshamma/ieee-cancer-detection", "script": "LabelBinarizer keras.layers keras.models train_test_split numpy MaxPooling2D seaborn paths_to_tensor Dropout randint Dense glob GlobalAveragePooling2D keras.callbacks tqdm ImageFile tensorflow random skimage.io matplotlib.pyplot ModelCheckpoint GlobalMaxPooling2D Sequential set_random_seed PIL path_to_tensor pandas sklearn.model_selection glob #deal with paths np_utils EarlyStopping Conv2D keras.preprocessing imread #read images from files get_first_cell_images keras.utils Flatten image sklearn.preprocessing ", "entities": "(('a few step', 'notebook https www'), 'import') (('Image type', '1 150 150 3 4D tensor'), 'convert') (('architecture', 'Dropout 4 times global maxpooling'), 'be') (('subplots', 'PIL'), 'deal') (('I', 'probabilities'), 'run') "}