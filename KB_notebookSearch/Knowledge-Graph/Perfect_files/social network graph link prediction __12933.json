{"name": "social network graph link prediction ", "full_name": " h3 Problem statement h3 Data Overview h3 Mapping the problem into supervised learning problem h3 Business objectives and constraints h3 Performance metric for supervised learning h1 1 Exploratory Data Analysis h2 1 1 No of followers for each person h2 1 2 No of people each person is following h2 1 3 both followers following h1 2 Posing a problem as classification problem h2 2 1 Generating some edges which are not present in graph for supervised learning h2 2 2 Training and Test data split h1 1 Reading Data h1 2 Similarity measures h2 2 1 Jaccard Distance h2 2 2 Cosine distance h2 3 Ranking Measures h2 3 1 Page Ranking h1 4 Other Graph Features h2 4 1 Shortest path h2 4 2 Checking for same community h2 4 3 Adamic Adar Index h2 4 4 Is persion was following back h2 4 5 Katz Centrality h2 4 6 Hits Score h1 5 Featurization h2 5 1 Reading a sample of Data from both train and test h2 5 2 Adding a set of features h2 5 3 Adding new set of features h2 5 4 Adding new set of features h4 Weight Features h2 5 5 Adding new set of features h1 1 Reading Data h1 2 Similarity measures h2 2 1 Jaccard Distance h2 2 2 Cosine distance h2 3 Ranking Measures h2 3 1 Page Ranking h1 4 Other Graph Features h2 4 1 Shortest path h2 4 2 Checking for same community h2 4 3 Adamic Adar Index h2 4 4 Is persion was following back h2 4 5 Katz Centrality h2 4 6 Hits Score h1 5 Featurization h2 5 1 Reading a sample of Data from both train and test h2 5 2 Adding a set of features h2 5 3 Adding new set of features h2 5 4 Adding new set of features h4 Weight Features h2 5 5 Adding new set of features h1 Preferential Attachments h1 Conclution ", "stargazers_count": 0, "forks_count": 0, "description": "3 Adamic Adar Index Adamic Adar measures is defined as inverted sum of degrees of common neighbours for given two vertices. The parameter beta controls the initial centrality and alpha frac 1 lambda_ max. 4 Is persion was following back 4. Other Graph Features 4. 3 both followers following 2. ipynb Do aritmetic operations on arrays matplotlib used to plot graphs Size of plots to install xgboost pip3 install xgboost for followees one test case node 1635354 not in graph for followers node 1635354 not in graph for followees for imputing to nodes which are not there in Train data if has direct edge then deleting that edge and calculating shortest path getting weekly connected edges from graph adar index you uncomment this line if you dont know the lentgh of the file name here we have hardcoded the number of lines as 15100030 n_train sum 1 for line in open filename number of records in file excludes header desired sample size https stackoverflow. svd_dothttps storage. Probability of prediction is useful to recommend ighest probability links Performance metric for supervised learning Both precision and recall is important so F1 score is good choice Confusion matrix Displaying a sub graph 1. com questions 9402255 drawing a huge graph with networkx and matplotlib No of Unique persons getting all set of edges reading total data df Trian test split Spiltted data into 80 20 positive links and negative links seperatly because we need positive training data only for creating graph and for feature generation removing header and saving Graph from Traing data only finding the unique nodes in the both train and test graphs final train and test data sets Importing Libraries please do go through this python notebook pandas to create small dataframes Convert to unix time Convert to unix time if numpy is not installed already pip3 install numpy Social network Graph Link Prediction Facebook Challenge Importing Libraries please do go through this python notebook pandas to create small dataframes Convert to unix time Convert to unix time if numpy is not installed already pip3 install numpy Do aritmetic operations on arrays matplotlib used to plot graphs Size of plots to install xgboost pip3 install xgboost 1. 2 Training and Test data split Removed edges from Graph and used as test data and after removing used that graph for creating features for Train and test data we have a cold start problem here Social network Graph Link Prediction Facebook Challenge 1. Exploratory Data Analysis 1. e directly connected then we are removing that edge and calculating path. Some reference papers and videos https www. A x y sum_ u in N x cap N y frac 1 log N u 4. com jaccard index begin equation j frac X cap Y X cup Y end equation 2. 2 Cosine distance begin equation CosineDistance frac X cap Y X cdot Y end equation 3. com a 22259008 4084039 you uncomment this line if you dont know the lentgh of the file name here we have hardcoded the number of lines as 3775008 n_test sum 1 for line in open filename number of records in file excludes header desired sample size https stackoverflow. Social network Graph Link Prediction Facebook Challenge Problem statement Given a directed social graph have to predict missing links to recommend users Link Prediction in graph Data OverviewTaken data from facebook s recruting challenge on kaggle https www. 1 Jaccard Distance http www. 1 Generating some edges which are not present in graph for supervised learning Generated Bad links from graph which are not in graph and whose shortest path is greater than 2. Edge weight decreases as the neighbor count goes up. 5 Katz Centrality https en. edu dial publications lichtenwalter2010new. org katz centrality centrality measure Katz centrality computes the centrality for a node based on the centrality of its neighbors. Ranking Measureshttps networkx. 2 No of people each person is following 1. The 15 likelihood of jumping to an arbitrary page corresponds to a damping factor of 85. The Katz centrality for node i is x_i alpha sum_ j A_ ij x_j beta where A is the adjacency matrix of the graph G with eigenvalues lambda. 1 Shortest path Getting Shortest path between twoo nodes if nodes have direct path i. Preferential Attachment http be. and trained ml model based on these features to predict link. com a 22259008 4084039 mapping jaccrd followers to train and test data mapping jaccrd followees to train and test data mapping jaccrd followers to train and test data mapping jaccrd followees to train and test data calculating no of followers followees for source and destination calculating intersection of followers and followees for source and destination mapping adar index on train mapping adar index on test mapping followback or not on train mapping followback or not on test mapping same component of wcc or not on train mapping shortest path on train mapping shortest path on test weight for source and destination of each link for imputing with mean mapping to pandas train mapping to pandas test some features engineerings on the in and out weights some features engineerings on the in and out weights page rank for source and destination in Train and Test if anything not there in train graph then adding mean page rank Katz centrality score for source and destination in Train and test if anything not there in train graph then adding mean katz score Hits algorithm score for source and destination in Train and test if anything not there in train graph then adding 0 Hits algorithm score for source and destination in Train and Test if anything not there in train graph then adding 0 for svd features to get feature vector creating a dict node val and inedx in svd vector prepared and stored the data from machine learning models pelase check the FB_Models. Mathematical PageRanks for a simple network expressed as percentages. com c FacebookRecruiting data contains two columns source and destination eac edge in graph Data columns total 2 columns source_node int64 destination_node int64 Mapping the problem into supervised learning problem Generated training samples of good and bad links from given directed graph and for each link got some features like no of followers is he followed back page rank katz score adar index some svd fetures of adj matrix some weight features etc. pdf https kaggle2. 3 Adding new set of features__we will create these each of these features for both train and test data points__adar indexis following backbelongs to same weakly connect componentsshortest path between source and destination 5. 2 Checking for same community 4. 6 Hits ScoreThe HITS algorithm computes two numbers for a node. 4 Adding new set of features__we will create these each of these features for both train and test data points__Weight Features weight of incoming edges weight of outgoing edges weight of incoming edges weight of outgoing edges weight of incoming edges weight of outgoing edges 2 weight of incoming edges weight of outgoing edges weight of incoming edges 2 weight of outgoing edges Page Ranking of sourcePage Ranking of destkatz of sourcekatz of desthubs of sourcehubs of destauthorities_s of sourceauthorities_s of dest Weight FeaturesIn order to determine the similarity of nodes an edge weight value was calculated between nodes. com link prediction 2. com a 22259008 4084039 mapping jaccrd followers to train and test data mapping jaccrd followees to train and test data mapping jaccrd followers to train and test data mapping jaccrd followees to train and test data calculating no of followers followees for source and destination calculating intersection of followers and followees for source and destination mapping adar index on train mapping adar index on test mapping followback or not on train mapping followback or not on test mapping same component of wcc or not on train mapping shortest path on train mapping shortest path on test weight for source and destination of each link for imputing with mean mapping to pandas train mapping to pandas test some features engineerings on the in and out weights some features engineerings on the in and out weights page rank for source and destination in Train and Test if anything not there in train graph then adding mean page rank Katz centrality score for source and destination in Train and test if anything not there in train graph then adding mean katz score Hits algorithm score for source and destination in Train and test if anything not there in train graph then adding 0 Hits algorithm score for source and destination in Train and Test if anything not there in train graph then adding 0 for svd features to get feature vector creating a dict node val and inedx in svd vector Importing Libraries please do go through this python notebook pandas to create small dataframes Convert to unix time Convert to unix time if numpy is not installed already pip3 install numpy Do aritmetic operations on arrays matplotlib used to plot graphs Size of plots to install xgboost pip3 install xgboost representing A in heatmap format representing B in heatmap format. 5 Adding new set of features__we will create these each of these features for both train and test data points__SVD features for both source and destination Social network Graph Link Prediction Facebook Challenge 1. Google uses a logarithmic scale. pdf https www3. Posing a problem as classification problem 2. ipynb for followees one test case node 1635354 not in graph for followers node 1635354 not in graph for followees for imputing to nodes which are not there in Train data if has direct edge then deleting that edge and calculating shortest path getting weekly connected edges from graph adar index you uncomment this line if you dont know the lentgh of the file name here we have hardcoded the number of lines as 15100030 n_train sum 1 for line in open filename number of records in file excludes header desired sample size https stackoverflow. edu home kleinber link pred. Page C has a higher PageRank than Page E even though there are fewer links to C the one link to C comes from an important page and hence is of high value. If web surfers who start on a random page have an 85 likelihood of choosing a random link from the page they are currently visiting and a 15 likelihood of jumping to a page chosen at random from the entire web they will reach Page E 8. Similarity measures 2. io documentation networkx 1. htmlPageRank computes a ranking of the nodes in the graph G based on the structure of the incoming links. ipynb Social network Graph Link Prediction Facebook Challenge Importing Libraries please do go through this python notebook pandas to create small dataframes Convert to unix time Convert to unix time if numpy is not installed already pip3 install numpy Do aritmetic operations on arrays matplotlib used to plot graphs Size of plots to install xgboost pip3 install xgboost 1. 10 reference generated networkx. 5 Adding new set of features__we will create these each of these features for both train and test data points__SVD features for both source and destination 1. In the presence of damping Page A effectively links to all pages in the web even though it has no outgoing links of its own. org wiki HITS_algorithm 5. Other Graph Features if has direct edge then deleting that edge and calculating shortest path getting weekly connected edges from graph adar index 5. pdfComputing num_follwers_d Preferential Attachments For followersadding SV_DOT featureTraining Conclution Importing Libraries please do go through this python notebook pandas to create small dataframes Convert to unix time Convert to unix time if numpy is not installed already pip3 install numpy Do aritmetic operations on arrays matplotlib used to plot graphs Size of plots to install xgboost pip3 install xgboost reading graph https stackoverflow. com a 22259008 4084039 mapping jaccrd followers to train and test data mapping jaccrd followees to train and test data mapping jaccrd followers to train and test data mapping jaccrd followees to train and test data calculating no of followers followees for source and destination calculating intersection of followers and followees for source and destination mapping adar index on train mapping adar index on test mapping followback or not on train mapping followback or not on test mapping same component of wcc or not on train mapping shortest path on train mapping shortest path on test weight for source and destination of each link for imputing with mean mapping to pandas train mapping to pandas test some features engineerings on the in and out weights some features engineerings on the in and out weights page rank for source and destination in Train and Test if anything not there in train graph then adding mean page rank Katz centrality score for source and destination in Train and test if anything not there in train graph then adding mean katz score Hits algorithm score for source and destination in Train and test if anything not there in train graph then adding 0 Hits algorithm score for source and destination in Train and Test if anything not there in train graph then adding 0 for svd features to get feature vector creating a dict node val and inedx in svd vector Importing Libraries please do go through this python notebook pandas to create small dataframes Convert to unix time Convert to unix time if numpy is not installed already pip3 install numpy Do aritmetic operations on arrays matplotlib used to plot graphs Size of plots to install xgboost pip3 install xgboost 1. com watch v 2M77Hgy17cg Business objectives and constraints No low latency requirement. com kaggle forum message attachments 2594 supervised_link_prediction. Intuitively consider one million people following a celebrity on a social network then chances are most of them never met each other or the celebrity. 1 Reading a sample of Data from both train and test 5. Without damping all web surfers would eventually end up on Pages A B or C and all other pages would have PageRank zero. Authorities estimates the node value based on the incoming links. net forum message attachments 2594 supervised_link_prediction. Similarity measures for followees one test case node 1635354 not in graph for followers node 1635354 not in graph for followees for imputing to nodes which are not there in Train data 4. It is a generalization of the eigenvector centrality. Featurization you uncomment this line if you dont know the lentgh of the file name here we have hardcoded the number of lines as 15100030 n_train sum 1 for line in open filename number of records in file excludes header desired sample size https stackoverflow. credit Graph based Features for Supervised Link PredictionWilliam Cukierski Benjamin Hamner Bo Yang begin equation W frac 1 sqrt 1 X end equation it is directed graph so calculated Weighted in and Weighted out differently 5. 1 Page Rankinghttps en. 2 Adding a set of features__we will create these each of these features for both train and test data points__jaccard_followersjaccard_followeescosine_followerscosine_followeesnum_followers_snum_followees_snum_followers_dnum_followees_dinter_followersinter_followees 5. On the other hand if a user has 30 contacts in his her social network the chances are higher that many of them know each other. org wiki Katz_centralityhttps www. 1 No of followers for each person99 of data having followers of 40 only. Hubs estimates the node value based on outgoing links. ", "id": "genialgokul1099/social-network-graph-link-prediction", "size": "12933", "language": "python", "html_url": "https://www.kaggle.com/code/genialgokul1099/social-network-graph-link-prediction", "git_url": "https://www.kaggle.com/code/genialgokul1099/social-network-graph-link-prediction", "script": "eigs Counter cosine_for_followers CalibratedClassifierCV networkx follows_back train_test_split sklearn.calibration matplotlib.pylab confusion_matrix rcParams#Size of plots sklearn.ensemble xgboost compute_features_stage1 numpy sklearn.cluster an seaborn belongs_to_same_wcc jaccard_for_followees XGBClassifier randint f1_score jaccard_for_followers randint as sp_randint tqdm plot_confusion_matrix svd cosine_for_followees calc_adar_in auc read_hdf google.colab HDFStore drive uniform scipy.sparse.linalg svds pandas sklearn.model_selection compute_shortest_path_length roc_curve RandomForestClassifier PrettyTable MiniBatchKMeans matplotlib RandomizedSearchCV KMeans#Clustering scipy.stats sklearn.metrics collections log_loss prettytable DataFrame ", "entities": "(('htmlPageRank', 'incoming links'), 'compute') (('number', 'sample size https stackoverflow'), 'uncomment') (('number', 'sample size https stackoverflow'), 'aritmetic') (('operations', 'xgboost'), 'com') (('Adamic Adar Index Adamic Adar 3 measures', 'two vertices'), 'define') (('3775008 n_test sum', 'sample size https stackoverflow'), 'com') (('already pip3', 'heatmap format'), 'com') (('directly then we', 'path'), 'remove') (('other pages', 'PageRank zero'), 'end') (('Hubs', 'outgoing links'), 'estimate') (('nodes', 'path direct i.'), 'path') (('test we', 'Social here network'), 'split') (('alpha sum _ x_j where A', 'eigenvalues lambda'), 'centrality') (('Authorities', 'incoming links'), 'estimate') (('operations', 'xgboost'), 'draw') (('Cosine 2 distance', 'equation CosineDistance frac cap Y X cdot Y end X equation'), 'begin') (('person', '1'), '2') (('Adding', 'source'), 'create') (('already pip3', 'graph https stackoverflow'), 'pdfComputing') (('set', 'test points__jaccard_followersjaccard_followeescosine_followerscosine_followeesnum_followers_snum_followees_snum_followers_dnum_followees_dinter_followersinter_followees'), '2') (('new set', 'test source'), '5') (('it', 'so differently 5'), 'feature') (('edge', 'graph adar index'), 'Features') (('network Graph Link Prediction Facebook Challenge Problem Social statement', 'https kaggle www'), 'have') (('com jaccard index', 'equation j frac'), 'begin') (('many', 'other'), 'be') (('shortest path', '2'), 'generate') (('machine learning models pelase', 'data'), 'com') (('most', 'other'), 'consider') (('Confusion good matrix', 'sub graph'), 'be') (('one link', 'hence high value'), 'come') (('they', 'Page E'), 'reach') (('even it', 'own'), 'in') (('net forum', 'message 2594 supervised_link_prediction'), 'attachment') (('edge weight value', 'nodes'), 'create') (('Mathematical PageRanks', 'percentages'), 'express') (('which', 'Train there data'), 'node') (('com kaggle forum', 'message 2594 supervised_link_prediction'), 'attachment') (('It', 'eigenvector centrality'), 'be') (('initial centrality', '1 lambda'), 'control') (('operations', 'xgboost'), 'network') (('number', 'sample size https stackoverflow'), 'node') (('Hits ScoreThe HITS 6 algorithm', 'node'), 'compute') (('svd fetures', 'weight etc'), 'contain') (('Katz centrality', 'neighbors'), 'measure') (('15 likelihood', '85'), 'correspond') "}