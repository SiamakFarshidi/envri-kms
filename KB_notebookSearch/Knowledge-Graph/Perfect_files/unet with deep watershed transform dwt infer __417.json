{"name": "unet with deep watershed transform dwt infer ", "full_name": " h1 Unet with Deep watershed transform DWT Infer h3 import seed config h3 Dataset and Augmentation h3 Utils h3 Inference h3 Check result h3 Submission ", "stargazers_count": 0, "forks_count": 0, "description": "com ebinan92 unet with deep watershed transform dwt train Inference pipeline is almost same as Awsaf s notebook https www. Loop over each object excluding the background labeled by 0. removing batch axis removing channel axis first dim is image w o aug. com awsaf49 pytorch sartorius unet strikes back infer expect watershed algorithm added. import seed config Dataset and Augmentation Utils Inference Check result Submission if there is no mask then only send images test data output_shape batch_size 1 img_size img_size segment image and label different objects lab_mask skimage. label mask cutoff Keep only objects that are large enough. Unet with Deep watershed transform DWT Infer Train notebook https www. ", "id": "ebinan92/unet-with-deep-watershed-transform-dwt-infer", "size": "417", "language": "python", "html_url": "https://www.kaggle.com/code/ebinan92/unet-with-deep-watershed-transform-dwt-infer", "git_url": "https://www.kaggle.com/code/ebinan92/unet-with-deep-watershed-transform-dwt-infer", "script": "torch.nn.functional mask2rle albumentations DataLoader aug segmentation_models_pytorch albumentations.pytorch numpy ToTensorV2 fix_aug_img ndimage get_aug_img glob cupy reverse_aug torch.nn tqdm TestDataset(Dataset) scipy config skimage.segmentation matplotlib.pyplot ndimage as ndi pandas thin infer skimage.morphology load_model ins2rle torch.utils.data fix_all_seeds __len__ Dataset label __init__ watershed skimage.measure __getitem__ watershed_energy ", "entities": "(('axis first dim', 'channel'), 'remove') (('ebinan92 unet', 'notebook https almost www'), 'com') (('import seed config Utils Inference Dataset Check', 'different objects'), 'result') "}