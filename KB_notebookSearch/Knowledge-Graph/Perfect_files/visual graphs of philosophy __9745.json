{"name": "visual graphs of philosophy ", "full_name": " h3 Importing liblaries h3 Seperating uncommon words h3 Creating scatter plots with dimensional reduction h3 How many uncommon words philossopher s use h3 How many uncommon words philossopher s use h1 Citation ", "stargazers_count": 0, "forks_count": 0, "description": "join Philosophers folder_name for N in L driver. He writes in a way that anyone can understand easily. In the next cell in TfidfVectorizer we will just get if one uncommon word occurs more than 70 We can change this number times. tr time. append X 0 XX XX. com kaggle docker python For example here s several helpful packages to load linear algebra data processing CSV f ile I O e. png Now since we have created our ray in the x axis as we can infer from the above picture when we rotate its position will be NewX x. find_element_by_xpath id islrg div 1 div 1 a 1 scrrenshot element. If you do not know what a bipartite graph is there is a good explanation from Wikipedia S3. However I will not create a supervised learning system because I think it s not important to distinguish texts according to school and it will not be practical. For Deleuze and Foucault I can just say postmodern thinkers wrote harder than others so it makes sense to me but it s open to discussion. But at first I had to get used to concepts like daimon some greek words some gods. legend loc upper left frameon False plt. It was so hard I had to drop on half of the book. How many uncommon words philossopher s use It s the same thing that we did in the above cells but just for schools instead of authors Citation Now we are going to find which philosopher referred to which philosopher. find_element_by_xpath html body div 1 div 3 form div 2 div 1 div 1 div div 2 input search. The intention of doing this to find an answer to the following question How many unique words that these philosophers have used By doing so we can recommend philosophers to read to our friends by distinguishing how hard to read a philosopher. Therefore this graph is compatible with my readings. We are using bipartite graphs because we will have our philosopher from DF in the first set and the philosophers that he referred to in the second set in our graphs. click element driver. For example if one of our friends asks I want to dive into the area of philosophy where do you think I should start We can say philosopher x is using uncomplicated language. png attachment Screenshot_4. sleep 2 try search driver. This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python Docker image https github. Now we are going to create our order in the graph. com topic list of philosophers 2027173 Then we will look according to their surnames. For Plato I have read Apology of Socrates Republic and these were after getting used to was easy. Deconstruction is an idea that has been developed in contrast to Structuralism. append X 1 for name L in zip UmbrellaP2 List2 1 folder_name name folder os. In order to distinguish the schools from each other I have used the following chain of reasoning 1. png As we have seen we have created our bipartite sets. For example if there is the word Geist it has a higher likelihood to show our school is german idealism. split if X 0 not in UmbrellaP2 List2. I have done it from my own machine with selenium but I copy the same code in the following cell. find_element_by_xpath id hdtb msb div 1 div div 2 a. In deconstruction Derrida tried to show how language in the text can give different meanings and text is not superior to talk so by knowing deconstruction texts which Derrida wrote can be deconstructed too Derrida specifically wrote in a challenging way. I have taken 4 sample sets with size sizes should be small because our dataset is so big and this process is computationally expensive of respectively 1 2 3 4. By doing this we can infer who affected which philosopher. For each philosopher we will look for the first photo of the philosopher and we are going to get it. read_csv Input data files are available in the read only. split n X a. gca i 1 Vs LIST LIST 3 a ax. If we do like that these clusters can specifically occur for that sample set. scatter Vs 0 Vs 1 color Vs 0 2 label Vs 0 3 ax. For instance in communism we will see the word bourgeoisie a lot. Now we are going to use these sets to gather photos. Obviously it s not all the picture but this can provide us a starting point when recommending. Then to create a 2 d image I have reduced the dimension into a 2d matrix. Importing liblaries On the above cell I have added a list whose name is CommonWords. What is important for me to show some uncommon frequent notions are just seen in a specific school of thought How many uncommon words philossopher s use Now according to these uncommon words we will try to guess which philosopher is using a language that s hard to understand and which philosophers are easy to read. sin alpha To have a clearer understanding let s examine the following photo that I have taken from the below function. We will use edge lengths to show how much a philosopher refers to other philosophers For this I constructed the distance formula as large distance constant frac 1 NumberOfReferring For example if Platon referred to Socrates 100 times we will say edge length will be 1 1 100 I have constructed as above because when we look at the graph I wanted to show the distance between the philosopher and the one referred is close if he referred so much. You can start with his books. Derrida is notorious for his writings which are so hard to understand so seeing Derrida in there makes sense too. I can say he is one of my favorite philosophers. write scrrenshot except print name N. Now we will create a graph for each philosopher and we will use bipartite graphs. input directory For example running this by clicking run or pressing Shift Enter will list all files under the input directory You can write up to 20GB to the current directory kaggle working that gets preserved as output when you create a version using Save Run All You can also write temporary files to kaggle temp but they won t be saved outside of the current session for a b in zip DF. index colors Dict a b for x y in zip TSVD y_train LIST. By taking frequent uncommon words mostly we can say these texts belong to this school. for name L in zip UmbrellaP2 List2 folder_name name folder os. png attachment Screenshot_2. join Philosophers folder_name for N in L if N not in Alaxander Grant Athens Thabes Eretria Cronus Babylon West Greek Babylon Paris Black Home Eretria Long Chios Rome Apollonia Cilicia driver. png with open completeName wb as f f. Creating scatter plots with dimensional reduction I have used the above cell in my own machine because since the data is so big and kaggle is having memory problems with big amounts of data it wasn t suitable to do it from Kaggle However basically in the above cell I have vectorized the Notions. I have added a constant because otherwise images are clustering in one point and we are not able to understand which image refers to who. We will define this difficultness of reading as for each philosopher and then school UncommonWordDensity huge frac sum limits_ x FirstIndex LastIndex NumNotions sum limits_ x FirstIndex LastIndex NumberOfWords I have defined UncommonWordDensity as this because if you think there are ten words in a sentence and if you do not know 4 of them it would be challenging to predict what this sentence means. For Marx I have read The Communist Manifesto and Economic and Philosophic Manuscripts in these books I can say it was comparatively easy. RETURN driver. Seperating uncommon words I have said these uncommon words Notions. png After creating this ray with our distance that we defined above we will rotate it. I will try to measure its correctness according to my readings. The reason for doing the same process for different sets is we don t want to fool ourselves by saying these are the clusters by looking at just one sample set. instead of As Fredrich Nietzsche said. Then we will call this the list Philosophers Reference website https www. Also from these graphs we can infer which philosopher affected from which other philosophers in his writings. tick_params left False right False labelleft False labelbottom False Eliminating rubbish elements Adding all referred philosophers to second set Adding the number of times that have been referred and the referred philosopher Iteratively concatenating data frames We eliminate the occasion of referring to his oneself We gather all the citations into 1 list For each philosopher from DF we add them into the first set for their own graph And the citations to the second set Gathering all graphs in a list List. Which means it does not give information about general data but it just gives for that sample set. This list includes the most common words of English. find_element_by_xpath html body div 1 div 3 form div 2 div 1 div 1 div div 2 input. Therefore I can say it makes sense to see Heidegger as the second hardest one. index figure plt. append XX UmbrellaP2. send_keys N Mathematics Philospher driver. This list is a list which has citations according to each philosopher. Now let s look at does this graph corresponds to our experience. We will not look for the full name because it s more common to see philosophers referring to each other by their surnames like As Nietzsche said. I think this is the best way to measure difficultness of reading a particular reader but let me know in the comments if you have another idea. figure ax plt. If 1 and 2 are correct then the frequent uncommon words have the highest probability of indicating that specific school. Now we have everything to examine the clusters. Please check out whether it s compatible with yours or not. As we have seen there is always a pattern. Since the data is so big changing between philosophers might take a long time according to one s computer properties so if you don t want to do it on your own machine I have recorded a video to show the result If you have any questions you can ask in the comments. Now we will assign these distances to create a ray on the x axis. For example for Plato List has Anaxagoras Antisthenes Arcesilaus Aristippus Aristotle Athens Black Chios. cos alpha NewY x. For Heidegger I have read half of the Being and Time and I can say it was the most challenging book that I have read so far. First we are going to copy paste the philosopher list in the history from the following website. png In here since large left lvert A right rvert left lvert B right rvert we can say Bertrand Russell has referred to Kant more often than he referred to Thomas Hobbes. screenshot_as_png completeName os. append x 0 x 1 Dict y y for a in DF. For Russell I have read Western Philosophy History 1 2 3 Why I Am Not a Christian The Problems of Philosophy. If one uncommon word is used in that text this world has a higher probability to indicate the school that uses it. In this list the philosophers that I have read are Heidegger Marx Russell Plato Hume Kant also as I remember there are philosophers that I have heard about which are Deleuze Derrida Foucault. For Derrida It s plausible to see Derrida in the third position because one of Derrida s most important ideas was Deconstruction. write scrrenshot except print name N else pass T Russell Scotus Russell Vayer Moore Scotus Wittgenstein Bergson Lewis Russell Quine Russell Popper Russell Kripke Russell Foucault Russell Derrida Russell Deleuze Bergson Deleuze Bloch Deleuze Harris Deleuze Russell Merleau Ponty Bergson Merleau Ponty Scotus Husserl Bergson Husserl Cohen Husserl Russell Husserl Scotus Heidegger Bergson Fichte Schutz Lenin Russell Keynes Thomas for a in T. If one uncommon word is used very frequently it has a higher chance of indicating our subject and school. send_keys N philosophy driver. Our angle for rotation will be large alpha frac 360 NumberOfPhilosophers We have defined our angle as this because when we rotate for all of them we want to have a circle in the end. Also if you think this notebook is usefull and other people get something out of it you can upvote. ", "id": "azxc9595/visual-graphs-of-philosophy", "size": "9745", "language": "python", "html_url": "https://www.kaggle.com/code/azxc9595/visual-graphs-of-philosophy", "git_url": "https://www.kaggle.com/code/azxc9595/visual-graphs-of-philosophy", "script": "Layout plotly.graph_objects matplotlib.image networkx Options train_test_split count_newnotion OffsetImage expected_conditions By Image numpy TfidfVectorizer selenium.webdriver.common.keys sklearn.manifold sklearn.feature_extraction.text selenium.webdriver.support.ui selenium.webdriver.common.by selenium.webdriver.support WebDriverWait matplotlib.offsetbox expected_conditions as EC Philosopher_graph citation webdriver matplotlib.pyplot AnnotationBbox PIL sklearn.model_selection pandas MDS ipywidgets selenium.webdriver.chrome.options selenium Keys ", "entities": "(('it', 'discussion'), 'say') (('join Philosophers', 'Eretria Cronus West Greek Paris Black Home Eretria Long Rome Apollonia Cilicia driver'), 'folder_name') (('then frequent uncommon words', 'specific school'), 'have') (('very frequently it', 'subject'), 'have') (('he', 'graphs'), 'use') (('We', 'more than 70'), 'get') (('philosopher', 'writings'), 'infer') (('which', 'that'), 'be') (('I', 'below function'), 'alpha') (('it', 'school'), 'create') (('we', 'end'), 'be') (('when we', 'position'), 'be') (('texts', 'school'), 'say') (('Therefore graph', 'readings'), 'be') (('clusters', 'sample specifically set'), 'occur') (('2027173 Then we', 'surnames'), 'list') (('folder_name name List2 1 folder', 'zip'), 'append') (('too Derrida', 'specifically challenging way'), 'try') (('these', 'Socrates Republic'), 'read') (('this', 'starting point'), 's') (('you', 'it'), 'get') (('read_csv Input data files', 'read'), 'be') (('you', 'comments'), 'take') (('Why I', 'Philosophy'), 'read') (('we', 'it'), 'look') (('sentence', 'what'), 'define') (('Seperating uncommon words I', 'uncommon words'), 'say') (('so process', 'computationally respectively'), 'take') (('I', '2d matrix'), 'create') (('philosophers', 'language'), 'be') (('school', 'higher likelihood'), 'have') (('we', 'bipartite sets'), 'png') (('more often he', 'Thomas Hobbes'), 'png') (('citations', 'list List'), 'leave') (('these', 'sample just one set'), 'be') (('so Derrida', 'in there sense'), 'be') (('t', 'zip DF'), 'list') (('It', 'kaggle python Docker image https github'), 'come') (('folder_name name List2 folder', 'zip'), 'for') (('image', 'who'), 'add') (('that', 'it'), 'have') (('one', 'most important ideas'), 's') (('We', 'uncomplicated language'), 'want') (('name', 'list'), 'add') (('Nietzsche', 'surnames'), 'look') (('list', 'English'), 'include') (('First we', 'following website'), 'go') (('I', 'gods'), 'have') (('word', 'communism'), 'see') (('it', 'second hardest one'), 'say') (('Now we', 'photos'), 'go') (('Then we', 'this'), 'call') (('you', 'idea'), 'think') (('he', 'philosopher'), 'use') (('so I', 'book'), 'be') (('I', 'readings'), 'try') (('I', '1'), 'use') (('which', 'philosopher'), 'be') (('it', 'Economic books'), 'read') (('philosopher', 'philosopher'), 'use') (('Now we', 'graph'), 'go') (('who', 'philosopher'), 'infer') (('I', 'Notions'), 'create') (('Now we', 'clusters'), 'have') (('it', 'yours'), 'check') (('index colors', 'zip TSVD y_train LIST'), 'Dict') (('join Philosophers', 'L driver'), 'folder_name') (('we', 'how hard philosopher'), 'intention') (('Now we', 'x axis'), 'assign') (('bipartite graph', 'Wikipedia good S3'), 'know') (('N', 'T.'), 'pass') (('I', 'following cell'), 'do') (('anyone', 'that'), 'write') (('that', 'Structuralism'), 'be') (('he', 'favorite philosophers'), 'say') (('we', 'it'), 'rotate') (('it', 'sample just set'), 'mean') (('I', 'most challenging that'), 'read') (('we', 'bipartite graphs'), 'create') (('graph', 'experience'), 'correspond') "}