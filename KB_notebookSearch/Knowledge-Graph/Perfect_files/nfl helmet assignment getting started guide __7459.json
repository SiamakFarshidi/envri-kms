{"name": "nfl helmet assignment getting started guide ", "full_name": " h1 NFL Helmet Assignment Competition h1 What is the goal of this competition h1 How does scoring work h1 What data are provided h2 Video and Baseline Boxes h2 NGS Tracking Data h2 Example Animation of NGS Data h1 A Baseline Submission h1 What next ", "stargazers_count": 0, "forks_count": 0, "description": "train and test folders contain the video mp4 files to be labeled. csv and test_baseline_helmets. Note that this is not the exact code used in the kaggle scoring system but results should be nearly identical. In some situations sideline players can be seen in the video footage. The NGS data and the orientation of the video cameras are not consistent. You may choose to use these to train your own helmet detection model. Identifying key points on the field line numbers hash marks as reference points. Each ground truth helmet box will only be paired with one helmet box per frame in the submitted solution. What next There are infinite ways of approaching this problem. Labels consist of a value H for home team and V for visiting team followed by the player s jersey number. All submitted helmet boxes must be unique per video frame i. no duplicated labels per frame. Check for unique boxes 1. No more than 22 helmet predictions per video frame the maximum number of players participating on field at a time. Some things to note are NGS data is sampled at a rate of 10Hz while videos are sampled at roughly 59. The below video shows an example of these baseline predictions alongside the true helmet labels. More details can be found in the data description page https www. Below is a plot of the NGS data for an example play at the moment the ball is snapped. com c nfl health and safety helmet assignment data. Imputing boxes for partially occluded helmets based on the surrounding frames. no identical left right height and width boxes per frame. train_player_tracking. Ground truth fields have the suffix _gt while submission fields have the suffix _sub. get the coordinate of inters 2. For each ground truth box the submitted box with the highest IoU will be considered for scoring. What is the goal of this competition Simply put we are trying to assign the correct player label on helmets in NFL game footage. Thanks to this notebook author for creating the awesome plotly football field https www. com ammarnassanalhajali nfl big data bowl 2021 animating players A Baseline SubmissionThe following code shows how to make a baseline submission. Example Animation of NGS DataBelow is an animation of an example play using plotly. Some ideas that can be explored are Using optimization methods to match helmet boxes to NGS data based on relative distances. If you participated in the 2020 NFL Impact Detection competition this dataset may look familiar to you. The provided NFLImpactScorer class can be used to assist in scoring your local predictions. A perfect submission would correctly identify the helmet box for every helmet in every frame of video and assign that helmet the correct player label. Submission boxes must have at least a 0. 35 Intersection over Union IoU https en. This scoring is designed specifically because ultimately the NFL will be using this algorithm to assign helmet impacts to players. csv contain the tracking data for all players on the field during the play. NGS Tracking DataThe use of the NGS tracking data will be important for correctly labeling videos. calculate the area of inters 3. If you so choose you may train your own helmet detection model and ignore these files. NGS also includes the speed s acceleration a orientation o and direction dir for each player. To reduce gamification of this metric additional restrictions are placed on submissions. csv contain imperfect baseline predictions for helmet boxes. Sideline players will have the helmet labels H00 and V00. Extra Images The images folder and image_labels. Tracking of helmets throughout the duration of a play and assigning labels to these tracks. Sideline players should not be included in the submission to avoid exceeding the 22 box and unique label constraints. Note This is a code competition. For context below are images from the sideline and endzone view of the above play at the moment of snap. Your solution must account for matching the orientation of the video angle relative to the NGS data. We are excited to see what solutions the kaggle community comes up with Read in data files Labels and sample submission Player tracking data Baseline helmet detection labels Extra image labels Maximum of 22 boxes per frame. To solve this problem Kagglers will need to leverage both video footage and NFL s Next Gen Stats NGS tracking data. csv contains helmet boxes for random frames in videos. Only one label allowed per frame. calculate the area of union print uni 4. The provided add_track_features function may be helpful when attempting to synchronize the NGS data with the video footage. Player labels are provided within the NGS tracking data for each play. After scoring the sub_labels dataframe within the NFLAssignmentScorer object can be used to evaluate results including the iou between predictions and ground truth boxes and isCorrect for correct labels. These images were used to train the model that produced the _baseline_helmets. While last year s competition was focused on detecting helmet impacts from video footage this competition challenges competitors to correctly assign each helmet to its associated player. csv This file is only available for the training dataset and provides the ground truth for the 120 training videos. train_baseline_helmets. com ammarnassanalhajali nfl big data bowl 2021 animating players Take up to 22 helmets per frame based on confidence Identify player label choices for each game_play Loop through frames and randomly assign boxes Check to make sure it meets the submission requirements. When you submit your model will be rerun on a set of 15 unseen plays located in a holdout test set. Video and Baseline BoxesAs noted above the provided baseline boxes are imperfect but allow you to quickly tackle the problem without having to address the helmet detection. NGS data and videos can be approximately synced by linking the NGS data where event ball_snap to the 10th frame of the video approximately syncronized to the ball snap in the video. A player s helmet label must only be predicted once per video frame i. Read label from CSV Maximum of 22 boxes per frame. NFL Helmet Assignment Competition Welcome to the 2021 NFL Health Safety Helmet Assignment competition The competition is part of a collaborative effort between National Football League NFL and Amazon Web Services AWS to assist in the development of the best sports injury surveillance and mitigation program in the world. Using computer vision techniques to identify player jersey numbers and pair with helmets. org wiki Jaccard_index with the ground truth helmet box. The check_submission function can be used to check if your submission meets the above requirements. The model used to create these files was trained only on the additional images found in the images folder. Sideline players helmets are not scored in the grading algorithm and can be ignored. csv and test_player_tracking. In this submission we ve randomly assigned labels to the top 22 baseline helmet boxes for each frame. Check for unique boxes The sample submission meets these requirements. calculate the overlaps between pred_box and gt_box Keep sub_labels for review Expected submission columns Score the sample submission Score a submission with only impacts Score a submission with only non impacts Score a perfect submission Black White Red We need to add 1 to the frame count to match the label frame index that starts at 1 Let s add a frame index to the video so we can track where we are Now add the boxes Filter for definitive head impacts and turn labels red Not all browsers support the codec we will re load the file at tmp_output_path and convert to a codec that is more broadly readable using ffmpeg scaling factor for display Estimated video frame Endzones fontname Arial fontname Arial Reference https www. First we will run this code on the training data and calculate the expected score. How does scoring work The scoring used for this competition is Weighted Accuracy where detected helmets involved in an impact are weighted 1000x more than non impact helmets. Next we create this submission on the test set for submission. The publicly provided test videos are simply a set of mock plays copied from the training set which are not used in scoring. What data are provided For the full data details please review the data description page https www. ", "id": "robikscube/nfl-helmet-assignment-getting-started-guide", "size": "7459", "language": "python", "html_url": "https://www.kaggle.com/code/robikscube/nfl-helmet-assignment-getting-started-guide", "git_url": "https://www.kaggle.com/code/robikscube/nfl-helmet-assignment-getting-started-guide", "script": "add_plotly_field plotly.graph_objects IPython.display plotly.express matplotlib.pylab Video add_isCorrect_col accuracy_score numpy random_label_submission merge_sub_labels add_track_features add_xy calculate_metric_weighted NFLAssignmentScorer matplotlib.patches video_with_baseline_boxes pandas check_submission display get_iou_df __init__ filter_to_top_label_match sklearn.metrics score create_football_field ", "entities": "(('Kagglers', 'video footage'), 'need') (('videos', 'roughly 59'), 'be') (('Weighted where detected helmets', 'non impact 1000x more helmets'), 'score') (('we', 'frame'), 've') (('Next we', 'submission'), 'create') (('Labels', 'jersey number'), 'consist') (('dataset', 'you'), 'look') (('used', 'images folder'), 'train') (('More details', 'data description page https www'), 'find') (('helmet submitted boxes', 'video frame i.'), 'be') (('data', 'data description page https www'), 'provide') (('csv', 'helmet boxes'), 'contain') (('train folders', 'mp4 video files'), 'contain') (('that', 'relative distances'), 'use') (('_ submission fields', 'suffix _ sub'), 'have') (('results', 'scoring exact kaggle system'), 'note') (('Simply we', 'NFL game footage'), 'try') (('NFLImpactScorer provided class', 'local predictions'), 'use') (('you', 'helmet detection'), 'note') (('ball', 'moment'), 'be') (('specifically ultimately NFL', 'players'), 'design') (('Player labels', 'play'), 'provide') (('provided function', 'video footage'), 'be') (('assign boxes randomly it', 'submission requirements'), 'com') (('Baseline following code', 'baseline how submission'), 'com') (('csv', 'videos'), 'contain') (('submission', 'above requirements'), 'use') (('sample submission', 'requirements'), 'check') (('Example Animation', 'example play'), 'be') (('helmet label', 'video frame only once i.'), 'predict') (('that', 'video Endzones Arial fontname Arial Reference https display Estimated frame www'), 'calculate') (('solution', 'NGS relative data'), 'account') (('that', '_ baseline_helmets'), 'use') (('sideline players', 'video footage'), 'see') (('Sideline players', 'label 22 box constraints'), 'include') (('NGS data', 'video cameras'), 'be') (('direction', 'player'), 'include') (('ground truth helmet box', 'submitted solution'), 'pair') (('submitted box', 'scoring'), 'consider') (('csv', 'play'), 'contain') (('which', 'scoring'), 'be') (('NGS Tracking DataThe use', 'correctly videos'), 'be') (('below video', 'helmet true labels'), 'show') (('helmet', 'H00'), 'have') (('competition', 'world'), 'Welcome') (('First we', 'expected score'), 'run') (('that', 'player correct label'), 'identify') (('submit', 'holdout test set'), 'be') (('where event', 'video'), 'sync') (('Sideline players helmets', 'grading algorithm'), 'score') (('Baseline helmet detection', 'frame'), 'be') (('You', 'helmet detection own model'), 'choose') (('so you', 'files'), 'choose') (('identical', 'frame'), 'leave') (('file', 'training 120 videos'), 'csv') (('competitors', 'associated player'), 'challenge') "}