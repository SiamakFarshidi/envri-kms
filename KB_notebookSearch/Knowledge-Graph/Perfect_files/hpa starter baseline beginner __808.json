{"name": "hpa starter baseline beginner ", "full_name": " h1 Importing Libraries h1 BASIC EDA h1 LOADING THE DATASET h1 Define the model h1 TRAINING THE MODEL h1 Next step is try out with image augmentation ", "stargazers_count": 0, "forks_count": 0, "description": "Human Protein Atlas Single Cell Classification competition This is a weakly supervised multi label classification problem. This starter notebook to get an idea on how to approach this competition. Notebooks referred to create this kernel are given the comment of this notebook. If this helped give an upvote. Given images of cells from our microscopes and labels of protein location assigned together for all cells in the image We will develop models capable of segmenting and classifying each individual cell with precise labels. Importing Libraries BASIC EDA LOADING THE DATASET Define the model TRAINING THE MODEL Scores are not that high we need to try out various techniques to improve the score. Next step is try out with image augmentation Work under progress Plot the value counts for each count Split the labels Create a counter. This initializes the count for each class with a value of zero Update the counter Plot. ", "id": "sajidhussain3/hpa-starter-baseline-beginner", "size": "808", "language": "python", "html_url": "https://www.kaggle.com/code/sajidhussain3/hpa-starter-baseline-beginner", "git_url": "https://www.kaggle.com/code/sajidhussain3/hpa-starter-baseline-beginner", "script": "Counter keras.layers train_test_split InceptionV3 numpy tensorflow.keras.models MaxPooling2D seaborn Adam Dropout BatchNormalization Dense GlobalAveragePooling2D layers models tqdm tensorflow.keras.applications make_model keras.optimizers tensorflow ReduceLROnPlateau matplotlib.pyplot tensorflow.keras.callbacks ModelCheckpoint create_train defaultdict sklearn.model_selection pandas EarlyStopping Conv2D Model Input tensorflow.keras Flatten collections load_image ", "entities": "(('We', 'precise labels'), 'develop') (('that we', 'score'), 'import') (('value', 'counter'), 'try') (('This', 'zero Update'), 'initialize') (('Notebooks', 'notebook'), 'refer') "}