{"name": "build ml model using pycaret ", "full_name": " h1 USING PYCARET TO BUILD A QUICK PREDICTIVE MODEL h1 Intializing the Setup h1 MODEL ANALYSIS h1 OPTIMIZE THRESHOLD ", "stargazers_count": 0, "forks_count": 0, "description": "We can also see AUC Precision Recall etc. read_csv You can write up to 20GB to the current directory kaggle working that gets preserved as output when you create a version using Save Run All You can also write temporary files to kaggle temp but they won t be saved outside of the current session. It takes a trained model object a classifier and the loss function simply represented by true positives true negatives false positives and false negatives. The features are of the lump found in patients its radius texture perimeter etc. Looks like mean_smoothness and texture in both cases benign or malignant tumor is almost the same. USING PYCARET TO BUILD A QUICK PREDICTIVE MODELPyCaret is an open source low code machine learning library in Python that allows you to go from preparing your data to deploying your model within minutes in your choice of notebook environment. This function returns an interactive plot where loss function y axis is represented as a function of different probability threshold values on x axis. for ensemble models for exploration of a better model for this problem MODEL ANALYSIS OPTIMIZE THRESHOLDThere is an option where i can limit the false negatives to be zero here. The recall is the measure of our model correctly identifying True Positives. We can see that in comparison LDA gives us the best estimate of Recall and AUC. Preprocess Features2. We will be making a model that can use these features to predict diagnosis of breast cancer using PyCaretDespite the provisions by PyCaret I still like to do an EDA Myself to understand the data. Make predictions Despite the provisions by PyCaret I still like to do an EDA Myself to understand the data. In this case we have dataset of I will now plot density plots for diagnosed cancer and not cancer for each feature to see distinguishment. Recall in this case is extremely important as imagine having a patient who has breast cancer but is not treated. linear algebra data processing CSV file I O e. We will be using it to 1. Deploy and compare models3. For our problem statement that would be the measure of patients that we correctly identify having a breast cancer out of all the patients actually having it. Thus for all the patients who actually have cancer recall tells us how many we correctly identified as having a breast cancer. The idea is to use to resolve a problem with lesser coding effort. Interpret the model6. Let s look at the correlation of the features Mean_radius Mean_perimeter and mean_area are fully correlated. If we were running logistics regression choosing these features would have been problematic since those models are based on assumption that features are completely independent. Other features however shows a clearer distinguishment. Given its implication in such a case where breast cancer goes undetected. Since we are using tree based models this wouldn t be a problem Will look at the distribution of the target variable now Intializing the SetupPrecision is the ratio between the True Positives and all the Positives. In this case we have a dataset was obtained from the University of Wisconsin Hospitals Madison from Dr. Evaluate the model results5. A vertical line is then shown to represent the best value of probability threshold for that specific classifier. We have the diagnosis against this feature. We need to understand the problem before looking for its answer. ", "id": "ridaamjad/build-ml-model-using-pycaret", "size": "3245", "language": "python", "html_url": "https://www.kaggle.com/code/ridaamjad/build-ml-model-using-pycaret", "git_url": "https://www.kaggle.com/code/ridaamjad/build-ml-model-using-pycaret", "script": "seaborn pycaret.classification matplotlib.pyplot pandas numpy ", "entities": "(('you', 'notebook environment'), 'use') (('breast where cancer', 'case'), 'give') (('dataset', 'Dr.'), 'have') (('vertical line', 'specific classifier'), 'show') (('We', 'feature'), 'have') (('Mean_radius Mean_perimeter', 'features'), 'correlate') (('Other features', 'however clearer distinguishment'), 'show') (('loss where axis', 'axis'), 'return') (('where i', 'false negatives'), 'be') (('wouldn t', 'True Positives'), 'be') (('features', 'patients'), 'be') (('features', 'assumption'), 'be') (('idea', 'lesser coding effort'), 'be') (('We', 'answer'), 'need') (('who', 'breast cancer'), 'be') (('recall', 'True correctly Positives'), 'be') (('LDA', 'Recall'), 'see') (('we', 'breast correctly cancer'), 'tell') (('I', 'data'), 'make') (('we', 'actually it'), 'be') (('mean_smoothness', 'benign tumor'), 'look') (('we', 'feature'), 'have') (('t', 'outside current session'), 'write') (('loss function', 'true negatives false positives'), 'take') "}