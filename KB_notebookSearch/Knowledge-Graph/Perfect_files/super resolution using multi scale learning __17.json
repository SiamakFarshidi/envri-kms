{"name": "super resolution using multi scale learning ", "full_name": " h1 Model Building ", "stargazers_count": 0, "forks_count": 0, "description": "Model Building defining the size of the image open cv reads images in BGR format so we have to convert it to RGB resizing image resizing image Subpixel pixelshuffler left branch of Y network 3 layers of Conv2D Dropout MaxPooling2D number of filters doubles after each layer 32 64 128 left branch of Y network 3 layers of Conv2D Dropout MaxPooling2D number of filters doubles after each layer 32 64 128. ", "id": "harshraone/super-resolution-using-multi-scale-learning", "size": "17", "language": "python", "html_url": "https://www.kaggle.com/code/harshraone/super-resolution-using-multi-scale-learning", "git_url": "https://www.kaggle.com/code/harshraone/super-resolution-using-multi-scale-learning", "script": "skimage.transform tensorflow.keras.layers pixel_MSE plot_model plot_images rescale Upsample_block numpy tensorflow.keras.models MaxPooling2D img_to_array Dropout ndimage Dense log10 regularizers cv2 tqdm misc add scipy tensorflow tensorflow.keras.utils PSNR tensorflow.keras.preprocessing.image matplotlib.pyplot resize Conv2D Conv2DTranspose Model concatenate UpSampling2D Input tensorflow.keras sorted_alphanumeric ", "entities": "(('MaxPooling2D number', 'layer'), 'Building') "}