{"name": "tilewise pipeline ", "full_name": " h2 Model h2 WSI Model h2 Normalization h2 Predict h1 Prediction ", "stargazers_count": 0, "forks_count": 0, "description": "Model WSI Model Normalization Predict Prediction IF test_images is not exists we will use some train images. This is actually a necessary step in macenko s method since we re not guaranteed the order of the different stains. MaxPool2d 2 reshape output transform type return get W_source If Macenco method reorder channels in W_target and W_source as desired. MaxPool2d 2 nn. ND array rolling 2D window array horizontal step abscissa number of columns vertical step ordinate number of rows nn. get W_source if not provided deconvolve mask out keep in mind image is inverted If 2 stains third stain is cross product of 1st 2 channels calculated using complement_stain_matrix rgb_to_od compatibility od_to_rgb compatibility reshape output transform type Normalize new vector to have unit norm mask out irrelevant values get rid of NANs and infinities Principal components matrix Input pixels projected into the PCA plane Pixels above the magnitude threshold The angles The stain vectors The stain matrix Index corresponding to percentile find stains matrix from source image Get W_target Normalize to ideal stain matrix if none is provided Get W_target from target image Convolve source image StainsFloat with W_target return masked values using unnormalized image. ", "id": "malyshevvalery/tilewise-pipeline", "size": "58", "language": "python", "html_url": "https://www.kaggle.com/code/malyshevvalery/tilewise-pipeline", "git_url": "https://www.kaggle.com/code/malyshevvalery/tilewise-pipeline", "script": "torch.nn.functional rgb_to_sda block_reduce openslide _get_angles pathlib magnitude complement_stain_matrix PandaModel(nn.Module) argpercentile stain_unmixing_routine make_head Iterable color_deconvolution_routine convert_image_to_matrix tensorflow.keras.models numpy tile_filter Union img_to_array Tuple Path OpenSlide convert_matrix_to_image load_img rgb_separate_stains_macenko_pca preprocess_input reduce nn tqdm separate_stains_macenko_pca tensorflow matplotlib.pyplot roll tensorflow.keras.preprocessing.image typing get_principal_components get_percentile_vector dbn forward getsizeof color_convolution pandas tqdm.notebook sys load_model _reorder_stains Model _get_channel_order sda_to_rgb color_deconvolution _ordered_stack tensorflow.keras.applications.resnet50 Tensor Conv2dBlock(nn.Module) pad exclude_nonfinite Type __init__ normalize torch skimage.measure find_stain_index cv2.cv2 ", "entities": "(('we', 'train images'), 'Predict') (('none', 'unnormalized image'), 'invert') (('ND rolling 2D window step abscissa array array horizontal number', 'rows'), 'nn') (('we', 'different stains'), 'be') "}