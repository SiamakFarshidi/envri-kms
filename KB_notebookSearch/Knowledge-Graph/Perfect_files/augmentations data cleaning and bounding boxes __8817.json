{"name": "augmentations data cleaning and bounding boxes ", "full_name": " h1 Importing Libraries h1 Utilities h1 Reading and Loading the Dataset h1 Range Checking on Bounding Box Coordinates h1 Check if image extensions are all jpg h1 Check if there are corrupted images and all images are 1024 by 1024 h1 Sanity Check between train csv and train images h1 Plotting Multiple Images h1 Plotting Multiples Images with Bounding Boxes h1 Augmentations h1 Bounding Boxes with Albumentations h2 Vertical Flip h2 Horizontal Flip h1 An updated tutorial on Albumentations h2 Image Augmentation for classification ", "stargazers_count": 0, "forks_count": 0, "description": "Let s look at an example transform A. Range Checking on Bounding Box CoordinatesFurthermore due to python s internal floating problems there may be weird values like negative or values that adds up to be more than 1024 in x_max y_max. AugmentationsAugmentation is an important technique to artifically boost your data size. Image Augmentation for classificationThe below are purely for my documentation and learning experience so most of the content are copied verbatim from Albumentation s website https albumentations. Let s look at the respective problematic rows. RandomCrop will take an input image extract a random patch with size 256 by 256 pixels from it and then pass the result to the next augmentation in the pipeline in this case to A. So you have to round down. unique df height. 2 In the example Compose receives a list with three augmentations A. ai docs getting_started image_augmentation. com Paperspace DataAugmentationForObjectDetection ateplyuk s gwd starter https www. As we can see from the above there are 49 images without bounding box annotations because they do not have wheats in the image and hence did not appear in the train. astype float32 train height train bbox. RandomBrighntessContrast. Below are some snippets of augmentation types you can use interestingly Albumentation offers RandomSunFlare RandomFog and RandomSnow although all the images seem to be taken in a very good lighting but it might not be that bad an idea since in the real world images of wheat may taken in different weather conditions. com shonenkov training efficientdet UtilitiesUtility functions are stored here they are useful and feel free to add these into your arsenal. Plotting Multiples Images with Bounding BoxesIn object detection with bounding boxes it is always a good idea to randomly plot some images with their bounding boxes to check for any awry bounding box coordinates. Although I have to say that in this particular competition there are quite a lot of images with many bounding boxes and hence you have to scrutinize clearly. csv and label them as 0. This is a serious problem that one can run into when you Normalize the bounding box it may exceed 1 and this will cause an error especially if you decide to augment the images as well. RandomCrop receives two parameters height and width. Importing LibrariesIn this kernel I present some utility functions to do some sanity check on images as well as some functions that you can reuse for future projects when you want to plot multiple images in a grid. Reading and Loading the DatasetI personally like to expand the bounding box coordinates into the form of x_min y_min x_max y_max but currently they are stored in a list of x_min y_min width of bbox height of bbox. Let s change these problematic values to 1024We can delete width and height columns because we do not need them it can be easily pulled out from the images itself. Next it is better to append. train bbox train bbox. RandomCrop width 256 height 256 A. RandomCrop width 256 height 256 means that A. With a probability of 20 this augmentation will change the brightness and contrast of the image received from A. But this is just my opinion. Check if image extensions are all jpgFirst we check if all images in the train folder are all in. And the good thing is this code also helps us to check for corrupted images as well so if there is a corrupted image it will definitely show up that the counter is non zero. We need to be careful here. width axis 1 train y_max train. com ateplyuk gwd starter efficientdet train Shonenkov s awesome code https www. Step 1 Import the required libraries import cv2 import albumentations as A Step 2 Define an augmentation pipeline. The sole reason that for eg row 31785 has x_max more than 1024 is because of the original dataset s labelling. apply lambda x x 1. Great indeed all our images are of 1024x1024 in size. And with a probability of 80 it will keep the received image unchanged. But when you want to use Albumentations to plot bounding boxes it takes in bboxes in the format of pascal_voc which is x_min y_min x_max y_max it also takes in label_fields which are the labels for each bounding box. png References Paperspace DataAugmentationForObjectDetection https github. References Albumentation Documentations https github. RandomBrighntessContrast in the example also has one parameter p. HorizontalFlip and A. Bounding Boxes with AlbumentationsRecall we are using our chosen image as example for convenience I will remind you of the chosen images image matrix and its bounding boxes coordinates below. ones to populate the label fields. This will make us manipulate the data easier later. As an argument to the Compose class you need to pass a list of augmentations you want to apply. The following picture depicts the Compose idea wonderfully. augmentation pipeline https albumentations. Albumentations A caution here this competition has all labels to be 1 so a neat trick is just to use np. To create an augmentation you create an instance of the required augmentation class and pass augmentation parameters to it. 000015 which exceeds the image size already. unique 1024 to check if all images are of 1024x1024 resolution But we will not be 100 sure if its true in the training folder. It is better to check because if there are a mixture of image type we may face troubles later on. HorizontalFlip in this example has one parameter named p. And if you are interested in just visualizing one certain image s bounding box plot you can first extract the chosen image s dataframe and convert the bounding box of the image into a 2d array. Then apply the draw_rect function to plot. head randomly choose 12 images to plot randomly choose 12 image. bboxes is a 2d array. com shonenkov training efficientdet to make the code above more compact. It might be an idea that we can put these 49 images inside the train. So we still need to do some simple preprocessing below. height axis 1 train. jpg train image_id image_id_append_jpg train. However when dealing with multiple classes you should not do this and instead just take the labels from the dataframe accordingly. To define an augmentation pipeline you need to create an instance of the Compose class. It may be useful later on should we wish to add in images with no wheat inside the image. Here we see a nice grid of 12 images plotted. ALSO THIS WEBSITE IS AMAZING FOR YOU TO TUNE AND VISUALIZE YOUR AUGMENTATIONS https albumentations demo. One can tune the parameters accordingly. com albumentations team albumentations_examples tree master notebooks Vertical Flip Horizontal Flip An updated tutorial on AlbumentationsRecently Albumentations updated their website and has more thorough walkthrough on applying their augmentations. jpg behind all the image_id in the dataframe. This is a personal preference in actual fact you do not need to do this it is easier for me to normalize the bboxes. astype float32 train width train bbox. A sneak peek of how a multiple bounding box plot is as such sample https i. Good seems like all our images in the folder are of. I have since used Shonenkov s awesome code https www. RandomBrightnessContrast p 0. apply lambda x x 2. apply lambda x x 0. 200012 and when you add that to the width being 150. apply lambda x x 3. A call to Compose will return a transform function that will perform image augmentation. jpg Now we will use the above context on our wheat example. Plotting Multiple ImagesHere we define a nice function that is useful not only for this competition but for similar project as well. But there is a caveat here my bounding boxes array is of shape N 5 where the last element is the labels. ai docs images getting_started augmenting_images augmentation_pipeline_visualized. 5 means that with a probability of 50 the transform will flip the image horizontally and with a probability of 50 the transform won t modify the input image. And from there you can further check which image is the one causing problem. apply lambda col col. So the next portion will help to expand them out. So we won t use the same way here. The link is here https albumentations. I assign a class 1 which is the label wheat. astype float32 train y_min train bbox. 800003 it gives you 1024. Note that we used our utility function here to plot them. apply lambda x x 1 1. For example in row 31785 the x_min provided is 873. tolist image_id_append_jpg for image_id in image_id_list image_id_append_jpg. p is a special parameter that is supported by almost all augmentations. astype float32 train train image_id x_min y_min width height train x_max train. split train x_min train bbox. head image_id_list train image_id. Sanity Check between train csv and train imagesWe will write a function to check if the number of unique image_ids match the number of unique images in the folder. In particular when the dataset is small augmentation prior to training the model will help the network to learn better. It controls the probability of applying the augmentation. Check if there are corrupted images and all images are 1024 by 1024Most people will use df width. And as far as I feel bounding boxes when de normalized should necessary be in integer. ", "id": "reighns/augmentations-data-cleaning-and-bounding-boxes", "size": "8817", "language": "python", "html_url": "https://www.kaggle.com/code/reighns/augmentations-data-cleaning-and-bounding-boxes", "git_url": "https://www.kaggle.com/code/reighns/augmentations-data-cleaning-and-bounding-boxes", "script": "math Counter skip_csv_header albumentations numpy check_file_type plot_random_images tqdm draw_rect matplotlib.pyplot random_bbox_check ceil check_image_size pandas sanity_tally plot_multiple_img tqdm.notebook total_image_list draw_rect_with_labels IPython.core.interactiveshell collections InteractiveShell ", "entities": "(('special that', 'almost all augmentations'), 'be') (('definitely counter', 'corrupted images'), 'be') (('I', 'images image chosen matrix'), 'use') (('so most', 'website https verbatim albumentations'), 'be') (('hence you', 'many bounding boxes'), 'have') (('RandomCrop width', '256 height'), 'mean') (('jpg Now we', 'wheat example'), 'use') (('images', 'folder'), 'seem') (('I', 'code https since awesome www'), 'use') (('which', 'image size'), '000015') (('N 5 where last element', 'shape'), 'be') (('they', 'hence train'), 'be') (('indeed images', 'size'), 'be') (('that', 'similar project'), 'define') (('Here we', '12 images'), 'see') (('Step 1 required libraries', 'Step 2 Define'), 'Import') (('following picture', 'Compose idea'), 'depict') (('number', 'folder'), 'write') (('AugmentationsAugmentation', 'data important artifically size'), 'be') (('it', 'easily images'), 'let') (('it', 'box coordinates'), 'object') (('we', 'training 100 folder'), '1024') (('augmentation', 'A.'), 'change') (('transform', 'input image'), 'mean') (('Compose', 'augmentations three A.'), '2') (('RandomCrop', 'A.'), 'take') (('RandomCrop', 'height'), 'receive') (('ALSO WEBSITE', 'AUGMENTATIONS https albumentations demo'), 'be') (('x_min 31785 provided', 'row'), 'be') (('especially you', 'images'), 'be') (('you', '2d array'), 'extract') (('here they', 'arsenal'), 'store') (('us', 'data'), 'make') (('that', 'image augmentation'), 'return') (('sole reason', 'original labelling'), 'be') (('RandomBrighntessContrast', 'also one parameter'), 'have') (('It', 'augmentation'), 'control') (('you', 'augmentations'), 'need') (('images', 'train folder'), 'check') (('you', 'it'), 'create') (('you', 'dataframe'), 'do') (('network', 'small prior model'), 'help') (('com albumentations team albumentations_examples tree master Vertical Flip Horizontal updated tutorial', 'augmentations'), 'notebook') (('it', 'weather different conditions'), 'be') (('you', 'Compose class'), 'define') (('1 which', 'class'), 'assign') (('we', 'here them'), 'note') (('when you', 'grid'), 'import') (('head', 'randomly 12 image'), 'choose') (('So next portion', 'them'), 'help') (('So we', 'still simple preprocessing'), 'need') (('HorizontalFlip', 'one parameter'), 'have') (('we', 'train'), 'be') (('it', 'received image'), 'keep') (('further image', 'problem'), 'check') (('neat trick', 'just np'), 'caution') (('we', 'troubles'), 'be') (('width', 'that'), '200012') (('later we', 'image'), 'wish') (('currently they', 'bbox'), 'like') (('s', 'respective problematic rows'), 'let') (('which', 'bounding box'), 'y_min') (('1024', 'df width'), 'check') (('me', 'bboxes'), 'be') (('bounding box sneak how multiple plot', 'sample https such i.'), 'peek') (('de when normalized', 'necessary integer'), 'far') (('that', 'x_max'), 'be') "}