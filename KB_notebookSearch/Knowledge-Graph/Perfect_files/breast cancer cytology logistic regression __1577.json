{"name": "breast cancer cytology logistic regression ", "full_name": " ", "stargazers_count": 0, "forks_count": 0, "description": "Now let us see how our intelligent model compare to a dumb model which predicts o or not cancer all the time because it the most prevelent class. The above code deleted 16 rows with missing values and now we have 683 rows Getting ready to do classification Import cross validation from sklearn for test trian split. This will be the accuracy of a dumb model that predicts 0 all the time let us see what this means Predicted 0 Predicted 1 Total Actual 0 103 4 107 Actual 1 8 56 64 Total 111 60 true positive true negatives false positives false negatives Let us see the sensitivity of our logistic regression model Our model s sensitivity is 87. Second column is the probablity of it being cancerous calculates the probability of predicting 1 cancer and store the out put in probab_cancer we need the actual values in the cancer column and the predicted probabilities of postive value 1. Then import logistic regression from sklearn. Breast Cancer prediction machine learning tutorial using logistic regression Objective Predict breast cancer based on a set of cytology features clump thickness uniformity of cell size uniformity of cell shape marginal adhesion single epithelial cell size bare nuclei bland chromatin normal nuceloli mitosis. roc_auc_score function computes the area under the receiver operating characteristic ROC curve This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python docker image https github. We will start with accuracy as you can see 0 is more prevalent Now let us see the percentage of o in y_test. The goal is to spilit our data into two. 9 of the time our model was able to identify breast cancer based on the training data. Looks like we did better than the dumb model Now let us create a confusion matrix to identify sensitivity specificity all the other good statistical stuffNow let us find out the area under the curve. For example running this by clicking run or pressing Shift Enter will list the files in the input directory Any results you write to the current directory are saved as output. We will use the training set to train our logistic regression model. com kaggle docker python For example here s several helpful packages to load in linear algebra data processing CSV file I O e. 2 Calculate false postive rate predicting cancer when pt does not have cancer pretty awesome 3. After that we will use this model to predict cancer occurance from the features in the testing set. 5 Let us calculate specificity Looks like our model has pretty good specificity 96. Read breast cancer csv file to pandas data frame data Display the first 5 rows of the csv file It is always a good idea to understand your data There are 699 rows and 11 columns in this CSV file Find out how many cells have missing values Looks like the field nuclei has 16 missing values Dropping any rows that has missing values creating feature data set Here we are going to select feature fileds and assign it to a pandas data frame x. 7 precison when it is predicting cancer how precise is it positive predictive value Negative predictive value Now let us say that you want to figure out the probaility of cancer from a set of features we can use the predict_proba function let us first see the predicted answers predicting cancer based on the data from first 10 rows of x Now let us predict the probaility of each prediction The first colun is the probability of it being benign. jpg attachment Fibroadenoma_10X. A traning data set and a testing set. Since we already know the occurance of cancer in the testing set we can comapre it with the predicted vaules to benchmark our model. read_csv Input data files are available in the. jpg previously we had 699 rows. So it was dropped printing the first 5 rows to see whether we got all the features Now we are going to extract the class field from data and store it in variable y This is the variable that we want to predict 0 no cancer 1 cancer train logistic regression model make predictions based on x_test and store it to y_pred_class Now let us see how our model is performing. ", "id": "johnyquest/breast-cancer-cytology-logistic-regression", "size": "1577", "language": "python", "html_url": "https://www.kaggle.com/code/johnyquest/breast-cancer-cytology-logistic-regression", "git_url": "https://www.kaggle.com/code/johnyquest/breast-cancer-cytology-logistic-regression", "script": "sklearn.linear_model sklearn sklearn.cross_validation auc train_test_split matplotlib.pyplot metrics pandas sklearn.metrics roc_curve LogisticRegression roc_auc_score numpy ", "entities": "(('we', 'testing set'), 'use') (('us', 'curve'), 'look') (('It', 'python docker image https kaggle github'), 'compute') (('model', 'training data'), '9') (('it', 'prediction'), 'precison') (('sensitivity', 'regression logistic model'), 'be') (('nuclei bare bland', 'normal nuceloli mitosis'), 'clump') (('we', 'model'), 'know') (('when pt', 'cancer'), 'awesome') (('read_csv Input data files', 'the'), 'be') (('now we', 'test trian split'), 'delete') (('we', 'predicted postive value'), 'be') (('model', 'pretty good specificity'), 'let') (('Here we', 'pandas data frame'), 'Display') (('how model', 'y_pred_class'), 'drop') (('you', 'output'), 'list') (('We', 'training regression logistic model'), 'use') (('time it', 'o'), 'let') (('more Now us', 'y_test'), 'start') "}