{"name": "anomaly detection credit card fraud analysis ", "full_name": " ", "stargazers_count": 0, "forks_count": 0, "description": "It has many applications in business from intrusion detection identifying strange patterns in network traffic that could signal a hack to system health monitoring spotting a malignant tumor in an MRI scan and from fraud detection in credit card transactions to fault detection in operating environments. In practice such informations are generally not available and taking n_neighbors 20 appears to work well in general. Challenges with Simple Statistical MethodsThe low pass filter allows you to identify anomalies in simple use cases but there are certain situations where this technique won t work. As a result of these properties anomalies are susceptible to a mechanism called isolation. SVM detecting 8411 errors Isolation Forest has a 99. Define the outlier detection methodsFit the modelObservations Isolation Forest detected 69 errors versus Local Outlier Factor detecting 93 errors vs. We can also improve on this accuracy by increasing the sample size or use deep learning algorithms however at the cost of computational expense. The dataset consists of numerical values from the 28 Principal Component Analysis PCA transformed features namely V1 to V28. If you like this kernel greatly appreciate an UPVOTE Import the required libraries Checking the missing values Determine the number of fraud and valid transactions in the entire dataset Assigning the transaction class 0 NORMAL 1 FRAUD How different are the amount of money used in different transaction classes How different are the amount of money used in different transaction classes Let s have a more graphical representation of the data Graphical representation of the data Create a trace Determine the number of fraud and valid transactions in the dataset. Let s say the definition of an anomalous data point is one that deviates by a certain standard deviation from the mean. The algorithm learns a soft boundary in order to cluster the normal data instances using the training set and then using the testing instance it tunes itself to identify the abnormalities that fall outside the learned region. The logic argument goes isolating anomaly observations is easier because only a few conditions are needed to separate those cases from the normal observations. Data instances that fall outside of these groups could potentially be marked as anomalies. This skewed set is justified by the low number of fraudulent transactions. The number of neighbors considered parameter n_neighbors is typically chosen 1 greater than the minimum number of objects a cluster has to contain so that other objects can be local outliers relative to this cluster and 2 smaller than the maximum number of close by objects that can potentially be local outliers. K means is a widely used clustering algorithm. Assumption Data points that are similar tend to belong to similar groups or clusters as determined by their distance from local centroids. Furthermore there is no metadata about the original features provided so pre analysis or feature study could not be done. Our aim here is to detect 100 of the fraudulent transactions while minimizing the incorrect fraud classifications. An alternative use is as a generative model for example if a system is manually fed the codes it has learned for cat and flying it may attempt to generate an image of a flying cat even if it has never seen a flying cat before. We can also use complex anomaly detection models to get better accuracy in determining more fraudulent casesNow let us look at one particular Deep Learning Algorithm called Autoencoders Autoencoders An autoencoder is a type of artificial neural network used to learn efficient data codings in an unsupervised manner. The types of algorithms we are going to use to try to do anomaly detection on this dataset are as follows1. Business use case Someone is trying to copy data form a remote machine to a local host unexpectedly an anomaly that would be flagged as a potential cyber attack. The definition of abnormal or normal may frequently change as malicious adversaries constantly adapt themselves. Machine Learning Based ApproachesBelow is a brief overview of popular machine learning based techniques for anomaly detection. com mlg ulb creditcardfraudObservationsThe data set is highly skewed consisting of 492 frauds in a total of 284 807 observations. Novelty detection is concerned with identifying an unobserved pattern in new observations not included in training data like a sudden interest in a new channel on YouTube during Christmas for instance. Noise removal NR is the process of removing noise from an otherwise meaningful signal. Anomaly Detection TechniquesSimple Statistical MethodsThe simplest approach to identifying irregularities in data is to flag the data points that deviate from common statistical properties of a distribution including mean median mode and quantiles. Technically this is called a rolling average or a moving average and it s intended to smooth short term fluctuations and highlight long term ones. This concept is based on a distance metric called reachability distance. Contextual anomalies The abnormality is context specific. It considers as outlier samples that have a substantially lower density than their neighbors. Some architectures use stacked sparse autoencoder layers for image recognition. Business use case Detecting credit card fraud based on amount spent. Clustering Based Anomaly DetectionClustering is one of the most popular concepts in the domain of unsupervised learning. What Are Anomalies Anomalies can be broadly categorized as Point anomalies A single instance of data is anomalous if it s too far off from the rest. Here are a few The data contains noise which might be similar to abnormal behavior because the boundary between normal and abnormal behavior is often not precise. This involves more sophisticated methods such as decomposing the data into multiple trends in order to identify the change in seasonality. Mathematically an n period simple moving average can also be defined as a low pass filter. From the above table There are no missing values in the dataset Do fraudulent transactions occur more often during certain time frame Let us find out with a visual representation. A SVM is typically associated with supervised learning but there are extensions OneClassCVM for instance that can be used to identify anomalies as an unsupervised problems in which training data are not labeled. Traversing mean over time series data isn t exactly trivial as it s not static. This resulted in only 0. The pattern is based on seasonality. You would need a rolling window to compute the average across the data points. Isolation Forest Algorithm One of the newest techniques to detect anomalies is called Isolation Forests. The algorithm is based on the fact that anomalies are data points that are few and different. Moreover this method is an algorithm with a low linear time complexity and a small memory requirement. On the other hand isolating normal observations require more conditions. The nearest set of data points are evaluated using a score which could be Eucledian distance or a similar measure dependent on the type of the data categorical or numerical. Anomaly Detection Credit Card Fraud Analysis Introduction Anomaly Detection Anomaly detection is a technique used to identify unusual patterns that do not conform to expected behavior called outliers. The Time and Amount features are not transformed data. Assumption Normal data points occur around a dense neighborhood and abnormalities are far away. It builds a good performing model with a small number of trees using small sub samples of fixed size regardless of the size of a data set. DataSet The dataset that is used for credit card fraud detection is derived from the following Kaggle URL https www. The first autoencoder might learn to encode easy features like corners the second to analyze the first layer s output and then encode less local features like the tip of a nose the third might encode a whole nose etc. They could be broadly classified into two algorithms K nearest neighbor k NN is a simple non parametric lazy learning technique used to classify data based on similarities in distance metrics such as Eucledian Manhattan Minkowski or Hamming distance. Then the score is calculated as the path length to isolate the observation. It creates k similar clusters of data points. The way that the algorithm constructs the separation is by first creating isolation trees or random decision trees. Therefore the threshold based on moving average may not always apply. 46 When comparing error precision recall for 3 models the Isolation Forest performed much better than the LOF as we can see that the detection of fraud cases is around 27 versus LOF detection rate of just 2 and SVM of 0 So overall Isolation Forest Method performed much better in determining the fraud cases which is around 30. Now let us take a sample of the dataset for out modelling and predictionThe above correlation matrix shows that none of the V1 to V28 PCA components have any correlation to each other however if we observe Class has some form positive and negative correlations with the V components but has no correlation with Time and Amount. It introduces the use of isolation as a more effective and efficient means to detect anomalies than the commonly used basic distance and density measures. The aim of an autoencoder is to learn a representation encoding for a set of data typically for the purpose of dimensionality reduction. How Isolation Forests WorkThe Isolation Forest algorithm isolates observations by randomly selecting a feature and then randomly selecting a split value between the maximum and minimum values of the selected feature. Collective anomalies A set of data instances collectively helps in detecting anomalies. Depending on the use case the output of an anomaly detector could be numeric scalar values for filtering on domain specific thresholds or textual labels such as binary multi labels. In this jupyter notebook we are going to take the credit card fraud detection as the case study for understanding this concept in detail. In this jupyter notebook we are going to take the credit card fraud detection as the case study for understanding this concept in detail using the following Anomaly Detection Techniques namelyIsolation Forest Anomaly Detection AlgorithmDensity Based Anomaly Detection Local Outlier Factor AlgorithmSupport Vector Machine Anomaly Detection AlgorithmCredit Card Fraud DetectionProblem Statement The Credit Card Fraud Detection Problem includes modeling past credit card transactions with the knowledge of the ones that turned out to be fraud. Density Based Anomaly DetectionDensity based anomaly detection is based on the k nearest neighbors algorithm. This forces the autoencoder to engage in dimensionality reduction for example by learning how to ignore noise. Relative density of data This is better known as local outlier factor LOF. Therefore autoencoders are unsupervised learning models. This model is then used to identify whether a new transaction is fraudulent or not. Anomaly detection is similar to but not entirely the same as noise removal and novelty detection. Now let us print the outlier fraction and no of Fraud and Valid Transaction cases Correlation Matrix Get all the columns from the dataframe Filter the columns to remove data we do not want Store the variable we are predicting Define a random state Print the shapes of X Y Define the outlier detection methods Fit the model Fit the data and tag outliers Reshape the prediction values to 0 for Valid transactions 1 for Fraud transactions Run Classification Metrics. An autoencoder learns to compress data from the input layer into a short code and then uncompress that code into something that closely matches the original data. This type of anomaly is common in time series data. There is no missing value in the dataset. This method is highly useful and is fundamentally different from all existing methods. Model PredictionNow it is time to start building the model. The simplest form of an autoencoder is a feedforward non recurrent neural network very similar to the many single layer perceptrons which makes a multilayer perceptron MLP having an input layer an output layer and one or more hidden layers connecting them but with the output layer having the same number of nodes as the input layer and with the purpose of reconstructing its own inputs instead of predicting the target value Y given inputs X. Typical machine learning methods tend to work better when the patterns they try to learn are balanced meaning the same amount of good and bad behaviors are present in the dataset. Support Vector Machine Based Anomaly DetectionA support vector machine is another effective technique for detecting anomalies. Business use case Spending 100 on food every day during the holiday season is normal but may be odd otherwise. until the final autoencoder encodes the whole image into a code that matches for example the concept of cat. 75 more accurate than LOF of 99. Local Outlier Factor LOF AlgorithmThe LOF algorithm is an unsupervised outlier detection method which computes the local density deviation of a given data point with respect to its neighbors. Therefore an anomaly score can be calculated as the number of conditions required to separate a given observation. Doesn t seem like the time of transaction really matters here as per above observation. ", "id": "naveengowda16/anomaly-detection-credit-card-fraud-analysis", "size": "12859", "language": "python", "html_url": "https://www.kaggle.com/code/naveengowda16/anomaly-detection-credit-card-fraud-analysis", "git_url": "https://www.kaggle.com/code/naveengowda16/anomaly-detection-credit-card-fraud-analysis", "script": "classification_report init_notebook_mode OneClassSVM sklearn.svm accuracy_score numpy LocalOutlierFactor seaborn plotly.plotly rcParams sklearn.neighbors matplotlib.pyplot plotly.graph_objs plotly.offline pandas IsolationForest iplot plotly.figure_factory pylab sklearn.metrics sklearn.ensemble ", "entities": "(('Novelty detection', 'instance'), 'concern') (('we', 'follows1'), 'be') (('boundary', 'normal behavior'), 'be') (('Then score', 'observation'), 'calculate') (('even it', 'flying cat'), 'attempt') (('only a few conditions', 'normal observations'), 'go') (('us', 'visual representation'), 'be') (('that', 'cat'), 'encode') (('data that', 'fact'), 'base') (('data outliers', 'Fraud 1 transactions'), 'let') (('Graphical representation', 'valid dataset'), 'appreciate') (('Support Vector Anomaly support vector Machine machine', 'effective anomalies'), 'be') (('however we', 'Time'), 'let') (('that', 'median mean mode'), 'be') (('Therefore anomaly score', 'given observation'), 'calculate') (('Anomaly detection', 'entirely noise removal detection'), 'be') (('k nearest NN', 'Manhattan such Eucledian Minkowski'), 'classify') (('You', 'data points'), 'need') (('Collective set', 'collectively anomalies'), 'anomaly') (('Y', 'target instead value'), 'be') (('frequently malicious adversaries', 'constantly themselves'), 'change') (('aim', 'dimensionality reduction'), 'be') (('which', 'data'), 'evaluate') (('com mlg data set', '284 807 observations'), 'ulb') (('same amount', 'dataset'), 'tend') (('Isolation Forests WorkThe Isolation Forest How algorithm', 'selected feature'), 'isolate') (('certain where technique', 't work'), 'allow') (('Therefore autoencoders', 'learning models'), 'unsupervise') (('that', 'mean'), 'let') (('This', 'seasonality'), 'involve') (('Model PredictionNow it', 'model'), 'be') (('detection unsupervised outlier which', 'neighbors'), 'Factor') (('aim', 'fraud incorrect classifications'), 'be') (('we', 'detail'), 'go') (('exactly it', 'time'), 'traverse') (('that', 'local centroids'), 'tend') (('K', 'widely used algorithm'), 'mean') (('Clustering', 'unsupervised learning'), 'be') (('errors Isolation 8411 Forest', '99'), 'have') (('that', 'potentially anomalies'), 'mark') (('type', 'series data'), 'be') (('We', 'computational expense'), 'improve') (('that', 'Kaggle URL https following www'), 'DataSet') (('isolating normal observations', 'more conditions'), 'require') (('architectures use', 'image recognition'), 'stack') (('training data', 'which'), 'associate') (('which', 'fraud much better cases'), '46') (('This', 'how noise'), 'force') (('Isolation Forest', '93 errors'), 'define') (('features', 'namely V28'), 'consist') (('that', 'objects'), 'consider') (('This', 'factor better local outlier LOF'), 'density') (('Business use case', 'holiday day season'), 'be') (('that', 'expected behavior'), 'introduction') (('that', 'neighbors'), 'consider') (('that', 'learned region'), 'learn') (('that', 'ones'), 'go') (('generally taking', '20'), 'be') (('It', 'commonly used basic distance measures'), 'introduce') (('third', 'whole nose'), 'learn') (('so analysis', 'Furthermore original features'), 'be') (('concept', 'distance metric'), 'base') (('method', 'highly fundamentally existing methods'), 'be') (('rolling moving it', 'term short fluctuations'), 'call') (('It', 'data points'), 'create') (('time', 'really here per observation'), 'seem') (('It', 'data set'), 'build') (('moving Mathematically n period simple average', 'pass also low filter'), 'define') (('output', 'textual such binary multi labels'), 'be') (('Moreover method', 'time low linear complexity'), 'be') (('Isolation Forest Algorithm One', 'anomalies'), 'call') (('that', 'operating environments'), 'have') (('that', 'cyber potential attack'), 'case') (('autoencoder', 'unsupervised manner'), 'use') (('Machine Learning Based ApproachesBelow', 'anomaly detection'), 'be') (('it', 'too far off rest'), 'categorize') (('Noise removal NR', 'otherwise meaningful signal'), 'be') (('that', 'closely original data'), 'learn') (('separation', 'isolation first trees'), 'way') (('detection', 'neighbors k nearest algorithm'), 'base') (('skewed set', 'fraudulent transactions'), 'justify') (('Assumption data Normal points', 'dense neighborhood'), 'occur') "}