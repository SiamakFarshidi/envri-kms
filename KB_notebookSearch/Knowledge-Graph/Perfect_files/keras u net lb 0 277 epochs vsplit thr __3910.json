{"name": "keras u net lb 0 277 epochs vsplit thr ", "full_name": " h1 Intro h1 Get the data h1 Create our Keras metric h1 Build and train our neural network h1 Make predictions h1 Encode and submit our results ", "stargazers_count": 0, "forks_count": 0, "description": "The model is at least able to fit to the training data Certainly a lot of room for improvement even here but a decent start. 04597 which is very common for image segmentation problems such as this. I ll just train for 10 epochs which takes around 10 minutes in the Kaggle kernel with the current parameters. I m by no means certain that this implementation is correct though Any assistance in verifying this would be most welcome Update This implementation is most definitely not correct due to the very large discrepancy between the results reported here and the LB results. com rakhlin fast run length encoding python excellent implementation of run length encoding. I ve stolen this https www. I downsample both the training and test images to keep things light and manageable but we need to keep a record of the original sizes of the test images to upsample our predicted masks and create correct run length encodings later on. It also seems to just increase over time no matter what when you train. I ll leave it to you to improve the model architecture and parameters Make predictionsLet s make predictions both on the test set the val set and the train set as a sanity check. Seems good Create our Keras metricNow we try to define the mean average precision at different intersection over union IoU thresholds metric in Keras. The architecture used is the so called U Net https arxiv. com jocicmarko ultrasound nerve segmentation from the Kaggle Ultrasound Nerve Segmentation competition. How about the validation data Not too shabby Definitely needs some more training and tweaking. and then finally create our submission This scored 0. de people ronneber u net u net architecture. All right looks good Loss seems to be a bit erratic though. Let s iterate over the test IDs and generate run length encodings for each seperate mask identified by skimage. I recommend using checkpointing and early stopping when training your model. Remember to load the best saved model if you ve used early stopping and checkpointing. png Next we fit the model on the training data using a validation split of 0. TensorFlow has a mean IoU metric but it doesn t have any native support for the mean over multiple thresholds so I tried to implement this. IntroHello This rather quick and dirty kernel shows how to get started on segmenting nuclei using a neural network in Keras. I believe they also have a tendency to work quite well even on small datasets. pdf and very similar to this repo https github. Build and train our neural networkNext we build our U Net model loosely based on U Net Convolutional Networks for Biomedical Image Segmentation https arxiv. I won t do it here to make things a bit more reproducible although it s very likely that your results will be different anyway. com rakhlin fast run length encoding python Create submission DataFrame. 277 LB Set some parameters original seed 42 Get train and test IDs Get and resize train images and masks Get and resize test images Check if training data looks all right Define IoU metric Build U Net model Fit model setup fitting Predict on train val and test Threshold predictions Create list of upsampled test masks Perform a sanity check on some random training samples Perform a sanity check on some random validation samples Run length encoding stolen from https www. Update Added early stopping and checkpointing and increased to 30 epochs. Have fun LB score history Version 7 0. There are definitely better ways to handle this but it works fine for now Let s see if things look all right by drawing some random images and their associated masks. Encode and submit our resultsNow it s time to submit our results. We use a small batch size because we have so little data. Let s get started importing everything we need Get the dataLet s first import all the images and associated masks. 277 You should easily be able to stabilize and improve the results just by changing a few parameters tweaking the architecture a little bit and training longer with early stopping. That was with version 2 of this notebook be aware that the results from the neural network are extremely erratic and vary greatly from run to run version 3 is significantly worse for example. ", "id": "del=cca345899d608f0a/keras-u-net-lb-0-277-epochs-vsplit-thr", "size": "3910", "language": "python", "html_url": "https://www.kaggle.com/code/del=cca345899d608f0a/keras-u-net-lb-0-277-epochs-vsplit-thr", "git_url": "https://www.kaggle.com/code/del=cca345899d608f0a/keras-u-net-lb-0-277-epochs-vsplit-thr", "script": "prob_to_rles skimage.transform keras.layers keras.models imread_collection keras mean_iou Lambda numpy MaxPooling2D rle_encoding backend as K chain keras.callbacks imread concatenate_images tqdm keras.layers.convolutional tensorflow skimage.io matplotlib.pyplot ModelCheckpoint backend resize pandas EarlyStopping skimage.morphology load_model Conv2D Model Conv2DTranspose concatenate Input keras.layers.core imshow label keras.layers.pooling keras.layers.merge itertools ", "entities": "(('train', 'sanity check'), 'leave') (('it', 'results'), 'Encode') (('which', 'such this'), '04597') (('they', 'quite well even small datasets'), 'believe') (('s', 'skimage'), 'let') (('when you', 'matter what'), 'seem') (('dataLet', 'first images'), 'let') (('I', 'early when model'), 'recommend') (('rather quick kernel', 'Keras'), 'show') (('we', 'so little data'), 'use') (('so I', 'this'), 'have') (('You', 'little bit longer early stopping'), '277') (('too shabby', 'Definitely more training'), 'about') (('This', '0'), 'create') (('Next we', '0'), 'png') (('most implementation', 'results'), 'm') (('Threshold predictions', 'https www'), 'Set') (('model', 'improvement'), 'be') (('results', '3 significantly example'), 'be') (('de people', 'u net u net architecture'), 'ronneber') (('Update', '30 epochs'), 'add') (('com rakhlin', 'length run encoding'), 'run') (('very results', 'it'), 'win') (('you', 'early stopping'), 'remember') (('we', 'length correct run encodings'), 'downsample') (('we', 'metric Keras'), 'seem') (('which', 'current parameters'), 'train') (('we', 'Biomedical Image Segmentation https arxiv'), 'build') (('things', 'all random images'), 'be') (('com rakhlin', 'length encoding python Create submission fast DataFrame'), 'run') "}