{"name": "overlapping objects separation method ", "full_name": " ", "stargazers_count": 0, "forks_count": 0, "description": "Disclaimer This is not a AI There are some overlapping nuclei let s try to separate them. separation line is valid if parallel line with offset 2 is shorter than offset 5 and if offset 5 is wider than separation line. It s not perfect but it can help you with instance separation in some cases of overlapped round objects. Bunch of IF s and simple algebra Let s try it out Maybe we can separate grapes with it Looks good. Kind regards This Python 3 environment comes with many helpful analytics libraries installed It is defined by the kaggle python docker image https github. 0 line is bigger than 5. Now let s try on whole image Hold my beer Amazing I would like to thank to all brains that contributes to this challenge. round objects doesn t have inset corners if corners are present you can asume that this is overlapping scenario. find all combinations of corners for separation candidate some optimizations like crop boundaries are used just for speed up. With solution to this challenge we ll have a better chance to test and find cures faster for ill childrens. For example running this by clicking run or pressing Shift Enter will list the files in the input directory Any results you write to the current directory are saved as output. This is checked in both directions. 0 line is bigger than split line and 2. com kaggle docker python For example here s several helpful packages to load in linear algebra data processing CSV file I O e. 0 line make a copy crop image to object bound this helps speed up the processing define minimal convex area calculate convex hull of object invert convex hull get boundaries will help speed up processing split inset border objects calculate region props get candidates limit to min convex area size this is not used this is not used convert image to points will speed up processing get potential pairs object A object B x y border points for objects numpy optimized way to find nearest points between two objects find minimal distance pixel convert minimal pixel to x y grid convert to absolute position separation line check if line is valid first check check if split is valid second check reconstruct image with cropped area cropping is used only to display image bigger works the same without cropping as separation method internally crops object separate objects copy to reconstructed mask. we dont need and dont like warnings this is dangerous world we are living in combine masks as one input validation get center point extend line to image bound is vertical line not vertical calculate slope use skimage line for better slope calculation calculate b y mx b out of bound handling get min max Y recalculate X out of bound handling get min max Y recalculate X check infinity get extended line get index of center point trim line to mask there are some situations where issue occurs line outside image but I haven t had the time to add validation get left and right part of the line this is not actually direction of line but indexation of array trim to mask out of image bounds better way will be to pad image with 1px False border but this is faster invalid line invalid line invalid line return line coordinates parallel line helper function calculate line distance get top parallel line extend line to bound get line length get bottom parallel line extend line to bound if top and bottom line are longer than split line extend line to bound get line length get bottom parallel line extend line to bound if top and bottom line are longer than split line if 5. My solution is classic minimal UNet with this post processing currently at 0. extract inset corners by substract convex hull from object. Overlapping objects separation method Hi Kagglers I wan t to share my solution for separation of overlapping objects by using intuition and simple linear algebra I have construted this method. read_csv Input data files are available in the. ", "id": "bostjanm/overlapping-objects-separation-method", "size": "1362", "language": "python", "html_url": "https://www.kaggle.com/code/bostjanm/overlapping-objects-separation-method", "git_url": "https://www.kaggle.com/code/bostjanm/overlapping-objects-separation-method", "script": "combinations numpy convex_hull_image subprocess regionprops separation getCropMaskDimensions extendLineToMask skimage.segmentation skimage.io label2rgb matplotlib.pyplot splitValidation pandas skimage.morphology parallelLine find_boundaries skimage.color label imshow check_output skimage.measure itertools ", "entities": "(('It', 'python docker image https kaggle github'), 'regard') (('it', 'overlapped round objects'), 's') (('we', 'faster ill childrens'), 'have') (('top line', 'split line'), 'need') (('read_csv Input data files', 'the'), 'be') (('solution', 'currently 0'), 'be') (('separate objects', 'mask'), 'make') (('this', 'inset corners'), 'have') (('offset', 'separation line'), 'be') (('that', 'challenge'), 'let') (('it', 'grapes'), 's') (('optimizations', 'just speed'), 'find') (('you', 'output'), 'list') (('linear simple I', 'method'), 'object') (('overlapping s', 'them'), 'be') "}