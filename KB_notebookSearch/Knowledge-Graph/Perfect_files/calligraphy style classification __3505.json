{"name": "calligraphy style classification ", "full_name": " h3 1 Install and import the required libraries h3 2 Load and transform the the dataset h3 3 Explore the dataset h4 3 1 How many classes are in the dataset h4 3 2 How many examples are in each class h4 3 3 Visualize 3 examples h3 4 Split the dataset h3 5 Load data in batches h3 6 Modelling h4 6 1 Test a simple model h4 6 2 Define helper functions for training and validation h4 6 3 Chain layers into a single network architecture h4 6 4 Build helper functions to move model and data to a CUDA device h3 7 Training h4 7 1 Define functions to fit and evaluate the model h4 7 2 Move model to device h4 7 3 Evaluate the model by its initial parameters h4 7 4 Define and log hyperparameters h4 7 5 Fit model and log metrics h4 7 6 Plot accuracy and loss history h3 8 Testing h4 8 1 Transform test data h4 8 2 Predict and compare labels 5 examples h4 8 4 Look for overall loss and accuracy on test data h4 8 5 Save the model once it s done h3 10 Conclusion and final remarks h3 11 References ", "stargazers_count": 0, "forks_count": 0, "description": "Compared to other classification models CNN performs well without feature design 4. 3 Evaluate the model by its initial parameters 7. png Chinese calligraphy is a very unique visual art and an important manifestation of Chinese ancient culture which is popular with many people in the world 3. 4 Build helper functions to move model and data to a CUDA device 7 Training 7. 3 Auto Encoder Guided GAN for Chinese Calligraphy Synthesis by Pengyuan Lyu Xiang Bai Cong Yao Zhen Zhu Tengteng Huang Wenyu Liu1 in 2017 14th IAPR International Conference on Document Analysis and Recognition ICDAR https doi. Of course a few things could be done to improve the model like applying augmentation schemes on the training data. Still the style of each calligraphy is unique and anyone looking at it can tell its caligrapher. No batch normalization was employed since this overfitted the model. 2 Calligraphy Style Classification by Kauvin Lucas in Jovian https jovian. 1 Transform test data 8. 3 Visualize 3 examples 4 Split the dataset 5 Load data in batches 6 Modelling 6. 2 Predict and compare labels 5 examples 8. 2 Move model to device 7. 1 Define functions to fit and evaluate the model 7. 4 Look for overall loss and accuracy on test data 8. 5 Save the model once it s done 10 Conclusion and final remarksWe ve defined our model with 9 layers and after trying with different hyperparamenters we arrived at a model that performed quite well and generated an accuracy of around 95 on the test data. edu proj2016 poster ChenSuLi Machine 20Learning 20for 20Different 20Calligraphy 20Style 20Recognition poster. 1 Test a simple modelIf our simple model has been called without problems we ll proceed to define our main CNN model 6. 3 Chain layers into a single network architecture 6. 1 How many classes are in the dataset There are a total of 20 classes in the dataset 3. 181 4 Recognizing Chinese Calligraphy Styles A Cage Fight by Chen Yu Sheng Li Haihong Su Guangjun in Stanford University http cs229. com kauvinlucas calligraphy style classification. In this notebook we ll build and test a simple Convolutional Neural Network CNN model with 9 layers without batch normalization to identify the author s initials of each available font. 6 Plot accuracy and loss history 8 Testing 8. ai kauvinlucas calligraphy style classification. 1 Install and import the required libraries 2 Load and transform the the dataset 3 Explore the dataset 3. 5 Fit model and log metrics 7. As with any other artwork Chinese calligraphy can take several years to master and have a high economic value for the holders. This notebook was intented to explore simple CNN models to predict the caligraphers initials behind each calligraphy font. 4 Define and log hyperparameters 7. 11 References 1 Calligraphy Style Classification by Kauvin Lucas in Kaggle https www. 2 How many examples are in each class All of the classes contain a total of 82022 images 3. 2 Define helper functions for training and validationWe will use the Cross Entropy loss function for calculating loss in the training and validation steps 6. Although it s a form of art there are traditional strict rules that must be followed to make a legitimate calligraphy. ", "id": "kauvinlucas/calligraphy-style-classification", "size": "3505", "language": "python", "html_url": "https://www.kaggle.com/code/kauvinlucas/calligraphy-style-classification", "git_url": "https://www.kaggle.com/code/kauvinlucas/calligraphy-style-classification", "script": "torch.nn.functional torchvision.transforms torchvision.datasets.utils DataLoader plot_accuracies validation_step to_device Cifar10CnnModel(ImageClassificationBase) ImageClassificationBase(nn.Module) evaluate ToTensor __iter__ validation_epoch_end get_default_device training_step torch.nn epoch_end predict_image accuracy make_grid matplotlib.pyplot plot_losses DeviceDataLoader() ImageFolder forward torch.utils.data.dataloader download_url fit torch.utils.data __len__ show_batch __init__ random_split show_example torchvision.datasets torchvision.utils ", "entities": "(('that', 'test data'), 'save') (('anyone', 'caligrapher'), 'be') (('How many classes', 'dataset'), 'be') (('All', 'images'), 'contain') (('Recognizing Chinese Calligraphy Styles A Cage 4 Fight', 'Stanford University'), 'http') (('which', 'world'), 'be') (('Of course a few things', 'training data'), 'do') (('traditional strict that', 'legitimate calligraphy'), 'be') (('CNN', 'feature well design'), 'perform') (('we', 'CNN main model'), 'test') (('this', 'model'), 'employ') (('2 Predict', '5 examples'), 'label') (('we', 'available font'), 'build') (('Chinese calligraphy', 'holders'), 'take') (('caligraphers', 'calligraphy font'), 'intente') (('Define helper 2 functions', 'training steps'), 'use') "}