{"name": "alternative metrics kernel ", "full_name": " ", "stargazers_count": 0, "forks_count": 0, "description": "Please note this is not the official scoring implementation but should work in the same manner. In the process I noted that the evaluation method stipulates that the IOU score is based on the prediction masks which is relevant where there is a mismatch between prediction and ground truth. This notebook is a reworked version of William Cukierski s kernel here https www. It will also help if I later code in C with binary maps. I wanted to use matrix multiplication for intersection and matrix maximum for union as this is easier to get my head around that the histogram approach. Specifically if two true nuclei are fused together as one in the prediction or vice versa. So I think this code should work ok in the general case. It gives the same results. Hopefully this will help some of you. This matches the table in Willam Cukierski s kernel. I also managed to simplify some of the formulae. com wcukierski example metric implementation. All comments welcomeThis is an example notebook to demonstrate how the IoU metric works for a single image. ", "id": "glenslade/alternative-metrics-kernel", "size": "1069", "language": "python", "html_url": "https://www.kaggle.com/code/glenslade/alternative-metrics-kernel", "git_url": "https://www.kaggle.com/code/glenslade/alternative-metrics-kernel", "script": "matplotlib.pyplot numpy ", "entities": "(('this', 'same manner'), 'note') (('welcomeThis', 'example how metric single image'), 'be') (('I', 'formulae'), 'manage') (('this', 'that'), 'want') (('Specifically two true nuclei', 'prediction'), 'fuse') (('notebook', 'William reworked kernel'), 'be') (('code', 'ok general case'), 'think') (('also I', 'binary maps'), 'help') (('This', 'Willam kernel'), 'match') (('which', 'where prediction truth'), 'note') "}