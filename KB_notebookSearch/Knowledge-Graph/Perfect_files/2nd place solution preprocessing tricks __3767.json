{"name": "2nd place solution preprocessing tricks ", "full_name": " h1 Loading data and labeling batches h1 Calculating mean signal values for each number of opened channels h1 Extracting and analysing noise h1 Healing batch 7 h1 Creating new data Synthesis h2 Simulating unknown test group h2 More group 3 h2 But what happened with the noise h1 Augmented dataset h1 Inverting synthesis Sealing opened channels Channel reduction h1 Conclusion ", "stargazers_count": 0, "forks_count": 0, "description": "More group 3By the analogous reasoning group 3 is a superposition of two segments of group 4. Note it is not my full solution just a preprocessing. Sealing opened channels. I found it in the last two days of the competition. Indeed now the distributions look very similar but classes 3 and 4 are still not represented. Simulating unknown test groupLet us try to make a signal which is close in its properties to unknown signal group 5 from the test data. It is the most complicated data in the competition so it is extremely important to augment it properly. Channel reductionAnd the last spell. I am not a native English speaker so if you found a mistake please let me know and I will correct it immediately. Predicted mean values of channels 6 10 will be of use in the section dedicated to data synthesis. The post with all the details is here https www. Noise is the only natural part of the data so it should be treated with caution. In one week I will disclose my repo on GitHub with full code so everybody can reproduce the results. The signal from many channels acting together is a superposition of such bricks. There is much more data than it seems at first glance. But what happened with the noise I want to make sure that Fourier image of the noise has not changed after synthesis. The data has been successfully produced. Augmented datasetThe output files of this kernel are two. But they could definitely help researchers who work with synthetic data as it reveals the way of how such kind of data can be leaked. But we need to consider the nature of the noise when doing any data augmentation. com c liverpool ion switching discussion 153991 862688. All one need to do is just sum up the labels from different segments and do the same trick with the noise. It allowed me to diversify the initial dataset without using any external data. Indeed the nature of the noise rest untouched when using superposition synthesis. Healing batch 7With extracted noise corrupted noise from 7th batch can be easily replaced by healthy noise from any of group 2 segments. Extracting and analysing noiseWith precalculated means we are able to extract noise from every segment of data. It corresponds to a case when we have imaginary fictive channels acting in the opposite direction. I have no idea if some of these methods are of use in electrophysiology. This signal seems to be a superposition of several low open probability channels group 0. It is a powerful augmentation which can drastically diversify dataset what is essential for NN based models I used in the competition. It is better then nothing though. After studing the question of code sharing it is not recommended to share in the last week I decided not to share. There is an operation inverse to composition. csv with augmented dataset. Inverting synthesis. It is a brick of ion switching data. SynthesisEvery single ion channel can be desribed as hidden Markov process. Having understood the property of superposition we can produce more data using only existing training dataset. Let us create more group 3. I decided not to remove 50 Hz component as it didn t affect NN based models CV score. In this way synthetic data is similar to the original data. Loading data and labeling batches Calculating mean signal values for each number of opened channelsHere i don t use corrupted data in train batch 7. In this kernel I explain my preprocessing strategy for this competition. Let us analyse it with Fourier transform. Noise has a 50 Hz component which takes origin probably from electronic devices used for measurements in the laboratory. ConclusionI hope you enjoyed this kernel. ", "id": "stdereka/2nd-place-solution-preprocessing-tricks", "size": "3767", "language": "python", "html_url": "https://www.kaggle.com/code/stdereka/2nd-place-solution-preprocessing-tricks", "git_url": "https://www.kaggle.com/code/stdereka/2nd-place-solution-preprocessing-tricks", "script": "seaborn reduce_channels sklearn.linear_model compose label_batches_and_groups rescale_noise distplot matplotlib.pyplot LinearRegression combinatorial_synthesis pandas itertools append_dataset combinations numpy ", "entities": "(('it', 'extremely it'), 'be') (('reasoning analogous group', 'group'), '3by') (('Indeed nature', 'superposition when synthesis'), 'untouched') (('how such kind', 'data'), 'help') (('signal', 'together such bricks'), 'be') (('post', 'details'), 'be') (('us', 'Fourier transform'), 'let') (('we', 'training only existing dataset'), 'produce') (('everybody', 'results'), 'disclose') (('which', 'test 5 data'), 'try') (('SynthesisEvery ion single channel', 'Markov hidden process'), 'desribe') (('I', 'competition'), 'be') (('I', 'last week'), 'recommend') (('ConclusionI you', 'kernel'), 'hope') (('Fourier image', 'synthesis'), 'happen') (('when we', 'opposite direction'), 'correspond') (('6 10', 'data synthesis'), 'be') (('Indeed now distributions', 'very 3'), 'look') (('I', 'it'), 'be') (('one', 'noise'), 'sum') (('signal', 'probability channels several low open group'), 'seem') (('corrupted', 'group 2 segments'), 'replace') (('synthetic data', 'original data'), 'be') (('some', 'electrophysiology'), 'have') (('i', 'train batch'), 'load') (('we', 'data'), 'extract') (('I', 'competition'), 'explain') (('datasetThe output Augmented files', 'kernel'), 'be') (('we', 'data when augmentation'), 'need') (('me', 'external data'), 'allow') (('I', 'competition'), 'find') (('which', 'laboratory'), 'have') (('it', 'caution'), 'be') (('it', 'didn models CV NN based score'), 'decide') (('much more it', 'first glance'), 'be') "}