{"name": "complete productionized fastai model ", "full_name": " h1 Histopathological Cancer Detection h2 RoadMap h2 Check GPU h1 EDA h3 Analyze cancer and non cancer cell h2 Model Building h3 Data Augmentation h3 Create DataBunch object h3 Data Preprocesing Normalization h3 Model Training h4 Create Learning Classifier h4 Classifier Training h3 Transfer learning h2 Model Improvement h2 Model Validation h4 AUC SCORE h4 ACCURACY h4 ROC CURVE h2 Predictions h4 Prediction using saved model on training and validation images h4 Predict on train data h4 Predict on validation data h4 Prediction using saved model on testing single image h4 Prediction using saved model on testing data for submission purpose h2 Submission h3 Feel free to share doubts feedbacks or concerns Also fuel some motivation by upvoting if notebook has enhanced your learning ", "stargazers_count": 0, "forks_count": 0, "description": "unfreeze to unfreeze the model and train it again. Model Improvement Generally when you call fit_one_cycle it only trains the last or last few layers. Model Validation Plot top losses images Confusion Matrix Validate across validation set by auc_score and accuracy Plot roc_curve AUC SCORE ACCURACY ROC CURVE Predictions Export the final learner object for productionizing Prediction using above saved model on Train and validation images Uploaded single image Test images Prediction using saved model on training and validation images Predict on train data Predict on validation data Prediction using saved model on testing single image Prediction using saved model on testing data for submission purpose Submission Feel free to share doubts feedbacks or concerns. Also fuel some motivation by upvoting if notebook has enhanced your learning. Happy Learning Programming framework behind the scenes of NVIDIA GPU is CUDA Check if gpu is enabled Proportion of classes dir is your directory path dir is your directory path See the classes and labels fastai comes with various models create learner object by passing data bunch specifying model architecture and metrics to use to evaluate training stats makes sure the gpu is used See how the learning rate and momentum varies with the training and losses save weights in a file Unfreeze the encoder resnet slice suggests is train the initial layers at start value specified and last layer at the end value specified and interpolate for the rest of the layers create interpreter object Plot the biggest losses of the model To view the list of classes most misclassified as a list Sorted descending list of largest non diagonal entries of confusion matrix presented as actual predicted number of occurrences since sequence of classes in data is as 0 1. To improve this better you need to call learn. Histopathological Cancer Detection RoadMap Import Libraries Check GPU EDA Model Building Model Improvement Model Validation Submission Check GPU EDA Analyze cancer and non cancer cell Model Building Model Training requires the objects of DataBunch and Learner Data Augmentation Create DataBunch object Data Preprocesing Normalization Model Training Model Training requires DataBunch object and learner Create Learning Classifier Classifier Training Transfer learning Allows you to train nets with 1 100th less time using 1 100 less data. ", "id": "shachi01/complete-productionized-fastai-model", "size": "1636", "language": "python", "html_url": "https://www.kaggle.com/code/shachi01/complete-productionized-fastai-model", "git_url": "https://www.kaggle.com/code/shachi01/complete-productionized-fastai-model", "script": "seaborn matplotlib.patches auc auc_score fastai.vision matplotlib.pyplot glob os roc_auc_score pandas sklearn.metrics accuracy_score roc_curve fastai.metrics fastai numpy ", "entities": "(('Submission', 'doubts feedbacks'), 'image') (('notebook', 'learning'), 'fuel') (('learner Create Learning Classifier Classifier Training you', '1 less time 100 less data'), 'Libraries') (('sequence', '0'), 'be') (('better you', 'this'), 'need') (('it', 'only last few layers'), 'Improvement') "}