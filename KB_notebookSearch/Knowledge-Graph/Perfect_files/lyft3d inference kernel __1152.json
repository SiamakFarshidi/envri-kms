{"name": "lyft3d inference kernel ", "full_name": " h2 Updates h1 Install the Lyft SDK h1 Lyft SDK requires creating a link to input folders h1 Creating a new test class h3 If you try to use original LyftDataset Class you will get missing table error h1 Unzip the Lyft3D BEV test data h3 I recommend creating it once and reusing it Saves computation h1 Find the mean height of all categories h1 Unet Model h1 Loading Guido s trained Unet model h1 Test Set Predictions h1 Transform predicted boxes back into world space h1 Creating Submission File ", "stargazers_count": 0, "forks_count": 0, "description": "Transpose the input volume CXY to XYC order which is what matplotlib requires. com gzuidhof reference model. Loading Guido s trained Unet model Test Set Predictions Transform predicted boxes back into world space Creating Submission File Disable multiprocesing for numpy opencv. del model Note We may be able to train for longer and expect better results the reason this number is low is to keep the runtime short. Initialize LyftDatasetExplorer class Make reverse indexes for common lookups. 3 target_as_rgb This implementation was copied from https github. Note We scaled our targets to be 0. arctan2 pred_box3ds i. Explicitly assign tables to help the IDE determine valid class members. In this kernel i show how to perform inference on test set using the trained model. Reverse index samples with sample_data and annotations. 3 N 4 N 4 3 box_height 1. com meaninglesslives lyft3d test dataset. To get the center of the box in 3D we ll have to add half the height to it. Please check out Guido s excellent kernel here https www. You can find the BEV of the test set here https www. 75m for all categories Unet ModelWe train a U net fully convolutional neural network we create a network that is less deep and with only half the amount of filters compared to the original U net paper implementation. N 1 H W N 2 H W Get probabilities for non background if ii 0 visualize_predictions X prediction apply_softmax False Visualize the boxes in the first sample Visualize their probabilities Note X and Y are flipped This could use some refactoring. Decorate adds short cut sample_data with sensor information. Optional for multi GPU training and inference Only select the first n images We weigh the loss for the 0 class lower to account for some of the big class imbalance. Let s take the center pixel value as the confidence value Let s remove candidates with very low probability We perform an opening morphological operation to filter tiny detections Note that this may be problematic for classes that are inherently small e. Find the mean height of all categoriesWe can use the mean height instead of blindly using 1. We already multiprocess ourselves this would mean every subprocess produces even more threads which would lead to a lot of context switching slowing things down a lot. N 4 2 N 4 2 N 4 2 2 N 4 Add Z dimension 2 N 4 3 N 4 We don t know at where the boxes are in the scene on the z axis up down let s assume all of them are at the same height as the ego vehicle. predictions np. Store the mapping from token to table index for each table. 8 the actual size we need to adjust for that Determine the rotation of the box XYZW WXYZ order of elements yaw np. 75 Note Each of these boxes describes the ground corners of a 3D box. Bring box to car space We only care about the bottom corners Drop z coord Some hyperparameters we ll need to define for the system We scale down each box so they are more separated when projected into our coarse voxel space. We quantize to uint8 here to conserve memory. zeros len test_loader 1 len classes 336 336 dtype np. Width and height is arbitrary we don t know what way the vehicles are pointing from our prediction segmentation It doesn t matter for evaluation so no need to worry about that here. rotation 2 pred_box3ds i. uint8 Arbitrary threshold in our system to create a binary image to fit boxes around. We do this to keep training and inference time low. We re allocating 20GB of memory otherwise. Updates Corrected yaw calculation Used category height information Install the Lyft SDK Lyft SDK requires creating a link to input folders Creating a new test class If you try to use original LyftDataset Class you will get missing table error Unzip the Lyft3D BEV test data I recommend creating it once and reusing it. com jvanvugt pytorch unet it is MIT licensed. ", "id": "meaninglesslives/lyft3d-inference-kernel", "size": "1152", "language": "python", "html_url": "https://www.kaggle.com/code/meaninglesslives/lyft3d-inference-kernel", "git_url": "https://www.kaggle.com/code/meaninglesslives/lyft3d-inference-kernel", "script": "torch.nn.functional recall_precision UNetUpBlock(nn.Module) Box pathlib visualize_predictions scipy.spatial.transform calc_detection_box lyft_dataset_sdk.eval.detection.mAP_evaluation LyftDatasetExplorer __make_reverse_index__ functools numpy lyft_dataset_sdk.lyftdataset Image draw_boxes center_crop normalize_voxel_intensities Path LyftTestDataset(LyftDataset) create_transformation_matrix_to_voxel_space car_to_voxel_coords LyftDataset Quaternion tqdm_notebook get_unet_model torch.nn move_boxes_to_car_space Pool tqdm lyft_dataset_sdk.utils.map_mask lyft_dataset_sdk.utils.geometry_utils transform_points LidarPointCloud visualize_lidar_of_sample matplotlib.pyplot lyft_dataset_sdk.utils.data_classes MapMask forward PIL pandas transform_matrix Box3D datetime partial open_preds multiprocessing UNet(nn.Module) __len__ Rotation as R Rotation __init__ scale_boxes view_points create_voxel_pointcloud __getitem__ BEVImageDataset(torch.utils.data.Dataset) UNetConvBlock(nn.Module) ", "entities": "(('Note This', 'refactoring'), 'n') (('matplotlib', 'what'), 'transpose') (('It', 'so that'), 'be') (('We', 'here memory'), 'quantize') (('we', 'it'), 'have') (('We', 'memory'), 'allocate') (('which', 'lot'), 'multiprocess') (('i', 'trained model'), 'show') (('mean height', 'instead blindly 1'), 'find') (('I', 'once it'), 'correct') (('Initialize LyftDatasetExplorer class', 'common lookups'), 'make') (('all', 'ego vehicle'), 'n') (('that', 'paper original U net implementation'), 'train') (('they', 'voxel more when coarse space'), 'bring') (('3 implementation', 'https github'), 'target_as_rgb') (('Each', '3D box'), 'note') (('rotation', 'elements yaw np'), 'size') (('We', 'this'), 'do') (('assign Explicitly IDE', 'class valid members'), 'table') (('zeros len test_loader 1 len', 'dtype 336 336 np'), 'class') (('Loading Unet model Test Set Predictions trained Transform', 'numpy opencv'), 'predict') (('You', 'test'), 'find') (('that', 'classes'), 'let') (('number', 'runtime'), 'model') (('Decorate', 'sensor information'), 'add') (('We', 'class big imbalance'), 'select') "}