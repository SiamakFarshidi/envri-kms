{"name": "gradcam extracting masks from classifier ", "full_name": " h1 Intro h1 Plan h1 Libraries h1 Preparing data h2 One hot encoding classes h2 Stratified split into train val h2 Data preprocessing h3 Validation images h3 Masks h1 Grad CAM routines h1 Precision to threshold mapping per class h1 Vizually comparing GradCAM s with masks h1 Estimating performance h1 Predicting test masks h1 Conclusion h1 Credits ", "stargazers_count": 0, "forks_count": 0, "description": "com eclique keras gradcam blob master gradcam_vgg. dictionary for fast access to ohe vectors sorting present classes in lexicographical order just to be sure helper functions credits https www. Credits Credits Libraries Preparing data One hot encoding classes Stratified split into train valThe same split was used to train the classifier. I try to unify thresholding while preserving class specific characteristics by thresholding on precision. I d use explainability technique Gradient weighted Class Activation Mapping http gradcam. Preparing data Preparing data One hot encoding classes One hot encoding classes Stratified split into train val Stratified split into train val Data preprocessing Data preprocessing Validation images Validation images Masks Masks 3. I d use the classifier trained in this notebook https www. Credits Grad CAM function was taken from here https github. Grad CAM routines Grad CAM routines 4. Data preprocessing Validation imagesReading val images resizing and storing in memory to speed up experiments. Vizually comparing GradCAM s with masksI ve prepared codes to experiment with different binarization thresholds for different precisions. It can be considered the most simple baseline for weakly supervised segmentation based on image level labels. Precision to threshold mapping per class Precision to threshold mapping per class 5. Vizually comparing GradCAM s with masks 6. Conclusion Conclusion 9. com artgor segmentation in pytorch using convenient tools scriptVersionId 20202006 to perform elementwise binarization on all images at once consice even though unnecessary passing through all the values credits https www. Yet for illustration purposes let s produce no masks for precisions under 0. Predicting test masks Predicting test masks 8. ipynb and was slightly reorganized mask routines were taken from Andrew s notebook https www. py for batch gradcam Process CAMs for a given class probability finds corresponding precision credits https www. Vizually comparing GradCAM s with masks. com samusram cloud classifier for post processing. com artgor segmentation in pytorch using convenient tools scriptVersionId 20202006. org to extract masks from the classifier. As we ve found out here https www. com artgor segmentation in pytorch using convenient tools scriptVersionId 20202006 gradcam functions source inspiration https github. com eclique keras gradcam blob master grad_cam. MasksAnalogously storing in memory validation masks. Estimating performance Estimating performance 7. 85 and otherwise I use binarization threshold of 0. Grad CAM routines Precision to threshold mapping per classUsing validation data I map confidence to val precision. Estimating performance Predicting test masks ConclusionIt s interesing to experiment with explainability techniques and it s cool to see that a classifier itself has some localization capabilities. IntroIn this notebook I d like to check what we can get directly from a classifier. 2 if precision is under 0. Libraries Libraries 2. com samusram cloud classifier for post processing some classes are harder than others. ", "id": "samusram/gradcam-extracting-masks-from-classifier", "size": "2652", "language": "python", "html_url": "https://www.kaggle.com/code/samusram/gradcam-extracting-masks-from-classifier", "git_url": "https://www.kaggle.com/code/samusram/gradcam-extracting-masks-from-classifier", "script": "tensorflow.python.framework numpy.random mask2rle train_test_split deepcopy on_epoch_start IPython.display seed precision_recall_curve tensorflow.keras.models Image numpy tqdm_notebook as tqdm DataGenenerator(Sequence) get_tabular_precisions generate_gradcam_masks visualize_img_gradcam_mask Sequence backend as K tqdm_notebook dice remove_small_mask_components make_mask tqdm estimate_dice auc tensorflow tensorflow.keras.utils matplotlib.pyplot copy backend set_random_seed sklearn.model_selection pandas get_labels load_model ops tensorflow.keras rle_decode __len__ get_probability_for_precision_threshold __init__ sklearn.metrics __getitem__ grad_cam_batch ", "entities": "(('encoding One hot classes', 'classifier'), 'library') (('Credits Grad CAM function', 'https github'), 'take') (('mask slightly reorganized routines', 'notebook https www'), 'take') (('com', 'post processing'), 'samusram') (('we', 'directly classifier'), 'IntroIn') (('otherwise I', '0'), '85') (('I d', 'notebook https www'), 'use') (('It', 'image level labels'), 'consider') (('s', '0'), 'let') (('py', 'precision credits https corresponding www'), 'find') (('classifier', 'localization capabilities'), 'interese') (('com artgor segmentation', 'https www'), 'scriptVersionId') (('helper just functions', 'https www'), 'dictionary') (('I', 'precision'), 'try') (('I', 'val precision'), 'routine') (('Validation', 'Masks Masks'), 'class') (('samusram', 'others'), 'be') "}