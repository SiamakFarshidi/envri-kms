{"name": "playing with the images of the protein atlas ", "full_name": " h1 Playing with the images of the Protein Altas h2 Introduction h2 Plotting the image with the histogram h2 Cutting h3 Starting with simple threasholds h3 Using skimage filters thresholds h2 Converting grayscale into a bitmap boolean array packet in 64bit words h2 Adding noise to image h2 Using scipy ndimage to remove artifacts h2 Using sklearn to do spectral clustering h2 Using scipy ndimage to do segmentation h2 Doing granulometry with scipy ndimage h2 Selecting the contour using skimage h2 Doing blob detection with skimage h2 Canny edge detector with skimage feature h2 Color visualization of the Protein Atlas images h3 A first approach for creating an RGBA Red Green Blue and Alpha h3 Using numpy array to convert 4 grayscale imagens into 4 red green blue yellow images h2 Using PIL Image to convert the 4 grayscale images into 1 RGB image h1 Using skimage to do region based segmentation h3 A more complex example h2 Conclusion ", "stargazers_count": 0, "forks_count": 0, "description": "org wiki Visual_artifact We start with the cutted image and try to remove artifacts using the functionsprovided by the scipy. com datasets n mnist dataset notmnist. This is why the images are suffixed the thecolor even though they are grayscale PNG images. Starting with simple threasholdsIn the plots above we see that the mean value of intensity is a robust choice to outline locations red blue and yellow channels. ndimage python library. The image with uuid 002daad6 bbc9 11e8 b2bc ac1f6b6435d0 used throughout the notebook isclassified by a human and supported by scientific evidence that the protein marked in the green image have the main occurrence in the Golgi apparatus https en. org wiki Feature_engineering with our knowledge of the meaning of the data. With this threasholdwe can see the Golgi apparatus outlined. org wiki Canny_edge_detector Color visualization of the Protein Atlas images A first approach for creating an RGBA Red Green Blue and Alpha Using numpy array to convert 4 grayscale imagens into 4 red green blue yellow imagesThere are several ways of doing this. I have got some insights and a better understanding of the images and of the techniques. org wiki Golgi_apparatus As you can see in the plotting above it occurs in other organelles but there are hot spots aroundthe nucclei. com PrematureOptimization or a feature engeeneared https en. Image to convert the 4 grayscale images into 1 RGB image Using skimage to do region based segmentation A more complex example ConclusionWe explored some image processing techniques like segmentation and worked with the image encoding. This competition have the target of classify the images by guessingwhere is the main occurrence of the protein whose intensity is illustrated by the green image. Doing granulometry with scipy. But there are specialized functions to image conversion in the libraries like PIL. Compute radii in the 3rd column. Maybe they are not all useful for this competition but their use with microscope image was very interesting. org wiki Fluorescence_microscope images with four channels. png The bitwise operations keeps the information but another options is use simple image reduction that are more efficient. May be you can use it to learn how to use np. The images are fluorescence microscope https en. The result is the same. Maybe we can use some threashold to cut off the noise. Maybe We can use this as a compressed input I sweare that I am not doing early optimization http wiki. To show that the information was not lost we can recreate the boolean typed array from the one packed in 64bit integersWith this approach we can have taken an 1 Magabyte image and converted into a meaningful 32 Kilobyte one. Adding noise to image Using scipy. Using sklearn to do spectral clusteringWell we know that the blue images are from nucleus and that the mean theashold is the simplest and gives enclosed surfaces. The following is a bit more optimized. org humancell organelle Plotting the image with the histogramThe histogram is centered in the mean to be more meaningful. CuttingThe images are generated by marking the proteins with a fluorescent molecule. The protein of interest is visualized in green while reference markers for microtubules red endoplasmic reticulum yellow and nucleus blue outline the cell. Playing with the images of the Protein Altas IntroductionIn this notebook several image processing techniques are experimented. To the green channel the 95 percentile is a better choice. The nucleus is outlined with few artfacts. png attachment notmnist. ndimage to remove artifactsVisual artifacts also artefacts are anomalies apparent during visual representation as in digital graphics and other forms of imagery particularly microscopy. Converting grayscale into a bitmap boolean array packet in 64bit wordsTake the yellow channel with the Li s threasholdWe have got 512x512 matrix of boolean values. featureThe Canny edge detector is an edge detection operator that uses a multi stage algorithm to detect a wide range of edges in images. Can we count it Well may be i have used the wrong functions and or parameters. org wiki Blob_detectionMay be the patterns of the blobs could be used as a feature Canny edge detector with skimage. Send your comments and if you fork the notebook or use some function code idea somewhere else I will be glad to see your improvements. ndimage to do segmentation An easier way to count nucleos Simple fast and acceptable result. I left here only the naive approach and the one with the best speedup I have found. What do you think Comments are welcomed. org wiki 64 bit_computing words. filters thresholdsEach threashold function makes a different black and white representation of the grayscale intensity level image. ndimageOptical granulometry is the process of measuring the different grain sizes in a granular material. This is largely based on the tutorials of the correspoding python library. This 64x64 grayscale image below does not looks like the 28x26 images from the n mnist https www. The objective is just see the result of them when applied to the images of this dataset. When the pixel have more intensity then we see that in that point of the imagethere are more protein of that kind. For more information about the images of the Protein Atlas dataset see https www. org wiki Optical_granulometry Selecting the contour using skimage Doing blob detection with skimageSee https en. apply threshold remove artifacts connected to image border label image regions take regions with large enough areas draw rectangle around segmented coins. We can represent this information with 32768 bytes or 4096 64bit https en. ", "id": "alexpcli/playing-with-the-images-of-the-protein-atlas", "size": "5879", "language": "python", "html_url": "https://www.kaggle.com/code/alexpcli/playing-with-the-images-of-the-protein-atlas", "git_url": "https://www.kaggle.com/code/alexpcli/playing-with-the-images-of-the-protein-atlas", "script": "granulometry to_rgba2 pack_image plot_cut matplotlib.pyplot plot_file plot_granulos to_rgba disk_structure pack_image2 set_title numpy ", "entities": "(('ndimageOptical granulometry', 'granular material'), 'be') (('reference green markers', 'nucleus cell'), 'visualize') (('objective', 'dataset'), 'see') (('patterns', 'skimage'), 'wiki') (('also artefacts', 'other imagery'), 'ndimage') (('i', 'wrong functions'), 'count') (('somewhere else I', 'improvements'), 'send') (('yellow channel', 'boolean values'), 'wordstake') (('nucleus', 'few artfacts'), 'outline') (('mean theashold', 'enclosed surfaces'), 'use') (('ConclusionWe', 'image encoding'), 'image') (('approach we', 'Kilobyte meaningful 32 one'), 'recreate') (('image processing notebook several techniques', 'Protein Altas IntroductionIn'), 'experiment') (('I', 'wiki'), 'use') (('org wiki', 'data'), 'feature_engineere') (('Maybe we', 'noise'), 'use') (('grayscale 64x64 image', 'n mnist https www'), 'look') (('filters threashold function', 'grayscale intensity level image'), 'make') (('mean value', 'robust outline locations red blue channels'), 'start') (('protein', 'Golgi apparatus https'), 'have') (('even they', 'thecolor'), 'be') (('org humancell organelle', 'mean'), 'center') (('you', 'how np'), 'be') (('intensity', 'green image'), 'have') (('Using', 'imagesThere several this'), 'visualization') (('org wiki you', 'hot nucclei'), 'golgi_apparatus') (('We', '32768 bytes'), 'represent') (('I', 'best speedup'), 'leave') (('use', 'microscope image'), 'be') (('then we', 'more kind'), 'see') (('org wiki We', 'scipy'), 'Visual_artifact') (('CuttingThe images', 'fluorescent molecule'), 'generate') (('edge detection that', 'images'), 'be') (('that', 'image simple reduction'), 'keep') (('This', 'python correspoding library'), 'base') (('I', 'techniques'), 'get') (('95 percentile', 'green channel'), 'be') "}